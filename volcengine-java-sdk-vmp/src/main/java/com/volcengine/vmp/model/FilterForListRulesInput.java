/*
 * vmp
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vmp.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * FilterForListRulesInput
 */



public class FilterForListRulesInput {
  @SerializedName("Kind")
  private String kind = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("RuleFileNames")
  private List<String> ruleFileNames = null;

  @SerializedName("RuleGroupNames")
  private List<String> ruleGroupNames = null;

  @SerializedName("Status")
  private List<String> status = null;

  @SerializedName("WorkspaceId")
  private String workspaceId = null;

  public FilterForListRulesInput kind(String kind) {
    this.kind = kind;
    return this;
  }

   /**
   * Get kind
   * @return kind
  **/
  @Schema(description = "")
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }

  public FilterForListRulesInput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public FilterForListRulesInput ruleFileNames(List<String> ruleFileNames) {
    this.ruleFileNames = ruleFileNames;
    return this;
  }

  public FilterForListRulesInput addRuleFileNamesItem(String ruleFileNamesItem) {
    if (this.ruleFileNames == null) {
      this.ruleFileNames = new ArrayList<String>();
    }
    this.ruleFileNames.add(ruleFileNamesItem);
    return this;
  }

   /**
   * Get ruleFileNames
   * @return ruleFileNames
  **/
  @Schema(description = "")
  public List<String> getRuleFileNames() {
    return ruleFileNames;
  }

  public void setRuleFileNames(List<String> ruleFileNames) {
    this.ruleFileNames = ruleFileNames;
  }

  public FilterForListRulesInput ruleGroupNames(List<String> ruleGroupNames) {
    this.ruleGroupNames = ruleGroupNames;
    return this;
  }

  public FilterForListRulesInput addRuleGroupNamesItem(String ruleGroupNamesItem) {
    if (this.ruleGroupNames == null) {
      this.ruleGroupNames = new ArrayList<String>();
    }
    this.ruleGroupNames.add(ruleGroupNamesItem);
    return this;
  }

   /**
   * Get ruleGroupNames
   * @return ruleGroupNames
  **/
  @Schema(description = "")
  public List<String> getRuleGroupNames() {
    return ruleGroupNames;
  }

  public void setRuleGroupNames(List<String> ruleGroupNames) {
    this.ruleGroupNames = ruleGroupNames;
  }

  public FilterForListRulesInput status(List<String> status) {
    this.status = status;
    return this;
  }

  public FilterForListRulesInput addStatusItem(String statusItem) {
    if (this.status == null) {
      this.status = new ArrayList<String>();
    }
    this.status.add(statusItem);
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public List<String> getStatus() {
    return status;
  }

  public void setStatus(List<String> status) {
    this.status = status;
  }

  public FilterForListRulesInput workspaceId(String workspaceId) {
    this.workspaceId = workspaceId;
    return this;
  }

   /**
   * Get workspaceId
   * @return workspaceId
  **/
  @Schema(description = "")
  public String getWorkspaceId() {
    return workspaceId;
  }

  public void setWorkspaceId(String workspaceId) {
    this.workspaceId = workspaceId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilterForListRulesInput filterForListRulesInput = (FilterForListRulesInput) o;
    return Objects.equals(this.kind, filterForListRulesInput.kind) &&
        Objects.equals(this.name, filterForListRulesInput.name) &&
        Objects.equals(this.ruleFileNames, filterForListRulesInput.ruleFileNames) &&
        Objects.equals(this.ruleGroupNames, filterForListRulesInput.ruleGroupNames) &&
        Objects.equals(this.status, filterForListRulesInput.status) &&
        Objects.equals(this.workspaceId, filterForListRulesInput.workspaceId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(kind, name, ruleFileNames, ruleGroupNames, status, workspaceId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilterForListRulesInput {\n");
    
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ruleFileNames: ").append(toIndentedString(ruleFileNames)).append("\n");
    sb.append("    ruleGroupNames: ").append(toIndentedString(ruleGroupNames)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    workspaceId: ").append(toIndentedString(workspaceId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
