/*
 * vmp
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vmp.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vmp.model.ActiveForListNotifyTemplatesOutput;
import com.volcengine.vmp.model.ResolvedForListNotifyTemplatesOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ItemForListNotifyTemplatesOutput
 */



public class ItemForListNotifyTemplatesOutput {
  @SerializedName("Active")
  private ActiveForListNotifyTemplatesOutput active = null;

  @SerializedName("Channel")
  private String channel = null;

  @SerializedName("CreateTime")
  private String createTime = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Resolved")
  private ResolvedForListNotifyTemplatesOutput resolved = null;

  @SerializedName("UpdateTime")
  private String updateTime = null;

  public ItemForListNotifyTemplatesOutput active(ActiveForListNotifyTemplatesOutput active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @Valid
  @Schema(description = "")
  public ActiveForListNotifyTemplatesOutput getActive() {
    return active;
  }

  public void setActive(ActiveForListNotifyTemplatesOutput active) {
    this.active = active;
  }

  public ItemForListNotifyTemplatesOutput channel(String channel) {
    this.channel = channel;
    return this;
  }

   /**
   * Get channel
   * @return channel
  **/
  @Schema(description = "")
  public String getChannel() {
    return channel;
  }

  public void setChannel(String channel) {
    this.channel = channel;
  }

  public ItemForListNotifyTemplatesOutput createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }

  public ItemForListNotifyTemplatesOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ItemForListNotifyTemplatesOutput id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ItemForListNotifyTemplatesOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ItemForListNotifyTemplatesOutput resolved(ResolvedForListNotifyTemplatesOutput resolved) {
    this.resolved = resolved;
    return this;
  }

   /**
   * Get resolved
   * @return resolved
  **/
  @Valid
  @Schema(description = "")
  public ResolvedForListNotifyTemplatesOutput getResolved() {
    return resolved;
  }

  public void setResolved(ResolvedForListNotifyTemplatesOutput resolved) {
    this.resolved = resolved;
  }

  public ItemForListNotifyTemplatesOutput updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemForListNotifyTemplatesOutput itemForListNotifyTemplatesOutput = (ItemForListNotifyTemplatesOutput) o;
    return Objects.equals(this.active, itemForListNotifyTemplatesOutput.active) &&
        Objects.equals(this.channel, itemForListNotifyTemplatesOutput.channel) &&
        Objects.equals(this.createTime, itemForListNotifyTemplatesOutput.createTime) &&
        Objects.equals(this.description, itemForListNotifyTemplatesOutput.description) &&
        Objects.equals(this.id, itemForListNotifyTemplatesOutput.id) &&
        Objects.equals(this.name, itemForListNotifyTemplatesOutput.name) &&
        Objects.equals(this.resolved, itemForListNotifyTemplatesOutput.resolved) &&
        Objects.equals(this.updateTime, itemForListNotifyTemplatesOutput.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, channel, createTime, description, id, name, resolved, updateTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemForListNotifyTemplatesOutput {\n");
    
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    resolved: ").append(toIndentedString(resolved)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
