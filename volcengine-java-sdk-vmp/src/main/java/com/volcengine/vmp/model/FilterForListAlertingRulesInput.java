/*
 * vmp
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vmp.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * FilterForListAlertingRulesInput
 */



public class FilterForListAlertingRulesInput {
  @SerializedName("GroupIds")
  private List<String> groupIds = null;

  @SerializedName("Ids")
  private List<String> ids = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("NotifyGroupPolicyIds")
  private List<String> notifyGroupPolicyIds = null;

  @SerializedName("NotifyPolicyIds")
  private List<String> notifyPolicyIds = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("TemplateIds")
  private List<String> templateIds = null;

  @SerializedName("Type")
  private String type = null;

  @SerializedName("WorkspaceId")
  private String workspaceId = null;

  public FilterForListAlertingRulesInput groupIds(List<String> groupIds) {
    this.groupIds = groupIds;
    return this;
  }

  public FilterForListAlertingRulesInput addGroupIdsItem(String groupIdsItem) {
    if (this.groupIds == null) {
      this.groupIds = new ArrayList<String>();
    }
    this.groupIds.add(groupIdsItem);
    return this;
  }

   /**
   * Get groupIds
   * @return groupIds
  **/
  @Schema(description = "")
  public List<String> getGroupIds() {
    return groupIds;
  }

  public void setGroupIds(List<String> groupIds) {
    this.groupIds = groupIds;
  }

  public FilterForListAlertingRulesInput ids(List<String> ids) {
    this.ids = ids;
    return this;
  }

  public FilterForListAlertingRulesInput addIdsItem(String idsItem) {
    if (this.ids == null) {
      this.ids = new ArrayList<String>();
    }
    this.ids.add(idsItem);
    return this;
  }

   /**
   * Get ids
   * @return ids
  **/
  @Schema(description = "")
  public List<String> getIds() {
    return ids;
  }

  public void setIds(List<String> ids) {
    this.ids = ids;
  }

  public FilterForListAlertingRulesInput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public FilterForListAlertingRulesInput notifyGroupPolicyIds(List<String> notifyGroupPolicyIds) {
    this.notifyGroupPolicyIds = notifyGroupPolicyIds;
    return this;
  }

  public FilterForListAlertingRulesInput addNotifyGroupPolicyIdsItem(String notifyGroupPolicyIdsItem) {
    if (this.notifyGroupPolicyIds == null) {
      this.notifyGroupPolicyIds = new ArrayList<String>();
    }
    this.notifyGroupPolicyIds.add(notifyGroupPolicyIdsItem);
    return this;
  }

   /**
   * Get notifyGroupPolicyIds
   * @return notifyGroupPolicyIds
  **/
  @Schema(description = "")
  public List<String> getNotifyGroupPolicyIds() {
    return notifyGroupPolicyIds;
  }

  public void setNotifyGroupPolicyIds(List<String> notifyGroupPolicyIds) {
    this.notifyGroupPolicyIds = notifyGroupPolicyIds;
  }

  public FilterForListAlertingRulesInput notifyPolicyIds(List<String> notifyPolicyIds) {
    this.notifyPolicyIds = notifyPolicyIds;
    return this;
  }

  public FilterForListAlertingRulesInput addNotifyPolicyIdsItem(String notifyPolicyIdsItem) {
    if (this.notifyPolicyIds == null) {
      this.notifyPolicyIds = new ArrayList<String>();
    }
    this.notifyPolicyIds.add(notifyPolicyIdsItem);
    return this;
  }

   /**
   * Get notifyPolicyIds
   * @return notifyPolicyIds
  **/
  @Schema(description = "")
  public List<String> getNotifyPolicyIds() {
    return notifyPolicyIds;
  }

  public void setNotifyPolicyIds(List<String> notifyPolicyIds) {
    this.notifyPolicyIds = notifyPolicyIds;
  }

  public FilterForListAlertingRulesInput status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public FilterForListAlertingRulesInput templateIds(List<String> templateIds) {
    this.templateIds = templateIds;
    return this;
  }

  public FilterForListAlertingRulesInput addTemplateIdsItem(String templateIdsItem) {
    if (this.templateIds == null) {
      this.templateIds = new ArrayList<String>();
    }
    this.templateIds.add(templateIdsItem);
    return this;
  }

   /**
   * Get templateIds
   * @return templateIds
  **/
  @Schema(description = "")
  public List<String> getTemplateIds() {
    return templateIds;
  }

  public void setTemplateIds(List<String> templateIds) {
    this.templateIds = templateIds;
  }

  public FilterForListAlertingRulesInput type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public FilterForListAlertingRulesInput workspaceId(String workspaceId) {
    this.workspaceId = workspaceId;
    return this;
  }

   /**
   * Get workspaceId
   * @return workspaceId
  **/
  @Schema(description = "")
  public String getWorkspaceId() {
    return workspaceId;
  }

  public void setWorkspaceId(String workspaceId) {
    this.workspaceId = workspaceId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilterForListAlertingRulesInput filterForListAlertingRulesInput = (FilterForListAlertingRulesInput) o;
    return Objects.equals(this.groupIds, filterForListAlertingRulesInput.groupIds) &&
        Objects.equals(this.ids, filterForListAlertingRulesInput.ids) &&
        Objects.equals(this.name, filterForListAlertingRulesInput.name) &&
        Objects.equals(this.notifyGroupPolicyIds, filterForListAlertingRulesInput.notifyGroupPolicyIds) &&
        Objects.equals(this.notifyPolicyIds, filterForListAlertingRulesInput.notifyPolicyIds) &&
        Objects.equals(this.status, filterForListAlertingRulesInput.status) &&
        Objects.equals(this.templateIds, filterForListAlertingRulesInput.templateIds) &&
        Objects.equals(this.type, filterForListAlertingRulesInput.type) &&
        Objects.equals(this.workspaceId, filterForListAlertingRulesInput.workspaceId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(groupIds, ids, name, notifyGroupPolicyIds, notifyPolicyIds, status, templateIds, type, workspaceId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilterForListAlertingRulesInput {\n");
    
    sb.append("    groupIds: ").append(toIndentedString(groupIds)).append("\n");
    sb.append("    ids: ").append(toIndentedString(ids)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    notifyGroupPolicyIds: ").append(toIndentedString(notifyGroupPolicyIds)).append("\n");
    sb.append("    notifyPolicyIds: ").append(toIndentedString(notifyPolicyIds)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    templateIds: ").append(toIndentedString(templateIds)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    workspaceId: ").append(toIndentedString(workspaceId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
