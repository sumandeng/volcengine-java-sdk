/*
 * vmp
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vmp.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vmp.model.AnnotationForUpdateAlertingRuleInput;
import com.volcengine.vmp.model.LabelForUpdateAlertingRuleInput;
import com.volcengine.vmp.model.LevelForUpdateAlertingRuleInput;
import com.volcengine.vmp.model.QueryForUpdateAlertingRuleInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * UpdateAlertingRuleRequest
 */



public class UpdateAlertingRuleRequest {
  @SerializedName("Annotations")
  private List<AnnotationForUpdateAlertingRuleInput> annotations = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("Labels")
  private List<LabelForUpdateAlertingRuleInput> labels = null;

  @SerializedName("Levels")
  private List<LevelForUpdateAlertingRuleInput> levels = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("NotifyGroupPolicyId")
  private String notifyGroupPolicyId = null;

  @SerializedName("NotifyPolicyId")
  private String notifyPolicyId = null;

  @SerializedName("Query")
  private QueryForUpdateAlertingRuleInput query = null;

  @SerializedName("Type")
  private String type = null;

  public UpdateAlertingRuleRequest annotations(List<AnnotationForUpdateAlertingRuleInput> annotations) {
    this.annotations = annotations;
    return this;
  }

  public UpdateAlertingRuleRequest addAnnotationsItem(AnnotationForUpdateAlertingRuleInput annotationsItem) {
    if (this.annotations == null) {
      this.annotations = new ArrayList<AnnotationForUpdateAlertingRuleInput>();
    }
    this.annotations.add(annotationsItem);
    return this;
  }

   /**
   * Get annotations
   * @return annotations
  **/
  @Valid
  @Schema(description = "")
  public List<AnnotationForUpdateAlertingRuleInput> getAnnotations() {
    return annotations;
  }

  public void setAnnotations(List<AnnotationForUpdateAlertingRuleInput> annotations) {
    this.annotations = annotations;
  }

  public UpdateAlertingRuleRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public UpdateAlertingRuleRequest id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public UpdateAlertingRuleRequest labels(List<LabelForUpdateAlertingRuleInput> labels) {
    this.labels = labels;
    return this;
  }

  public UpdateAlertingRuleRequest addLabelsItem(LabelForUpdateAlertingRuleInput labelsItem) {
    if (this.labels == null) {
      this.labels = new ArrayList<LabelForUpdateAlertingRuleInput>();
    }
    this.labels.add(labelsItem);
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @Valid
  @Schema(description = "")
  public List<LabelForUpdateAlertingRuleInput> getLabels() {
    return labels;
  }

  public void setLabels(List<LabelForUpdateAlertingRuleInput> labels) {
    this.labels = labels;
  }

  public UpdateAlertingRuleRequest levels(List<LevelForUpdateAlertingRuleInput> levels) {
    this.levels = levels;
    return this;
  }

  public UpdateAlertingRuleRequest addLevelsItem(LevelForUpdateAlertingRuleInput levelsItem) {
    if (this.levels == null) {
      this.levels = new ArrayList<LevelForUpdateAlertingRuleInput>();
    }
    this.levels.add(levelsItem);
    return this;
  }

   /**
   * Get levels
   * @return levels
  **/
  @Valid
  @Schema(description = "")
  public List<LevelForUpdateAlertingRuleInput> getLevels() {
    return levels;
  }

  public void setLevels(List<LevelForUpdateAlertingRuleInput> levels) {
    this.levels = levels;
  }

  public UpdateAlertingRuleRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public UpdateAlertingRuleRequest notifyGroupPolicyId(String notifyGroupPolicyId) {
    this.notifyGroupPolicyId = notifyGroupPolicyId;
    return this;
  }

   /**
   * Get notifyGroupPolicyId
   * @return notifyGroupPolicyId
  **/
  @Schema(description = "")
  public String getNotifyGroupPolicyId() {
    return notifyGroupPolicyId;
  }

  public void setNotifyGroupPolicyId(String notifyGroupPolicyId) {
    this.notifyGroupPolicyId = notifyGroupPolicyId;
  }

  public UpdateAlertingRuleRequest notifyPolicyId(String notifyPolicyId) {
    this.notifyPolicyId = notifyPolicyId;
    return this;
  }

   /**
   * Get notifyPolicyId
   * @return notifyPolicyId
  **/
  @Schema(description = "")
  public String getNotifyPolicyId() {
    return notifyPolicyId;
  }

  public void setNotifyPolicyId(String notifyPolicyId) {
    this.notifyPolicyId = notifyPolicyId;
  }

  public UpdateAlertingRuleRequest query(QueryForUpdateAlertingRuleInput query) {
    this.query = query;
    return this;
  }

   /**
   * Get query
   * @return query
  **/
  @Valid
  @Schema(description = "")
  public QueryForUpdateAlertingRuleInput getQuery() {
    return query;
  }

  public void setQuery(QueryForUpdateAlertingRuleInput query) {
    this.query = query;
  }

  public UpdateAlertingRuleRequest type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateAlertingRuleRequest updateAlertingRuleRequest = (UpdateAlertingRuleRequest) o;
    return Objects.equals(this.annotations, updateAlertingRuleRequest.annotations) &&
        Objects.equals(this.description, updateAlertingRuleRequest.description) &&
        Objects.equals(this.id, updateAlertingRuleRequest.id) &&
        Objects.equals(this.labels, updateAlertingRuleRequest.labels) &&
        Objects.equals(this.levels, updateAlertingRuleRequest.levels) &&
        Objects.equals(this.name, updateAlertingRuleRequest.name) &&
        Objects.equals(this.notifyGroupPolicyId, updateAlertingRuleRequest.notifyGroupPolicyId) &&
        Objects.equals(this.notifyPolicyId, updateAlertingRuleRequest.notifyPolicyId) &&
        Objects.equals(this.query, updateAlertingRuleRequest.query) &&
        Objects.equals(this.type, updateAlertingRuleRequest.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(annotations, description, id, labels, levels, name, notifyGroupPolicyId, notifyPolicyId, query, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateAlertingRuleRequest {\n");
    
    sb.append("    annotations: ").append(toIndentedString(annotations)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    levels: ").append(toIndentedString(levels)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    notifyGroupPolicyId: ").append(toIndentedString(notifyGroupPolicyId)).append("\n");
    sb.append("    notifyPolicyId: ").append(toIndentedString(notifyPolicyId)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
