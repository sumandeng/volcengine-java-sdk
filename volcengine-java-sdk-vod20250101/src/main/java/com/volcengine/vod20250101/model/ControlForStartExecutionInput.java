/*
 * vod20250101
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vod20250101.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ControlForStartExecutionInput
 */



public class ControlForStartExecutionInput {
  @SerializedName("CallbackArgs")
  private String callbackArgs = null;

  @SerializedName("ClientToken")
  private String clientToken = null;

  @SerializedName("EnableLowPriority")
  private Boolean enableLowPriority = null;

  @SerializedName("Priority")
  private Integer priority = null;

  public ControlForStartExecutionInput callbackArgs(String callbackArgs) {
    this.callbackArgs = callbackArgs;
    return this;
  }

   /**
   * Get callbackArgs
   * @return callbackArgs
  **/
  @Schema(description = "")
  public String getCallbackArgs() {
    return callbackArgs;
  }

  public void setCallbackArgs(String callbackArgs) {
    this.callbackArgs = callbackArgs;
  }

  public ControlForStartExecutionInput clientToken(String clientToken) {
    this.clientToken = clientToken;
    return this;
  }

   /**
   * Get clientToken
   * @return clientToken
  **/
  @Schema(description = "")
  public String getClientToken() {
    return clientToken;
  }

  public void setClientToken(String clientToken) {
    this.clientToken = clientToken;
  }

  public ControlForStartExecutionInput enableLowPriority(Boolean enableLowPriority) {
    this.enableLowPriority = enableLowPriority;
    return this;
  }

   /**
   * Get enableLowPriority
   * @return enableLowPriority
  **/
  @Schema(description = "")
  public Boolean isEnableLowPriority() {
    return enableLowPriority;
  }

  public void setEnableLowPriority(Boolean enableLowPriority) {
    this.enableLowPriority = enableLowPriority;
  }

  public ControlForStartExecutionInput priority(Integer priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @Schema(description = "")
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ControlForStartExecutionInput controlForStartExecutionInput = (ControlForStartExecutionInput) o;
    return Objects.equals(this.callbackArgs, controlForStartExecutionInput.callbackArgs) &&
        Objects.equals(this.clientToken, controlForStartExecutionInput.clientToken) &&
        Objects.equals(this.enableLowPriority, controlForStartExecutionInput.enableLowPriority) &&
        Objects.equals(this.priority, controlForStartExecutionInput.priority);
  }

  @Override
  public int hashCode() {
    return Objects.hash(callbackArgs, clientToken, enableLowPriority, priority);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ControlForStartExecutionInput {\n");
    
    sb.append("    callbackArgs: ").append(toIndentedString(callbackArgs)).append("\n");
    sb.append("    clientToken: ").append(toIndentedString(clientToken)).append("\n");
    sb.append("    enableLowPriority: ").append(toIndentedString(enableLowPriority)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
