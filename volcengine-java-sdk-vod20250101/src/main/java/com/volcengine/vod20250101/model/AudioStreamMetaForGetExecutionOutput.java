/*
 * vod20250101
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vod20250101.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * AudioStreamMetaForGetExecutionOutput
 */



public class AudioStreamMetaForGetExecutionOutput {
  @SerializedName("Bitrate")
  private Integer bitrate = null;

  @SerializedName("Codec")
  private String codec = null;

  @SerializedName("Duration")
  private Float duration = null;

  @SerializedName("Quality")
  private String quality = null;

  @SerializedName("SampleRate")
  private Integer sampleRate = null;

  public AudioStreamMetaForGetExecutionOutput bitrate(Integer bitrate) {
    this.bitrate = bitrate;
    return this;
  }

   /**
   * Get bitrate
   * @return bitrate
  **/
  @Schema(description = "")
  public Integer getBitrate() {
    return bitrate;
  }

  public void setBitrate(Integer bitrate) {
    this.bitrate = bitrate;
  }

  public AudioStreamMetaForGetExecutionOutput codec(String codec) {
    this.codec = codec;
    return this;
  }

   /**
   * Get codec
   * @return codec
  **/
  @Schema(description = "")
  public String getCodec() {
    return codec;
  }

  public void setCodec(String codec) {
    this.codec = codec;
  }

  public AudioStreamMetaForGetExecutionOutput duration(Float duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @Schema(description = "")
  public Float getDuration() {
    return duration;
  }

  public void setDuration(Float duration) {
    this.duration = duration;
  }

  public AudioStreamMetaForGetExecutionOutput quality(String quality) {
    this.quality = quality;
    return this;
  }

   /**
   * Get quality
   * @return quality
  **/
  @Schema(description = "")
  public String getQuality() {
    return quality;
  }

  public void setQuality(String quality) {
    this.quality = quality;
  }

  public AudioStreamMetaForGetExecutionOutput sampleRate(Integer sampleRate) {
    this.sampleRate = sampleRate;
    return this;
  }

   /**
   * Get sampleRate
   * @return sampleRate
  **/
  @Schema(description = "")
  public Integer getSampleRate() {
    return sampleRate;
  }

  public void setSampleRate(Integer sampleRate) {
    this.sampleRate = sampleRate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AudioStreamMetaForGetExecutionOutput audioStreamMetaForGetExecutionOutput = (AudioStreamMetaForGetExecutionOutput) o;
    return Objects.equals(this.bitrate, audioStreamMetaForGetExecutionOutput.bitrate) &&
        Objects.equals(this.codec, audioStreamMetaForGetExecutionOutput.codec) &&
        Objects.equals(this.duration, audioStreamMetaForGetExecutionOutput.duration) &&
        Objects.equals(this.quality, audioStreamMetaForGetExecutionOutput.quality) &&
        Objects.equals(this.sampleRate, audioStreamMetaForGetExecutionOutput.sampleRate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bitrate, codec, duration, quality, sampleRate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AudioStreamMetaForGetExecutionOutput {\n");
    
    sb.append("    bitrate: ").append(toIndentedString(bitrate)).append("\n");
    sb.append("    codec: ").append(toIndentedString(codec)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    quality: ").append(toIndentedString(quality)).append("\n");
    sb.append("    sampleRate: ").append(toIndentedString(sampleRate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
