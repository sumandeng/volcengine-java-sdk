/*
 * vod20250101
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vod20250101.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ConvertClipForGetExecutionOutput
 */



public class ConvertClipForGetExecutionOutput {
  @SerializedName("Dialogue")
  private String dialogue = null;

  @SerializedName("End")
  private Double end = null;

  @SerializedName("Offset")
  private Integer offset = null;

  @SerializedName("Score")
  private Double score = null;

  @SerializedName("Snapshot")
  private String snapshot = null;

  @SerializedName("Start")
  private Double start = null;

  @SerializedName("Summary")
  private String summary = null;

  @SerializedName("Title")
  private String title = null;

  @SerializedName("VideoIndex")
  private Integer videoIndex = null;

  public ConvertClipForGetExecutionOutput dialogue(String dialogue) {
    this.dialogue = dialogue;
    return this;
  }

   /**
   * Get dialogue
   * @return dialogue
  **/
  @Schema(description = "")
  public String getDialogue() {
    return dialogue;
  }

  public void setDialogue(String dialogue) {
    this.dialogue = dialogue;
  }

  public ConvertClipForGetExecutionOutput end(Double end) {
    this.end = end;
    return this;
  }

   /**
   * Get end
   * @return end
  **/
  @Schema(description = "")
  public Double getEnd() {
    return end;
  }

  public void setEnd(Double end) {
    this.end = end;
  }

  public ConvertClipForGetExecutionOutput offset(Integer offset) {
    this.offset = offset;
    return this;
  }

   /**
   * Get offset
   * @return offset
  **/
  @Schema(description = "")
  public Integer getOffset() {
    return offset;
  }

  public void setOffset(Integer offset) {
    this.offset = offset;
  }

  public ConvertClipForGetExecutionOutput score(Double score) {
    this.score = score;
    return this;
  }

   /**
   * Get score
   * @return score
  **/
  @Schema(description = "")
  public Double getScore() {
    return score;
  }

  public void setScore(Double score) {
    this.score = score;
  }

  public ConvertClipForGetExecutionOutput snapshot(String snapshot) {
    this.snapshot = snapshot;
    return this;
  }

   /**
   * Get snapshot
   * @return snapshot
  **/
  @Schema(description = "")
  public String getSnapshot() {
    return snapshot;
  }

  public void setSnapshot(String snapshot) {
    this.snapshot = snapshot;
  }

  public ConvertClipForGetExecutionOutput start(Double start) {
    this.start = start;
    return this;
  }

   /**
   * Get start
   * @return start
  **/
  @Schema(description = "")
  public Double getStart() {
    return start;
  }

  public void setStart(Double start) {
    this.start = start;
  }

  public ConvertClipForGetExecutionOutput summary(String summary) {
    this.summary = summary;
    return this;
  }

   /**
   * Get summary
   * @return summary
  **/
  @Schema(description = "")
  public String getSummary() {
    return summary;
  }

  public void setSummary(String summary) {
    this.summary = summary;
  }

  public ConvertClipForGetExecutionOutput title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @Schema(description = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public ConvertClipForGetExecutionOutput videoIndex(Integer videoIndex) {
    this.videoIndex = videoIndex;
    return this;
  }

   /**
   * Get videoIndex
   * @return videoIndex
  **/
  @Schema(description = "")
  public Integer getVideoIndex() {
    return videoIndex;
  }

  public void setVideoIndex(Integer videoIndex) {
    this.videoIndex = videoIndex;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConvertClipForGetExecutionOutput convertClipForGetExecutionOutput = (ConvertClipForGetExecutionOutput) o;
    return Objects.equals(this.dialogue, convertClipForGetExecutionOutput.dialogue) &&
        Objects.equals(this.end, convertClipForGetExecutionOutput.end) &&
        Objects.equals(this.offset, convertClipForGetExecutionOutput.offset) &&
        Objects.equals(this.score, convertClipForGetExecutionOutput.score) &&
        Objects.equals(this.snapshot, convertClipForGetExecutionOutput.snapshot) &&
        Objects.equals(this.start, convertClipForGetExecutionOutput.start) &&
        Objects.equals(this.summary, convertClipForGetExecutionOutput.summary) &&
        Objects.equals(this.title, convertClipForGetExecutionOutput.title) &&
        Objects.equals(this.videoIndex, convertClipForGetExecutionOutput.videoIndex);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dialogue, end, offset, score, snapshot, start, summary, title, videoIndex);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConvertClipForGetExecutionOutput {\n");
    
    sb.append("    dialogue: ").append(toIndentedString(dialogue)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    snapshot: ").append(toIndentedString(snapshot)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    videoIndex: ").append(toIndentedString(videoIndex)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
