/*
 * vod20250101
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vod20250101.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vod20250101.model.ConvertModelForGetExecutionOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ConvertVisionForGetExecutionOutput
 */



public class ConvertVisionForGetExecutionOutput {
  @SerializedName("Content")
  private String content = null;

  @SerializedName("Duration")
  private Double duration = null;

  @SerializedName("Model")
  private ConvertModelForGetExecutionOutput model = null;

  @SerializedName("SnapshotsNumber")
  private Integer snapshotsNumber = null;

  public ConvertVisionForGetExecutionOutput content(String content) {
    this.content = content;
    return this;
  }

   /**
   * Get content
   * @return content
  **/
  @Schema(description = "")
  public String getContent() {
    return content;
  }

  public void setContent(String content) {
    this.content = content;
  }

  public ConvertVisionForGetExecutionOutput duration(Double duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @Schema(description = "")
  public Double getDuration() {
    return duration;
  }

  public void setDuration(Double duration) {
    this.duration = duration;
  }

  public ConvertVisionForGetExecutionOutput model(ConvertModelForGetExecutionOutput model) {
    this.model = model;
    return this;
  }

   /**
   * Get model
   * @return model
  **/
  @Valid
  @Schema(description = "")
  public ConvertModelForGetExecutionOutput getModel() {
    return model;
  }

  public void setModel(ConvertModelForGetExecutionOutput model) {
    this.model = model;
  }

  public ConvertVisionForGetExecutionOutput snapshotsNumber(Integer snapshotsNumber) {
    this.snapshotsNumber = snapshotsNumber;
    return this;
  }

   /**
   * Get snapshotsNumber
   * @return snapshotsNumber
  **/
  @Schema(description = "")
  public Integer getSnapshotsNumber() {
    return snapshotsNumber;
  }

  public void setSnapshotsNumber(Integer snapshotsNumber) {
    this.snapshotsNumber = snapshotsNumber;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConvertVisionForGetExecutionOutput convertVisionForGetExecutionOutput = (ConvertVisionForGetExecutionOutput) o;
    return Objects.equals(this.content, convertVisionForGetExecutionOutput.content) &&
        Objects.equals(this.duration, convertVisionForGetExecutionOutput.duration) &&
        Objects.equals(this.model, convertVisionForGetExecutionOutput.model) &&
        Objects.equals(this.snapshotsNumber, convertVisionForGetExecutionOutput.snapshotsNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(content, duration, model, snapshotsNumber);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConvertVisionForGetExecutionOutput {\n");
    
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    snapshotsNumber: ").append(toIndentedString(snapshotsNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
