/*
 * vod20250101
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vod20250101.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vod20250101.model.PreviewVideoMutedForGetAITranslationProjectOutput;
import com.volcengine.vod20250101.model.TrimForGetAITranslationProjectOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * TargetClipForGetAITranslationProjectOutput
 */



public class TargetClipForGetAITranslationProjectOutput {
  @SerializedName("ClipAudio")
  private PreviewVideoMutedForGetAITranslationProjectOutput clipAudio = null;

  @SerializedName("ClipVideo")
  private PreviewVideoMutedForGetAITranslationProjectOutput clipVideo = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("TrackId")
  private String trackId = null;

  @SerializedName("TranslationType")
  private String translationType = null;

  @SerializedName("Trim")
  private TrimForGetAITranslationProjectOutput trim = null;

  @SerializedName("Volume")
  private Integer volume = null;

  public TargetClipForGetAITranslationProjectOutput clipAudio(PreviewVideoMutedForGetAITranslationProjectOutput clipAudio) {
    this.clipAudio = clipAudio;
    return this;
  }

   /**
   * Get clipAudio
   * @return clipAudio
  **/
  @Valid
  @Schema(description = "")
  public PreviewVideoMutedForGetAITranslationProjectOutput getClipAudio() {
    return clipAudio;
  }

  public void setClipAudio(PreviewVideoMutedForGetAITranslationProjectOutput clipAudio) {
    this.clipAudio = clipAudio;
  }

  public TargetClipForGetAITranslationProjectOutput clipVideo(PreviewVideoMutedForGetAITranslationProjectOutput clipVideo) {
    this.clipVideo = clipVideo;
    return this;
  }

   /**
   * Get clipVideo
   * @return clipVideo
  **/
  @Valid
  @Schema(description = "")
  public PreviewVideoMutedForGetAITranslationProjectOutput getClipVideo() {
    return clipVideo;
  }

  public void setClipVideo(PreviewVideoMutedForGetAITranslationProjectOutput clipVideo) {
    this.clipVideo = clipVideo;
  }

  public TargetClipForGetAITranslationProjectOutput id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public TargetClipForGetAITranslationProjectOutput trackId(String trackId) {
    this.trackId = trackId;
    return this;
  }

   /**
   * Get trackId
   * @return trackId
  **/
  @Schema(description = "")
  public String getTrackId() {
    return trackId;
  }

  public void setTrackId(String trackId) {
    this.trackId = trackId;
  }

  public TargetClipForGetAITranslationProjectOutput translationType(String translationType) {
    this.translationType = translationType;
    return this;
  }

   /**
   * Get translationType
   * @return translationType
  **/
  @Schema(description = "")
  public String getTranslationType() {
    return translationType;
  }

  public void setTranslationType(String translationType) {
    this.translationType = translationType;
  }

  public TargetClipForGetAITranslationProjectOutput trim(TrimForGetAITranslationProjectOutput trim) {
    this.trim = trim;
    return this;
  }

   /**
   * Get trim
   * @return trim
  **/
  @Valid
  @Schema(description = "")
  public TrimForGetAITranslationProjectOutput getTrim() {
    return trim;
  }

  public void setTrim(TrimForGetAITranslationProjectOutput trim) {
    this.trim = trim;
  }

  public TargetClipForGetAITranslationProjectOutput volume(Integer volume) {
    this.volume = volume;
    return this;
  }

   /**
   * Get volume
   * @return volume
  **/
  @Schema(description = "")
  public Integer getVolume() {
    return volume;
  }

  public void setVolume(Integer volume) {
    this.volume = volume;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TargetClipForGetAITranslationProjectOutput targetClipForGetAITranslationProjectOutput = (TargetClipForGetAITranslationProjectOutput) o;
    return Objects.equals(this.clipAudio, targetClipForGetAITranslationProjectOutput.clipAudio) &&
        Objects.equals(this.clipVideo, targetClipForGetAITranslationProjectOutput.clipVideo) &&
        Objects.equals(this.id, targetClipForGetAITranslationProjectOutput.id) &&
        Objects.equals(this.trackId, targetClipForGetAITranslationProjectOutput.trackId) &&
        Objects.equals(this.translationType, targetClipForGetAITranslationProjectOutput.translationType) &&
        Objects.equals(this.trim, targetClipForGetAITranslationProjectOutput.trim) &&
        Objects.equals(this.volume, targetClipForGetAITranslationProjectOutput.volume);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clipAudio, clipVideo, id, trackId, translationType, trim, volume);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TargetClipForGetAITranslationProjectOutput {\n");
    
    sb.append("    clipAudio: ").append(toIndentedString(clipAudio)).append("\n");
    sb.append("    clipVideo: ").append(toIndentedString(clipVideo)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    trackId: ").append(toIndentedString(trackId)).append("\n");
    sb.append("    translationType: ").append(toIndentedString(translationType)).append("\n");
    sb.append("    trim: ").append(toIndentedString(trim)).append("\n");
    sb.append("    volume: ").append(toIndentedString(volume)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
