/*
 * vod20250101
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vod20250101.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vod20250101.model.ImageSetForGetExecutionOutput;
import com.volcengine.vod20250101.model.TextForGetExecutionOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ConvertOcrForGetExecutionOutput
 */



public class ConvertOcrForGetExecutionOutput {
  @SerializedName("Duration")
  private Double duration = null;

  @SerializedName("ImageSet")
  private List<ImageSetForGetExecutionOutput> imageSet = null;

  @SerializedName("Mode")
  private String mode = null;

  @SerializedName("Texts")
  private List<TextForGetExecutionOutput> texts = null;

  public ConvertOcrForGetExecutionOutput duration(Double duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @Schema(description = "")
  public Double getDuration() {
    return duration;
  }

  public void setDuration(Double duration) {
    this.duration = duration;
  }

  public ConvertOcrForGetExecutionOutput imageSet(List<ImageSetForGetExecutionOutput> imageSet) {
    this.imageSet = imageSet;
    return this;
  }

  public ConvertOcrForGetExecutionOutput addImageSetItem(ImageSetForGetExecutionOutput imageSetItem) {
    if (this.imageSet == null) {
      this.imageSet = new ArrayList<ImageSetForGetExecutionOutput>();
    }
    this.imageSet.add(imageSetItem);
    return this;
  }

   /**
   * Get imageSet
   * @return imageSet
  **/
  @Valid
  @Schema(description = "")
  public List<ImageSetForGetExecutionOutput> getImageSet() {
    return imageSet;
  }

  public void setImageSet(List<ImageSetForGetExecutionOutput> imageSet) {
    this.imageSet = imageSet;
  }

  public ConvertOcrForGetExecutionOutput mode(String mode) {
    this.mode = mode;
    return this;
  }

   /**
   * Get mode
   * @return mode
  **/
  @Schema(description = "")
  public String getMode() {
    return mode;
  }

  public void setMode(String mode) {
    this.mode = mode;
  }

  public ConvertOcrForGetExecutionOutput texts(List<TextForGetExecutionOutput> texts) {
    this.texts = texts;
    return this;
  }

  public ConvertOcrForGetExecutionOutput addTextsItem(TextForGetExecutionOutput textsItem) {
    if (this.texts == null) {
      this.texts = new ArrayList<TextForGetExecutionOutput>();
    }
    this.texts.add(textsItem);
    return this;
  }

   /**
   * Get texts
   * @return texts
  **/
  @Valid
  @Schema(description = "")
  public List<TextForGetExecutionOutput> getTexts() {
    return texts;
  }

  public void setTexts(List<TextForGetExecutionOutput> texts) {
    this.texts = texts;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConvertOcrForGetExecutionOutput convertOcrForGetExecutionOutput = (ConvertOcrForGetExecutionOutput) o;
    return Objects.equals(this.duration, convertOcrForGetExecutionOutput.duration) &&
        Objects.equals(this.imageSet, convertOcrForGetExecutionOutput.imageSet) &&
        Objects.equals(this.mode, convertOcrForGetExecutionOutput.mode) &&
        Objects.equals(this.texts, convertOcrForGetExecutionOutput.texts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(duration, imageSet, mode, texts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConvertOcrForGetExecutionOutput {\n");
    
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    imageSet: ").append(toIndentedString(imageSet)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    texts: ").append(toIndentedString(texts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
