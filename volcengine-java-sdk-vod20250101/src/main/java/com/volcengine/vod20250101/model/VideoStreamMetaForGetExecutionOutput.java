/*
 * vod20250101
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vod20250101.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * VideoStreamMetaForGetExecutionOutput
 */



public class VideoStreamMetaForGetExecutionOutput {
  @SerializedName("Bitrate")
  private Integer bitrate = null;

  @SerializedName("Codec")
  private String codec = null;

  @SerializedName("Definition")
  private String definition = null;

  @SerializedName("Duration")
  private Float duration = null;

  @SerializedName("Fps")
  private Float fps = null;

  @SerializedName("Height")
  private Integer height = null;

  @SerializedName("Width")
  private Integer width = null;

  public VideoStreamMetaForGetExecutionOutput bitrate(Integer bitrate) {
    this.bitrate = bitrate;
    return this;
  }

   /**
   * Get bitrate
   * @return bitrate
  **/
  @Schema(description = "")
  public Integer getBitrate() {
    return bitrate;
  }

  public void setBitrate(Integer bitrate) {
    this.bitrate = bitrate;
  }

  public VideoStreamMetaForGetExecutionOutput codec(String codec) {
    this.codec = codec;
    return this;
  }

   /**
   * Get codec
   * @return codec
  **/
  @Schema(description = "")
  public String getCodec() {
    return codec;
  }

  public void setCodec(String codec) {
    this.codec = codec;
  }

  public VideoStreamMetaForGetExecutionOutput definition(String definition) {
    this.definition = definition;
    return this;
  }

   /**
   * Get definition
   * @return definition
  **/
  @Schema(description = "")
  public String getDefinition() {
    return definition;
  }

  public void setDefinition(String definition) {
    this.definition = definition;
  }

  public VideoStreamMetaForGetExecutionOutput duration(Float duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @Schema(description = "")
  public Float getDuration() {
    return duration;
  }

  public void setDuration(Float duration) {
    this.duration = duration;
  }

  public VideoStreamMetaForGetExecutionOutput fps(Float fps) {
    this.fps = fps;
    return this;
  }

   /**
   * Get fps
   * @return fps
  **/
  @Schema(description = "")
  public Float getFps() {
    return fps;
  }

  public void setFps(Float fps) {
    this.fps = fps;
  }

  public VideoStreamMetaForGetExecutionOutput height(Integer height) {
    this.height = height;
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @Schema(description = "")
  public Integer getHeight() {
    return height;
  }

  public void setHeight(Integer height) {
    this.height = height;
  }

  public VideoStreamMetaForGetExecutionOutput width(Integer width) {
    this.width = width;
    return this;
  }

   /**
   * Get width
   * @return width
  **/
  @Schema(description = "")
  public Integer getWidth() {
    return width;
  }

  public void setWidth(Integer width) {
    this.width = width;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VideoStreamMetaForGetExecutionOutput videoStreamMetaForGetExecutionOutput = (VideoStreamMetaForGetExecutionOutput) o;
    return Objects.equals(this.bitrate, videoStreamMetaForGetExecutionOutput.bitrate) &&
        Objects.equals(this.codec, videoStreamMetaForGetExecutionOutput.codec) &&
        Objects.equals(this.definition, videoStreamMetaForGetExecutionOutput.definition) &&
        Objects.equals(this.duration, videoStreamMetaForGetExecutionOutput.duration) &&
        Objects.equals(this.fps, videoStreamMetaForGetExecutionOutput.fps) &&
        Objects.equals(this.height, videoStreamMetaForGetExecutionOutput.height) &&
        Objects.equals(this.width, videoStreamMetaForGetExecutionOutput.width);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bitrate, codec, definition, duration, fps, height, width);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VideoStreamMetaForGetExecutionOutput {\n");
    
    sb.append("    bitrate: ").append(toIndentedString(bitrate)).append("\n");
    sb.append("    codec: ").append(toIndentedString(codec)).append("\n");
    sb.append("    definition: ").append(toIndentedString(definition)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    fps: ").append(toIndentedString(fps)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
