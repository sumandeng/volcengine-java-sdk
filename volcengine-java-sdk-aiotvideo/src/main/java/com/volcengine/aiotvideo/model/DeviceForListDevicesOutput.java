/*
 * aiotvideo
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.aiotvideo.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.aiotvideo.model.AlertNotificationForListDevicesOutput;
import com.volcengine.aiotvideo.model.CoordinatesForListDevicesOutput;
import com.volcengine.aiotvideo.model.DeviceStreamsForListDevicesOutput;
import com.volcengine.aiotvideo.model.DeviceSubStreamForListDevicesOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DeviceForListDevicesOutput
 */



public class DeviceForListDevicesOutput {
  @SerializedName("AlertNotification")
  private AlertNotificationForListDevicesOutput alertNotification = null;

  @SerializedName("AutoPullAfterRegister")
  private Boolean autoPullAfterRegister = null;

  @SerializedName("ChannelNum")
  private Integer channelNum = null;

  @SerializedName("Coordinates")
  private CoordinatesForListDevicesOutput coordinates = null;

  @SerializedName("CreatedAt")
  private String createdAt = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("DeviceID")
  private String deviceID = null;

  @SerializedName("DeviceNSID")
  private String deviceNSID = null;

  @SerializedName("DeviceName")
  private String deviceName = null;

  @SerializedName("DeviceStreams")
  private DeviceStreamsForListDevicesOutput deviceStreams = null;

  @SerializedName("DeviceSubStreams")
  private List<DeviceSubStreamForListDevicesOutput> deviceSubStreams = null;

  @SerializedName("Location")
  private String location = null;

  @SerializedName("Manufactory")
  private String manufactory = null;

  @SerializedName("Password")
  private String password = null;

  @SerializedName("RtpTransportTcp")
  private Boolean rtpTransportTcp = null;

  @SerializedName("SpaceID")
  private String spaceID = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("Type")
  private String type = null;

  @SerializedName("UpdatedAt")
  private String updatedAt = null;

  @SerializedName("UseSubStream")
  private Boolean useSubStream = null;

  @SerializedName("Username")
  private String username = null;

  public DeviceForListDevicesOutput alertNotification(AlertNotificationForListDevicesOutput alertNotification) {
    this.alertNotification = alertNotification;
    return this;
  }

   /**
   * Get alertNotification
   * @return alertNotification
  **/
  @Valid
  @Schema(description = "")
  public AlertNotificationForListDevicesOutput getAlertNotification() {
    return alertNotification;
  }

  public void setAlertNotification(AlertNotificationForListDevicesOutput alertNotification) {
    this.alertNotification = alertNotification;
  }

  public DeviceForListDevicesOutput autoPullAfterRegister(Boolean autoPullAfterRegister) {
    this.autoPullAfterRegister = autoPullAfterRegister;
    return this;
  }

   /**
   * Get autoPullAfterRegister
   * @return autoPullAfterRegister
  **/
  @Schema(description = "")
  public Boolean isAutoPullAfterRegister() {
    return autoPullAfterRegister;
  }

  public void setAutoPullAfterRegister(Boolean autoPullAfterRegister) {
    this.autoPullAfterRegister = autoPullAfterRegister;
  }

  public DeviceForListDevicesOutput channelNum(Integer channelNum) {
    this.channelNum = channelNum;
    return this;
  }

   /**
   * Get channelNum
   * @return channelNum
  **/
  @Schema(description = "")
  public Integer getChannelNum() {
    return channelNum;
  }

  public void setChannelNum(Integer channelNum) {
    this.channelNum = channelNum;
  }

  public DeviceForListDevicesOutput coordinates(CoordinatesForListDevicesOutput coordinates) {
    this.coordinates = coordinates;
    return this;
  }

   /**
   * Get coordinates
   * @return coordinates
  **/
  @Valid
  @Schema(description = "")
  public CoordinatesForListDevicesOutput getCoordinates() {
    return coordinates;
  }

  public void setCoordinates(CoordinatesForListDevicesOutput coordinates) {
    this.coordinates = coordinates;
  }

  public DeviceForListDevicesOutput createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public DeviceForListDevicesOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DeviceForListDevicesOutput deviceID(String deviceID) {
    this.deviceID = deviceID;
    return this;
  }

   /**
   * Get deviceID
   * @return deviceID
  **/
  @Schema(description = "")
  public String getDeviceID() {
    return deviceID;
  }

  public void setDeviceID(String deviceID) {
    this.deviceID = deviceID;
  }

  public DeviceForListDevicesOutput deviceNSID(String deviceNSID) {
    this.deviceNSID = deviceNSID;
    return this;
  }

   /**
   * Get deviceNSID
   * @return deviceNSID
  **/
  @Schema(description = "")
  public String getDeviceNSID() {
    return deviceNSID;
  }

  public void setDeviceNSID(String deviceNSID) {
    this.deviceNSID = deviceNSID;
  }

  public DeviceForListDevicesOutput deviceName(String deviceName) {
    this.deviceName = deviceName;
    return this;
  }

   /**
   * Get deviceName
   * @return deviceName
  **/
  @Schema(description = "")
  public String getDeviceName() {
    return deviceName;
  }

  public void setDeviceName(String deviceName) {
    this.deviceName = deviceName;
  }

  public DeviceForListDevicesOutput deviceStreams(DeviceStreamsForListDevicesOutput deviceStreams) {
    this.deviceStreams = deviceStreams;
    return this;
  }

   /**
   * Get deviceStreams
   * @return deviceStreams
  **/
  @Valid
  @Schema(description = "")
  public DeviceStreamsForListDevicesOutput getDeviceStreams() {
    return deviceStreams;
  }

  public void setDeviceStreams(DeviceStreamsForListDevicesOutput deviceStreams) {
    this.deviceStreams = deviceStreams;
  }

  public DeviceForListDevicesOutput deviceSubStreams(List<DeviceSubStreamForListDevicesOutput> deviceSubStreams) {
    this.deviceSubStreams = deviceSubStreams;
    return this;
  }

  public DeviceForListDevicesOutput addDeviceSubStreamsItem(DeviceSubStreamForListDevicesOutput deviceSubStreamsItem) {
    if (this.deviceSubStreams == null) {
      this.deviceSubStreams = new ArrayList<DeviceSubStreamForListDevicesOutput>();
    }
    this.deviceSubStreams.add(deviceSubStreamsItem);
    return this;
  }

   /**
   * Get deviceSubStreams
   * @return deviceSubStreams
  **/
  @Valid
  @Schema(description = "")
  public List<DeviceSubStreamForListDevicesOutput> getDeviceSubStreams() {
    return deviceSubStreams;
  }

  public void setDeviceSubStreams(List<DeviceSubStreamForListDevicesOutput> deviceSubStreams) {
    this.deviceSubStreams = deviceSubStreams;
  }

  public DeviceForListDevicesOutput location(String location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @Schema(description = "")
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }

  public DeviceForListDevicesOutput manufactory(String manufactory) {
    this.manufactory = manufactory;
    return this;
  }

   /**
   * Get manufactory
   * @return manufactory
  **/
  @Schema(description = "")
  public String getManufactory() {
    return manufactory;
  }

  public void setManufactory(String manufactory) {
    this.manufactory = manufactory;
  }

  public DeviceForListDevicesOutput password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @Schema(description = "")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public DeviceForListDevicesOutput rtpTransportTcp(Boolean rtpTransportTcp) {
    this.rtpTransportTcp = rtpTransportTcp;
    return this;
  }

   /**
   * Get rtpTransportTcp
   * @return rtpTransportTcp
  **/
  @Schema(description = "")
  public Boolean isRtpTransportTcp() {
    return rtpTransportTcp;
  }

  public void setRtpTransportTcp(Boolean rtpTransportTcp) {
    this.rtpTransportTcp = rtpTransportTcp;
  }

  public DeviceForListDevicesOutput spaceID(String spaceID) {
    this.spaceID = spaceID;
    return this;
  }

   /**
   * Get spaceID
   * @return spaceID
  **/
  @Schema(description = "")
  public String getSpaceID() {
    return spaceID;
  }

  public void setSpaceID(String spaceID) {
    this.spaceID = spaceID;
  }

  public DeviceForListDevicesOutput status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public DeviceForListDevicesOutput type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public DeviceForListDevicesOutput updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @Schema(description = "")
  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }

  public DeviceForListDevicesOutput useSubStream(Boolean useSubStream) {
    this.useSubStream = useSubStream;
    return this;
  }

   /**
   * Get useSubStream
   * @return useSubStream
  **/
  @Schema(description = "")
  public Boolean isUseSubStream() {
    return useSubStream;
  }

  public void setUseSubStream(Boolean useSubStream) {
    this.useSubStream = useSubStream;
  }

  public DeviceForListDevicesOutput username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @Schema(description = "")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceForListDevicesOutput deviceForListDevicesOutput = (DeviceForListDevicesOutput) o;
    return Objects.equals(this.alertNotification, deviceForListDevicesOutput.alertNotification) &&
        Objects.equals(this.autoPullAfterRegister, deviceForListDevicesOutput.autoPullAfterRegister) &&
        Objects.equals(this.channelNum, deviceForListDevicesOutput.channelNum) &&
        Objects.equals(this.coordinates, deviceForListDevicesOutput.coordinates) &&
        Objects.equals(this.createdAt, deviceForListDevicesOutput.createdAt) &&
        Objects.equals(this.description, deviceForListDevicesOutput.description) &&
        Objects.equals(this.deviceID, deviceForListDevicesOutput.deviceID) &&
        Objects.equals(this.deviceNSID, deviceForListDevicesOutput.deviceNSID) &&
        Objects.equals(this.deviceName, deviceForListDevicesOutput.deviceName) &&
        Objects.equals(this.deviceStreams, deviceForListDevicesOutput.deviceStreams) &&
        Objects.equals(this.deviceSubStreams, deviceForListDevicesOutput.deviceSubStreams) &&
        Objects.equals(this.location, deviceForListDevicesOutput.location) &&
        Objects.equals(this.manufactory, deviceForListDevicesOutput.manufactory) &&
        Objects.equals(this.password, deviceForListDevicesOutput.password) &&
        Objects.equals(this.rtpTransportTcp, deviceForListDevicesOutput.rtpTransportTcp) &&
        Objects.equals(this.spaceID, deviceForListDevicesOutput.spaceID) &&
        Objects.equals(this.status, deviceForListDevicesOutput.status) &&
        Objects.equals(this.type, deviceForListDevicesOutput.type) &&
        Objects.equals(this.updatedAt, deviceForListDevicesOutput.updatedAt) &&
        Objects.equals(this.useSubStream, deviceForListDevicesOutput.useSubStream) &&
        Objects.equals(this.username, deviceForListDevicesOutput.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alertNotification, autoPullAfterRegister, channelNum, coordinates, createdAt, description, deviceID, deviceNSID, deviceName, deviceStreams, deviceSubStreams, location, manufactory, password, rtpTransportTcp, spaceID, status, type, updatedAt, useSubStream, username);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceForListDevicesOutput {\n");
    
    sb.append("    alertNotification: ").append(toIndentedString(alertNotification)).append("\n");
    sb.append("    autoPullAfterRegister: ").append(toIndentedString(autoPullAfterRegister)).append("\n");
    sb.append("    channelNum: ").append(toIndentedString(channelNum)).append("\n");
    sb.append("    coordinates: ").append(toIndentedString(coordinates)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    deviceID: ").append(toIndentedString(deviceID)).append("\n");
    sb.append("    deviceNSID: ").append(toIndentedString(deviceNSID)).append("\n");
    sb.append("    deviceName: ").append(toIndentedString(deviceName)).append("\n");
    sb.append("    deviceStreams: ").append(toIndentedString(deviceStreams)).append("\n");
    sb.append("    deviceSubStreams: ").append(toIndentedString(deviceSubStreams)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    manufactory: ").append(toIndentedString(manufactory)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    rtpTransportTcp: ").append(toIndentedString(rtpTransportTcp)).append("\n");
    sb.append("    spaceID: ").append(toIndentedString(spaceID)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    useSubStream: ").append(toIndentedString(useSubStream)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
