/*
 * aiotvideo
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.aiotvideo.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.aiotvideo.model.BindChannelsForCreateRecordPlanInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateRecordPlanRequest
 */



public class CreateRecordPlanRequest {
  @SerializedName("BindChannels")
  private BindChannelsForCreateRecordPlanInput bindChannels = null;

  @SerializedName("BindStreams")
  private List<String> bindStreams = null;

  @SerializedName("BindTemplate")
  private String bindTemplate = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("MainStreams")
  private List<String> mainStreams = null;

  @SerializedName("PlanName")
  private String planName = null;

  @SerializedName("Resolution")
  private String resolution = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("StreamingIndex")
  private Integer streamingIndex = null;

  public CreateRecordPlanRequest bindChannels(BindChannelsForCreateRecordPlanInput bindChannels) {
    this.bindChannels = bindChannels;
    return this;
  }

   /**
   * Get bindChannels
   * @return bindChannels
  **/
  @Valid
  @Schema(description = "")
  public BindChannelsForCreateRecordPlanInput getBindChannels() {
    return bindChannels;
  }

  public void setBindChannels(BindChannelsForCreateRecordPlanInput bindChannels) {
    this.bindChannels = bindChannels;
  }

  public CreateRecordPlanRequest bindStreams(List<String> bindStreams) {
    this.bindStreams = bindStreams;
    return this;
  }

  public CreateRecordPlanRequest addBindStreamsItem(String bindStreamsItem) {
    if (this.bindStreams == null) {
      this.bindStreams = new ArrayList<String>();
    }
    this.bindStreams.add(bindStreamsItem);
    return this;
  }

   /**
   * Get bindStreams
   * @return bindStreams
  **/
  @Schema(description = "")
  public List<String> getBindStreams() {
    return bindStreams;
  }

  public void setBindStreams(List<String> bindStreams) {
    this.bindStreams = bindStreams;
  }

  public CreateRecordPlanRequest bindTemplate(String bindTemplate) {
    this.bindTemplate = bindTemplate;
    return this;
  }

   /**
   * Get bindTemplate
   * @return bindTemplate
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getBindTemplate() {
    return bindTemplate;
  }

  public void setBindTemplate(String bindTemplate) {
    this.bindTemplate = bindTemplate;
  }

  public CreateRecordPlanRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CreateRecordPlanRequest mainStreams(List<String> mainStreams) {
    this.mainStreams = mainStreams;
    return this;
  }

  public CreateRecordPlanRequest addMainStreamsItem(String mainStreamsItem) {
    if (this.mainStreams == null) {
      this.mainStreams = new ArrayList<String>();
    }
    this.mainStreams.add(mainStreamsItem);
    return this;
  }

   /**
   * Get mainStreams
   * @return mainStreams
  **/
  @Schema(description = "")
  public List<String> getMainStreams() {
    return mainStreams;
  }

  public void setMainStreams(List<String> mainStreams) {
    this.mainStreams = mainStreams;
  }

  public CreateRecordPlanRequest planName(String planName) {
    this.planName = planName;
    return this;
  }

   /**
   * Get planName
   * @return planName
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getPlanName() {
    return planName;
  }

  public void setPlanName(String planName) {
    this.planName = planName;
  }

  public CreateRecordPlanRequest resolution(String resolution) {
    this.resolution = resolution;
    return this;
  }

   /**
   * Get resolution
   * @return resolution
  **/
  @Schema(description = "")
  public String getResolution() {
    return resolution;
  }

  public void setResolution(String resolution) {
    this.resolution = resolution;
  }

  public CreateRecordPlanRequest status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public CreateRecordPlanRequest streamingIndex(Integer streamingIndex) {
    this.streamingIndex = streamingIndex;
    return this;
  }

   /**
   * Get streamingIndex
   * @return streamingIndex
  **/
  @Schema(description = "")
  public Integer getStreamingIndex() {
    return streamingIndex;
  }

  public void setStreamingIndex(Integer streamingIndex) {
    this.streamingIndex = streamingIndex;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateRecordPlanRequest createRecordPlanRequest = (CreateRecordPlanRequest) o;
    return Objects.equals(this.bindChannels, createRecordPlanRequest.bindChannels) &&
        Objects.equals(this.bindStreams, createRecordPlanRequest.bindStreams) &&
        Objects.equals(this.bindTemplate, createRecordPlanRequest.bindTemplate) &&
        Objects.equals(this.description, createRecordPlanRequest.description) &&
        Objects.equals(this.mainStreams, createRecordPlanRequest.mainStreams) &&
        Objects.equals(this.planName, createRecordPlanRequest.planName) &&
        Objects.equals(this.resolution, createRecordPlanRequest.resolution) &&
        Objects.equals(this.status, createRecordPlanRequest.status) &&
        Objects.equals(this.streamingIndex, createRecordPlanRequest.streamingIndex);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bindChannels, bindStreams, bindTemplate, description, mainStreams, planName, resolution, status, streamingIndex);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateRecordPlanRequest {\n");
    
    sb.append("    bindChannels: ").append(toIndentedString(bindChannels)).append("\n");
    sb.append("    bindStreams: ").append(toIndentedString(bindStreams)).append("\n");
    sb.append("    bindTemplate: ").append(toIndentedString(bindTemplate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    mainStreams: ").append(toIndentedString(mainStreams)).append("\n");
    sb.append("    planName: ").append(toIndentedString(planName)).append("\n");
    sb.append("    resolution: ").append(toIndentedString(resolution)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    streamingIndex: ").append(toIndentedString(streamingIndex)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
