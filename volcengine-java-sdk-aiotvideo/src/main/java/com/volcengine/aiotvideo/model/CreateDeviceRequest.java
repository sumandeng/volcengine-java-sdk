/*
 * aiotvideo
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.aiotvideo.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.aiotvideo.model.AlertNotificationForCreateDeviceInput;
import com.volcengine.aiotvideo.model.CoordinatesForCreateDeviceInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateDeviceRequest
 */



public class CreateDeviceRequest {
  @SerializedName("AlertNotification")
  private AlertNotificationForCreateDeviceInput alertNotification = null;

  @SerializedName("AutoPullAfterRegister")
  private Boolean autoPullAfterRegister = null;

  @SerializedName("AutoPullAfterRegiter")
  private Boolean autoPullAfterRegiter = null;

  @SerializedName("Coordinates")
  private CoordinatesForCreateDeviceInput coordinates = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("DeviceNSID")
  private String deviceNSID = null;

  @SerializedName("DeviceName")
  private String deviceName = null;

  @SerializedName("Location")
  private String location = null;

  @SerializedName("Password")
  private String password = null;

  @SerializedName("RtpTransportTcp")
  private Boolean rtpTransportTcp = null;

  @SerializedName("SpaceID")
  private String spaceID = null;

  @SerializedName("Type")
  private String type = null;

  @SerializedName("UseSubStream")
  private Boolean useSubStream = null;

  @SerializedName("UserName")
  private String userName = null;

  @SerializedName("Username")
  private String username = null;

  public CreateDeviceRequest alertNotification(AlertNotificationForCreateDeviceInput alertNotification) {
    this.alertNotification = alertNotification;
    return this;
  }

   /**
   * Get alertNotification
   * @return alertNotification
  **/
  @Valid
  @Schema(description = "")
  public AlertNotificationForCreateDeviceInput getAlertNotification() {
    return alertNotification;
  }

  public void setAlertNotification(AlertNotificationForCreateDeviceInput alertNotification) {
    this.alertNotification = alertNotification;
  }

  public CreateDeviceRequest autoPullAfterRegister(Boolean autoPullAfterRegister) {
    this.autoPullAfterRegister = autoPullAfterRegister;
    return this;
  }

   /**
   * Get autoPullAfterRegister
   * @return autoPullAfterRegister
  **/
  @Schema(description = "")
  public Boolean isAutoPullAfterRegister() {
    return autoPullAfterRegister;
  }

  public void setAutoPullAfterRegister(Boolean autoPullAfterRegister) {
    this.autoPullAfterRegister = autoPullAfterRegister;
  }

  public CreateDeviceRequest autoPullAfterRegiter(Boolean autoPullAfterRegiter) {
    this.autoPullAfterRegiter = autoPullAfterRegiter;
    return this;
  }

   /**
   * Get autoPullAfterRegiter
   * @return autoPullAfterRegiter
  **/
  @Schema(description = "")
  public Boolean isAutoPullAfterRegiter() {
    return autoPullAfterRegiter;
  }

  public void setAutoPullAfterRegiter(Boolean autoPullAfterRegiter) {
    this.autoPullAfterRegiter = autoPullAfterRegiter;
  }

  public CreateDeviceRequest coordinates(CoordinatesForCreateDeviceInput coordinates) {
    this.coordinates = coordinates;
    return this;
  }

   /**
   * Get coordinates
   * @return coordinates
  **/
  @Valid
  @Schema(description = "")
  public CoordinatesForCreateDeviceInput getCoordinates() {
    return coordinates;
  }

  public void setCoordinates(CoordinatesForCreateDeviceInput coordinates) {
    this.coordinates = coordinates;
  }

  public CreateDeviceRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CreateDeviceRequest deviceNSID(String deviceNSID) {
    this.deviceNSID = deviceNSID;
    return this;
  }

   /**
   * Get deviceNSID
   * @return deviceNSID
  **/
  @Schema(description = "")
  public String getDeviceNSID() {
    return deviceNSID;
  }

  public void setDeviceNSID(String deviceNSID) {
    this.deviceNSID = deviceNSID;
  }

  public CreateDeviceRequest deviceName(String deviceName) {
    this.deviceName = deviceName;
    return this;
  }

   /**
   * Get deviceName
   * @return deviceName
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getDeviceName() {
    return deviceName;
  }

  public void setDeviceName(String deviceName) {
    this.deviceName = deviceName;
  }

  public CreateDeviceRequest location(String location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @Schema(description = "")
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }

  public CreateDeviceRequest password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @Schema(description = "")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public CreateDeviceRequest rtpTransportTcp(Boolean rtpTransportTcp) {
    this.rtpTransportTcp = rtpTransportTcp;
    return this;
  }

   /**
   * Get rtpTransportTcp
   * @return rtpTransportTcp
  **/
  @Schema(description = "")
  public Boolean isRtpTransportTcp() {
    return rtpTransportTcp;
  }

  public void setRtpTransportTcp(Boolean rtpTransportTcp) {
    this.rtpTransportTcp = rtpTransportTcp;
  }

  public CreateDeviceRequest spaceID(String spaceID) {
    this.spaceID = spaceID;
    return this;
  }

   /**
   * Get spaceID
   * @return spaceID
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getSpaceID() {
    return spaceID;
  }

  public void setSpaceID(String spaceID) {
    this.spaceID = spaceID;
  }

  public CreateDeviceRequest type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public CreateDeviceRequest useSubStream(Boolean useSubStream) {
    this.useSubStream = useSubStream;
    return this;
  }

   /**
   * Get useSubStream
   * @return useSubStream
  **/
  @Schema(description = "")
  public Boolean isUseSubStream() {
    return useSubStream;
  }

  public void setUseSubStream(Boolean useSubStream) {
    this.useSubStream = useSubStream;
  }

  public CreateDeviceRequest userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * Get userName
   * @return userName
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }

  public CreateDeviceRequest username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @Schema(description = "")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateDeviceRequest createDeviceRequest = (CreateDeviceRequest) o;
    return Objects.equals(this.alertNotification, createDeviceRequest.alertNotification) &&
        Objects.equals(this.autoPullAfterRegister, createDeviceRequest.autoPullAfterRegister) &&
        Objects.equals(this.autoPullAfterRegiter, createDeviceRequest.autoPullAfterRegiter) &&
        Objects.equals(this.coordinates, createDeviceRequest.coordinates) &&
        Objects.equals(this.description, createDeviceRequest.description) &&
        Objects.equals(this.deviceNSID, createDeviceRequest.deviceNSID) &&
        Objects.equals(this.deviceName, createDeviceRequest.deviceName) &&
        Objects.equals(this.location, createDeviceRequest.location) &&
        Objects.equals(this.password, createDeviceRequest.password) &&
        Objects.equals(this.rtpTransportTcp, createDeviceRequest.rtpTransportTcp) &&
        Objects.equals(this.spaceID, createDeviceRequest.spaceID) &&
        Objects.equals(this.type, createDeviceRequest.type) &&
        Objects.equals(this.useSubStream, createDeviceRequest.useSubStream) &&
        Objects.equals(this.userName, createDeviceRequest.userName) &&
        Objects.equals(this.username, createDeviceRequest.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alertNotification, autoPullAfterRegister, autoPullAfterRegiter, coordinates, description, deviceNSID, deviceName, location, password, rtpTransportTcp, spaceID, type, useSubStream, userName, username);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateDeviceRequest {\n");
    
    sb.append("    alertNotification: ").append(toIndentedString(alertNotification)).append("\n");
    sb.append("    autoPullAfterRegister: ").append(toIndentedString(autoPullAfterRegister)).append("\n");
    sb.append("    autoPullAfterRegiter: ").append(toIndentedString(autoPullAfterRegiter)).append("\n");
    sb.append("    coordinates: ").append(toIndentedString(coordinates)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    deviceNSID: ").append(toIndentedString(deviceNSID)).append("\n");
    sb.append("    deviceName: ").append(toIndentedString(deviceName)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    rtpTransportTcp: ").append(toIndentedString(rtpTransportTcp)).append("\n");
    sb.append("    spaceID: ").append(toIndentedString(spaceID)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    useSubStream: ").append(toIndentedString(useSubStream)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
