/*
 * aiotvideo
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.aiotvideo.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.aiotvideo.model.AlertNotificationForUpdateDeviceInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * UpdateDeviceRequest
 */



public class UpdateDeviceRequest {
  @SerializedName("AlertNotification")
  private AlertNotificationForUpdateDeviceInput alertNotification = null;

  @SerializedName("AutoPullAfterRegister")
  private Boolean autoPullAfterRegister = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("DeviceID")
  private String deviceID = null;

  @SerializedName("DeviceNSID")
  private String deviceNSID = null;

  @SerializedName("DeviceName")
  private String deviceName = null;

  @SerializedName("Password")
  private String password = null;

  @SerializedName("SpaceID")
  private String spaceID = null;

  @SerializedName("UseSubStream")
  private Boolean useSubStream = null;

  @SerializedName("Username")
  private String username = null;

  public UpdateDeviceRequest alertNotification(AlertNotificationForUpdateDeviceInput alertNotification) {
    this.alertNotification = alertNotification;
    return this;
  }

   /**
   * Get alertNotification
   * @return alertNotification
  **/
  @Valid
  @Schema(description = "")
  public AlertNotificationForUpdateDeviceInput getAlertNotification() {
    return alertNotification;
  }

  public void setAlertNotification(AlertNotificationForUpdateDeviceInput alertNotification) {
    this.alertNotification = alertNotification;
  }

  public UpdateDeviceRequest autoPullAfterRegister(Boolean autoPullAfterRegister) {
    this.autoPullAfterRegister = autoPullAfterRegister;
    return this;
  }

   /**
   * Get autoPullAfterRegister
   * @return autoPullAfterRegister
  **/
  @Schema(description = "")
  public Boolean isAutoPullAfterRegister() {
    return autoPullAfterRegister;
  }

  public void setAutoPullAfterRegister(Boolean autoPullAfterRegister) {
    this.autoPullAfterRegister = autoPullAfterRegister;
  }

  public UpdateDeviceRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public UpdateDeviceRequest deviceID(String deviceID) {
    this.deviceID = deviceID;
    return this;
  }

   /**
   * Get deviceID
   * @return deviceID
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getDeviceID() {
    return deviceID;
  }

  public void setDeviceID(String deviceID) {
    this.deviceID = deviceID;
  }

  public UpdateDeviceRequest deviceNSID(String deviceNSID) {
    this.deviceNSID = deviceNSID;
    return this;
  }

   /**
   * Get deviceNSID
   * @return deviceNSID
  **/
  @Schema(description = "")
  public String getDeviceNSID() {
    return deviceNSID;
  }

  public void setDeviceNSID(String deviceNSID) {
    this.deviceNSID = deviceNSID;
  }

  public UpdateDeviceRequest deviceName(String deviceName) {
    this.deviceName = deviceName;
    return this;
  }

   /**
   * Get deviceName
   * @return deviceName
  **/
  @Schema(description = "")
  public String getDeviceName() {
    return deviceName;
  }

  public void setDeviceName(String deviceName) {
    this.deviceName = deviceName;
  }

  public UpdateDeviceRequest password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @Schema(description = "")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public UpdateDeviceRequest spaceID(String spaceID) {
    this.spaceID = spaceID;
    return this;
  }

   /**
   * Get spaceID
   * @return spaceID
  **/
  @Schema(description = "")
  public String getSpaceID() {
    return spaceID;
  }

  public void setSpaceID(String spaceID) {
    this.spaceID = spaceID;
  }

  public UpdateDeviceRequest useSubStream(Boolean useSubStream) {
    this.useSubStream = useSubStream;
    return this;
  }

   /**
   * Get useSubStream
   * @return useSubStream
  **/
  @Schema(description = "")
  public Boolean isUseSubStream() {
    return useSubStream;
  }

  public void setUseSubStream(Boolean useSubStream) {
    this.useSubStream = useSubStream;
  }

  public UpdateDeviceRequest username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @Schema(description = "")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateDeviceRequest updateDeviceRequest = (UpdateDeviceRequest) o;
    return Objects.equals(this.alertNotification, updateDeviceRequest.alertNotification) &&
        Objects.equals(this.autoPullAfterRegister, updateDeviceRequest.autoPullAfterRegister) &&
        Objects.equals(this.description, updateDeviceRequest.description) &&
        Objects.equals(this.deviceID, updateDeviceRequest.deviceID) &&
        Objects.equals(this.deviceNSID, updateDeviceRequest.deviceNSID) &&
        Objects.equals(this.deviceName, updateDeviceRequest.deviceName) &&
        Objects.equals(this.password, updateDeviceRequest.password) &&
        Objects.equals(this.spaceID, updateDeviceRequest.spaceID) &&
        Objects.equals(this.useSubStream, updateDeviceRequest.useSubStream) &&
        Objects.equals(this.username, updateDeviceRequest.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alertNotification, autoPullAfterRegister, description, deviceID, deviceNSID, deviceName, password, spaceID, useSubStream, username);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateDeviceRequest {\n");
    
    sb.append("    alertNotification: ").append(toIndentedString(alertNotification)).append("\n");
    sb.append("    autoPullAfterRegister: ").append(toIndentedString(autoPullAfterRegister)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    deviceID: ").append(toIndentedString(deviceID)).append("\n");
    sb.append("    deviceNSID: ").append(toIndentedString(deviceNSID)).append("\n");
    sb.append("    deviceName: ").append(toIndentedString(deviceName)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    spaceID: ").append(toIndentedString(spaceID)).append("\n");
    sb.append("    useSubStream: ").append(toIndentedString(useSubStream)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
