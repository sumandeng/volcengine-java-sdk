/*
 * aiotvideo
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.aiotvideo.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DeviceSubStreamForListDevicesOutput
 */



public class DeviceSubStreamForListDevicesOutput {
  @SerializedName("PullUrls")
  private List<String> pullUrls = null;

  @SerializedName("PushUrl")
  private String pushUrl = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("StreamID")
  private String streamID = null;

  public DeviceSubStreamForListDevicesOutput pullUrls(List<String> pullUrls) {
    this.pullUrls = pullUrls;
    return this;
  }

  public DeviceSubStreamForListDevicesOutput addPullUrlsItem(String pullUrlsItem) {
    if (this.pullUrls == null) {
      this.pullUrls = new ArrayList<String>();
    }
    this.pullUrls.add(pullUrlsItem);
    return this;
  }

   /**
   * Get pullUrls
   * @return pullUrls
  **/
  @Schema(description = "")
  public List<String> getPullUrls() {
    return pullUrls;
  }

  public void setPullUrls(List<String> pullUrls) {
    this.pullUrls = pullUrls;
  }

  public DeviceSubStreamForListDevicesOutput pushUrl(String pushUrl) {
    this.pushUrl = pushUrl;
    return this;
  }

   /**
   * Get pushUrl
   * @return pushUrl
  **/
  @Schema(description = "")
  public String getPushUrl() {
    return pushUrl;
  }

  public void setPushUrl(String pushUrl) {
    this.pushUrl = pushUrl;
  }

  public DeviceSubStreamForListDevicesOutput status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public DeviceSubStreamForListDevicesOutput streamID(String streamID) {
    this.streamID = streamID;
    return this;
  }

   /**
   * Get streamID
   * @return streamID
  **/
  @Schema(description = "")
  public String getStreamID() {
    return streamID;
  }

  public void setStreamID(String streamID) {
    this.streamID = streamID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceSubStreamForListDevicesOutput deviceSubStreamForListDevicesOutput = (DeviceSubStreamForListDevicesOutput) o;
    return Objects.equals(this.pullUrls, deviceSubStreamForListDevicesOutput.pullUrls) &&
        Objects.equals(this.pushUrl, deviceSubStreamForListDevicesOutput.pushUrl) &&
        Objects.equals(this.status, deviceSubStreamForListDevicesOutput.status) &&
        Objects.equals(this.streamID, deviceSubStreamForListDevicesOutput.streamID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pullUrls, pushUrl, status, streamID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceSubStreamForListDevicesOutput {\n");
    
    sb.append("    pullUrls: ").append(toIndentedString(pullUrls)).append("\n");
    sb.append("    pushUrl: ").append(toIndentedString(pushUrl)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    streamID: ").append(toIndentedString(streamID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
