/*
 * aiotvideo
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.aiotvideo.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.aiotvideo.model.BAudioForGetStreamDataOutput;
import com.volcengine.aiotvideo.model.BVideoForGetStreamDataOutput;
import com.volcengine.aiotvideo.model.FPForGetStreamDataOutput;
import com.volcengine.aiotvideo.model.FrameForGetStreamDataOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * GetStreamDataResponse
 */



public class GetStreamDataResponse extends com.volcengine.model.AbstractResponse {
  @SerializedName("BAudio")
  private List<BAudioForGetStreamDataOutput> baudio = null;

  @SerializedName("BVideo")
  private List<BVideoForGetStreamDataOutput> bvideo = null;

  @SerializedName("FPS")
  private List<FPForGetStreamDataOutput> FPS = null;

  @SerializedName("Frame")
  private List<FrameForGetStreamDataOutput> frame = null;

  @SerializedName("Height")
  private Integer height = null;

  @SerializedName("VCodec")
  private String vcodec = null;

  @SerializedName("Width")
  private Integer width = null;

  public GetStreamDataResponse baudio(List<BAudioForGetStreamDataOutput> baudio) {
    this.baudio = baudio;
    return this;
  }

  public GetStreamDataResponse addBaudioItem(BAudioForGetStreamDataOutput baudioItem) {
    if (this.baudio == null) {
      this.baudio = new ArrayList<BAudioForGetStreamDataOutput>();
    }
    this.baudio.add(baudioItem);
    return this;
  }

   /**
   * Get baudio
   * @return baudio
  **/
  @Valid
  @Schema(description = "")
  public List<BAudioForGetStreamDataOutput> getBaudio() {
    return baudio;
  }

  public void setBaudio(List<BAudioForGetStreamDataOutput> baudio) {
    this.baudio = baudio;
  }

  public GetStreamDataResponse bvideo(List<BVideoForGetStreamDataOutput> bvideo) {
    this.bvideo = bvideo;
    return this;
  }

  public GetStreamDataResponse addBvideoItem(BVideoForGetStreamDataOutput bvideoItem) {
    if (this.bvideo == null) {
      this.bvideo = new ArrayList<BVideoForGetStreamDataOutput>();
    }
    this.bvideo.add(bvideoItem);
    return this;
  }

   /**
   * Get bvideo
   * @return bvideo
  **/
  @Valid
  @Schema(description = "")
  public List<BVideoForGetStreamDataOutput> getBvideo() {
    return bvideo;
  }

  public void setBvideo(List<BVideoForGetStreamDataOutput> bvideo) {
    this.bvideo = bvideo;
  }

  public GetStreamDataResponse FPS(List<FPForGetStreamDataOutput> FPS) {
    this.FPS = FPS;
    return this;
  }

  public GetStreamDataResponse addFPSItem(FPForGetStreamDataOutput FPSItem) {
    if (this.FPS == null) {
      this.FPS = new ArrayList<FPForGetStreamDataOutput>();
    }
    this.FPS.add(FPSItem);
    return this;
  }

   /**
   * Get FPS
   * @return FPS
  **/
  @Valid
  @Schema(description = "")
  public List<FPForGetStreamDataOutput> getFPS() {
    return FPS;
  }

  public void setFPS(List<FPForGetStreamDataOutput> FPS) {
    this.FPS = FPS;
  }

  public GetStreamDataResponse frame(List<FrameForGetStreamDataOutput> frame) {
    this.frame = frame;
    return this;
  }

  public GetStreamDataResponse addFrameItem(FrameForGetStreamDataOutput frameItem) {
    if (this.frame == null) {
      this.frame = new ArrayList<FrameForGetStreamDataOutput>();
    }
    this.frame.add(frameItem);
    return this;
  }

   /**
   * Get frame
   * @return frame
  **/
  @Valid
  @Schema(description = "")
  public List<FrameForGetStreamDataOutput> getFrame() {
    return frame;
  }

  public void setFrame(List<FrameForGetStreamDataOutput> frame) {
    this.frame = frame;
  }

  public GetStreamDataResponse height(Integer height) {
    this.height = height;
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @Schema(description = "")
  public Integer getHeight() {
    return height;
  }

  public void setHeight(Integer height) {
    this.height = height;
  }

  public GetStreamDataResponse vcodec(String vcodec) {
    this.vcodec = vcodec;
    return this;
  }

   /**
   * Get vcodec
   * @return vcodec
  **/
  @Schema(description = "")
  public String getVcodec() {
    return vcodec;
  }

  public void setVcodec(String vcodec) {
    this.vcodec = vcodec;
  }

  public GetStreamDataResponse width(Integer width) {
    this.width = width;
    return this;
  }

   /**
   * Get width
   * @return width
  **/
  @Schema(description = "")
  public Integer getWidth() {
    return width;
  }

  public void setWidth(Integer width) {
    this.width = width;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetStreamDataResponse getStreamDataResponse = (GetStreamDataResponse) o;
    return Objects.equals(this.baudio, getStreamDataResponse.baudio) &&
        Objects.equals(this.bvideo, getStreamDataResponse.bvideo) &&
        Objects.equals(this.FPS, getStreamDataResponse.FPS) &&
        Objects.equals(this.frame, getStreamDataResponse.frame) &&
        Objects.equals(this.height, getStreamDataResponse.height) &&
        Objects.equals(this.vcodec, getStreamDataResponse.vcodec) &&
        Objects.equals(this.width, getStreamDataResponse.width);
  }

  @Override
  public int hashCode() {
    return Objects.hash(baudio, bvideo, FPS, frame, height, vcodec, width);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetStreamDataResponse {\n");
    
    sb.append("    baudio: ").append(toIndentedString(baudio)).append("\n");
    sb.append("    bvideo: ").append(toIndentedString(bvideo)).append("\n");
    sb.append("    FPS: ").append(toIndentedString(FPS)).append("\n");
    sb.append("    frame: ").append(toIndentedString(frame)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    vcodec: ").append(toIndentedString(vcodec)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
