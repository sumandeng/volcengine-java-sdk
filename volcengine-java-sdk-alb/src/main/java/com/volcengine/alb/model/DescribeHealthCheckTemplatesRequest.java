/*
 * alb
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.alb.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.alb.model.TagFilterForDescribeHealthCheckTemplatesInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeHealthCheckTemplatesRequest
 */



public class DescribeHealthCheckTemplatesRequest {
  @SerializedName("HealthCheckTemplateIds")
  private List<String> healthCheckTemplateIds = null;

  @SerializedName("HealthCheckTemplateName")
  private String healthCheckTemplateName = null;

  @SerializedName("PageNumber")
  private Integer pageNumber = null;

  @SerializedName("PageSize")
  private Integer pageSize = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("TagFilters")
  private List<TagFilterForDescribeHealthCheckTemplatesInput> tagFilters = null;

  public DescribeHealthCheckTemplatesRequest healthCheckTemplateIds(List<String> healthCheckTemplateIds) {
    this.healthCheckTemplateIds = healthCheckTemplateIds;
    return this;
  }

  public DescribeHealthCheckTemplatesRequest addHealthCheckTemplateIdsItem(String healthCheckTemplateIdsItem) {
    if (this.healthCheckTemplateIds == null) {
      this.healthCheckTemplateIds = new ArrayList<String>();
    }
    this.healthCheckTemplateIds.add(healthCheckTemplateIdsItem);
    return this;
  }

   /**
   * Get healthCheckTemplateIds
   * @return healthCheckTemplateIds
  **/
  @Schema(description = "")
  public List<String> getHealthCheckTemplateIds() {
    return healthCheckTemplateIds;
  }

  public void setHealthCheckTemplateIds(List<String> healthCheckTemplateIds) {
    this.healthCheckTemplateIds = healthCheckTemplateIds;
  }

  public DescribeHealthCheckTemplatesRequest healthCheckTemplateName(String healthCheckTemplateName) {
    this.healthCheckTemplateName = healthCheckTemplateName;
    return this;
  }

   /**
   * Get healthCheckTemplateName
   * @return healthCheckTemplateName
  **/
  @Schema(description = "")
  public String getHealthCheckTemplateName() {
    return healthCheckTemplateName;
  }

  public void setHealthCheckTemplateName(String healthCheckTemplateName) {
    this.healthCheckTemplateName = healthCheckTemplateName;
  }

  public DescribeHealthCheckTemplatesRequest pageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @Schema(description = "")
  public Integer getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  public DescribeHealthCheckTemplatesRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @Schema(description = "")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public DescribeHealthCheckTemplatesRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public DescribeHealthCheckTemplatesRequest tagFilters(List<TagFilterForDescribeHealthCheckTemplatesInput> tagFilters) {
    this.tagFilters = tagFilters;
    return this;
  }

  public DescribeHealthCheckTemplatesRequest addTagFiltersItem(TagFilterForDescribeHealthCheckTemplatesInput tagFiltersItem) {
    if (this.tagFilters == null) {
      this.tagFilters = new ArrayList<TagFilterForDescribeHealthCheckTemplatesInput>();
    }
    this.tagFilters.add(tagFiltersItem);
    return this;
  }

   /**
   * Get tagFilters
   * @return tagFilters
  **/
  @Valid
  @Schema(description = "")
  public List<TagFilterForDescribeHealthCheckTemplatesInput> getTagFilters() {
    return tagFilters;
  }

  public void setTagFilters(List<TagFilterForDescribeHealthCheckTemplatesInput> tagFilters) {
    this.tagFilters = tagFilters;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeHealthCheckTemplatesRequest describeHealthCheckTemplatesRequest = (DescribeHealthCheckTemplatesRequest) o;
    return Objects.equals(this.healthCheckTemplateIds, describeHealthCheckTemplatesRequest.healthCheckTemplateIds) &&
        Objects.equals(this.healthCheckTemplateName, describeHealthCheckTemplatesRequest.healthCheckTemplateName) &&
        Objects.equals(this.pageNumber, describeHealthCheckTemplatesRequest.pageNumber) &&
        Objects.equals(this.pageSize, describeHealthCheckTemplatesRequest.pageSize) &&
        Objects.equals(this.projectName, describeHealthCheckTemplatesRequest.projectName) &&
        Objects.equals(this.tagFilters, describeHealthCheckTemplatesRequest.tagFilters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(healthCheckTemplateIds, healthCheckTemplateName, pageNumber, pageSize, projectName, tagFilters);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeHealthCheckTemplatesRequest {\n");
    
    sb.append("    healthCheckTemplateIds: ").append(toIndentedString(healthCheckTemplateIds)).append("\n");
    sb.append("    healthCheckTemplateName: ").append(toIndentedString(healthCheckTemplateName)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    tagFilters: ").append(toIndentedString(tagFilters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
