/*
 * private_zone
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.privatezone.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * RecordForBatchUpdateRecordInput
 */



public class RecordForBatchUpdateRecordInput {
  @SerializedName("Enable")
  private Boolean enable = null;

  @SerializedName("Host")
  private String host = null;

  @SerializedName("Line")
  private String line = null;

  @SerializedName("RecordID")
  private String recordID = null;

  @SerializedName("Remark")
  private String remark = null;

  @SerializedName("TTL")
  private Integer TTL = null;

  @SerializedName("Type")
  private String type = null;

  @SerializedName("Value")
  private String value = null;

  @SerializedName("Weight")
  private Integer weight = null;

  public RecordForBatchUpdateRecordInput enable(Boolean enable) {
    this.enable = enable;
    return this;
  }

   /**
   * Get enable
   * @return enable
  **/
  @Schema(description = "")
  public Boolean isEnable() {
    return enable;
  }

  public void setEnable(Boolean enable) {
    this.enable = enable;
  }

  public RecordForBatchUpdateRecordInput host(String host) {
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @Schema(description = "")
  public String getHost() {
    return host;
  }

  public void setHost(String host) {
    this.host = host;
  }

  public RecordForBatchUpdateRecordInput line(String line) {
    this.line = line;
    return this;
  }

   /**
   * Get line
   * @return line
  **/
  @Schema(description = "")
  public String getLine() {
    return line;
  }

  public void setLine(String line) {
    this.line = line;
  }

  public RecordForBatchUpdateRecordInput recordID(String recordID) {
    this.recordID = recordID;
    return this;
  }

   /**
   * Get recordID
   * @return recordID
  **/
  @Schema(description = "")
  public String getRecordID() {
    return recordID;
  }

  public void setRecordID(String recordID) {
    this.recordID = recordID;
  }

  public RecordForBatchUpdateRecordInput remark(String remark) {
    this.remark = remark;
    return this;
  }

   /**
   * Get remark
   * @return remark
  **/
  @Schema(description = "")
  public String getRemark() {
    return remark;
  }

  public void setRemark(String remark) {
    this.remark = remark;
  }

  public RecordForBatchUpdateRecordInput TTL(Integer TTL) {
    this.TTL = TTL;
    return this;
  }

   /**
   * Get TTL
   * @return TTL
  **/
  @Schema(description = "")
  public Integer getTTL() {
    return TTL;
  }

  public void setTTL(Integer TTL) {
    this.TTL = TTL;
  }

  public RecordForBatchUpdateRecordInput type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public RecordForBatchUpdateRecordInput value(String value) {
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @Schema(description = "")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public RecordForBatchUpdateRecordInput weight(Integer weight) {
    this.weight = weight;
    return this;
  }

   /**
   * Get weight
   * @return weight
  **/
  @Schema(description = "")
  public Integer getWeight() {
    return weight;
  }

  public void setWeight(Integer weight) {
    this.weight = weight;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RecordForBatchUpdateRecordInput recordForBatchUpdateRecordInput = (RecordForBatchUpdateRecordInput) o;
    return Objects.equals(this.enable, recordForBatchUpdateRecordInput.enable) &&
        Objects.equals(this.host, recordForBatchUpdateRecordInput.host) &&
        Objects.equals(this.line, recordForBatchUpdateRecordInput.line) &&
        Objects.equals(this.recordID, recordForBatchUpdateRecordInput.recordID) &&
        Objects.equals(this.remark, recordForBatchUpdateRecordInput.remark) &&
        Objects.equals(this.TTL, recordForBatchUpdateRecordInput.TTL) &&
        Objects.equals(this.type, recordForBatchUpdateRecordInput.type) &&
        Objects.equals(this.value, recordForBatchUpdateRecordInput.value) &&
        Objects.equals(this.weight, recordForBatchUpdateRecordInput.weight);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enable, host, line, recordID, remark, TTL, type, value, weight);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RecordForBatchUpdateRecordInput {\n");
    
    sb.append("    enable: ").append(toIndentedString(enable)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    line: ").append(toIndentedString(line)).append("\n");
    sb.append("    recordID: ").append(toIndentedString(recordID)).append("\n");
    sb.append("    remark: ").append(toIndentedString(remark)).append("\n");
    sb.append("    TTL: ").append(toIndentedString(TTL)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
