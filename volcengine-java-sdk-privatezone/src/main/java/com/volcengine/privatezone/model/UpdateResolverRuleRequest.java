/*
 * private_zone
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.privatezone.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.privatezone.model.ForwardIPForUpdateResolverRuleInput;
import com.volcengine.privatezone.model.VpcForUpdateResolverRuleInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * UpdateResolverRuleRequest
 */



public class UpdateResolverRuleRequest {
  @SerializedName("ForwardIPs")
  private List<ForwardIPForUpdateResolverRuleInput> forwardIPs = null;

  @SerializedName("Line")
  private String line = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("RuleID")
  private Long ruleID = null;

  @SerializedName("RuleTrn")
  private String ruleTrn = null;

  @SerializedName("Vpcs")
  private List<VpcForUpdateResolverRuleInput> vpcs = null;

  public UpdateResolverRuleRequest forwardIPs(List<ForwardIPForUpdateResolverRuleInput> forwardIPs) {
    this.forwardIPs = forwardIPs;
    return this;
  }

  public UpdateResolverRuleRequest addForwardIPsItem(ForwardIPForUpdateResolverRuleInput forwardIPsItem) {
    if (this.forwardIPs == null) {
      this.forwardIPs = new ArrayList<ForwardIPForUpdateResolverRuleInput>();
    }
    this.forwardIPs.add(forwardIPsItem);
    return this;
  }

   /**
   * Get forwardIPs
   * @return forwardIPs
  **/
  @Valid
  @Schema(description = "")
  public List<ForwardIPForUpdateResolverRuleInput> getForwardIPs() {
    return forwardIPs;
  }

  public void setForwardIPs(List<ForwardIPForUpdateResolverRuleInput> forwardIPs) {
    this.forwardIPs = forwardIPs;
  }

  public UpdateResolverRuleRequest line(String line) {
    this.line = line;
    return this;
  }

   /**
   * Get line
   * @return line
  **/
  @Schema(description = "")
  public String getLine() {
    return line;
  }

  public void setLine(String line) {
    this.line = line;
  }

  public UpdateResolverRuleRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public UpdateResolverRuleRequest ruleID(Long ruleID) {
    this.ruleID = ruleID;
    return this;
  }

   /**
   * Get ruleID
   * @return ruleID
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Long getRuleID() {
    return ruleID;
  }

  public void setRuleID(Long ruleID) {
    this.ruleID = ruleID;
  }

  public UpdateResolverRuleRequest ruleTrn(String ruleTrn) {
    this.ruleTrn = ruleTrn;
    return this;
  }

   /**
   * Get ruleTrn
   * @return ruleTrn
  **/
  @Schema(description = "")
  public String getRuleTrn() {
    return ruleTrn;
  }

  public void setRuleTrn(String ruleTrn) {
    this.ruleTrn = ruleTrn;
  }

  public UpdateResolverRuleRequest vpcs(List<VpcForUpdateResolverRuleInput> vpcs) {
    this.vpcs = vpcs;
    return this;
  }

  public UpdateResolverRuleRequest addVpcsItem(VpcForUpdateResolverRuleInput vpcsItem) {
    if (this.vpcs == null) {
      this.vpcs = new ArrayList<VpcForUpdateResolverRuleInput>();
    }
    this.vpcs.add(vpcsItem);
    return this;
  }

   /**
   * Get vpcs
   * @return vpcs
  **/
  @Valid
  @Schema(description = "")
  public List<VpcForUpdateResolverRuleInput> getVpcs() {
    return vpcs;
  }

  public void setVpcs(List<VpcForUpdateResolverRuleInput> vpcs) {
    this.vpcs = vpcs;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateResolverRuleRequest updateResolverRuleRequest = (UpdateResolverRuleRequest) o;
    return Objects.equals(this.forwardIPs, updateResolverRuleRequest.forwardIPs) &&
        Objects.equals(this.line, updateResolverRuleRequest.line) &&
        Objects.equals(this.name, updateResolverRuleRequest.name) &&
        Objects.equals(this.ruleID, updateResolverRuleRequest.ruleID) &&
        Objects.equals(this.ruleTrn, updateResolverRuleRequest.ruleTrn) &&
        Objects.equals(this.vpcs, updateResolverRuleRequest.vpcs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(forwardIPs, line, name, ruleID, ruleTrn, vpcs);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateResolverRuleRequest {\n");
    
    sb.append("    forwardIPs: ").append(toIndentedString(forwardIPs)).append("\n");
    sb.append("    line: ").append(toIndentedString(line)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ruleID: ").append(toIndentedString(ruleID)).append("\n");
    sb.append("    ruleTrn: ").append(toIndentedString(ruleTrn)).append("\n");
    sb.append("    vpcs: ").append(toIndentedString(vpcs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
