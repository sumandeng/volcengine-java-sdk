/*
 * private_zone
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.privatezone.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.privatezone.model.ForwardIPForCreateResolverRuleInput;
import com.volcengine.privatezone.model.TagForCreateResolverRuleInput;
import com.volcengine.privatezone.model.VpcForCreateResolverRuleInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateResolverRuleRequest
 */



public class CreateResolverRuleRequest {
  @SerializedName("EndpointID")
  private Integer endpointID = null;

  @SerializedName("EndpointTrn")
  private String endpointTrn = null;

  @SerializedName("ForwardIPs")
  private List<ForwardIPForCreateResolverRuleInput> forwardIPs = null;

  @SerializedName("Line")
  private String line = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("Tags")
  private List<TagForCreateResolverRuleInput> tags = null;

  @SerializedName("Type")
  private String type = null;

  @SerializedName("VpcTrns")
  private List<String> vpcTrns = null;

  @SerializedName("Vpcs")
  private List<VpcForCreateResolverRuleInput> vpcs = null;

  @SerializedName("ZoneName")
  private String zoneName = null;

  public CreateResolverRuleRequest endpointID(Integer endpointID) {
    this.endpointID = endpointID;
    return this;
  }

   /**
   * Get endpointID
   * @return endpointID
  **/
  @Schema(description = "")
  public Integer getEndpointID() {
    return endpointID;
  }

  public void setEndpointID(Integer endpointID) {
    this.endpointID = endpointID;
  }

  public CreateResolverRuleRequest endpointTrn(String endpointTrn) {
    this.endpointTrn = endpointTrn;
    return this;
  }

   /**
   * Get endpointTrn
   * @return endpointTrn
  **/
  @Schema(description = "")
  public String getEndpointTrn() {
    return endpointTrn;
  }

  public void setEndpointTrn(String endpointTrn) {
    this.endpointTrn = endpointTrn;
  }

  public CreateResolverRuleRequest forwardIPs(List<ForwardIPForCreateResolverRuleInput> forwardIPs) {
    this.forwardIPs = forwardIPs;
    return this;
  }

  public CreateResolverRuleRequest addForwardIPsItem(ForwardIPForCreateResolverRuleInput forwardIPsItem) {
    if (this.forwardIPs == null) {
      this.forwardIPs = new ArrayList<ForwardIPForCreateResolverRuleInput>();
    }
    this.forwardIPs.add(forwardIPsItem);
    return this;
  }

   /**
   * Get forwardIPs
   * @return forwardIPs
  **/
  @Valid
  @Schema(description = "")
  public List<ForwardIPForCreateResolverRuleInput> getForwardIPs() {
    return forwardIPs;
  }

  public void setForwardIPs(List<ForwardIPForCreateResolverRuleInput> forwardIPs) {
    this.forwardIPs = forwardIPs;
  }

  public CreateResolverRuleRequest line(String line) {
    this.line = line;
    return this;
  }

   /**
   * Get line
   * @return line
  **/
  @Schema(description = "")
  public String getLine() {
    return line;
  }

  public void setLine(String line) {
    this.line = line;
  }

  public CreateResolverRuleRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CreateResolverRuleRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public CreateResolverRuleRequest tags(List<TagForCreateResolverRuleInput> tags) {
    this.tags = tags;
    return this;
  }

  public CreateResolverRuleRequest addTagsItem(TagForCreateResolverRuleInput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForCreateResolverRuleInput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForCreateResolverRuleInput> getTags() {
    return tags;
  }

  public void setTags(List<TagForCreateResolverRuleInput> tags) {
    this.tags = tags;
  }

  public CreateResolverRuleRequest type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public CreateResolverRuleRequest vpcTrns(List<String> vpcTrns) {
    this.vpcTrns = vpcTrns;
    return this;
  }

  public CreateResolverRuleRequest addVpcTrnsItem(String vpcTrnsItem) {
    if (this.vpcTrns == null) {
      this.vpcTrns = new ArrayList<String>();
    }
    this.vpcTrns.add(vpcTrnsItem);
    return this;
  }

   /**
   * Get vpcTrns
   * @return vpcTrns
  **/
  @Schema(description = "")
  public List<String> getVpcTrns() {
    return vpcTrns;
  }

  public void setVpcTrns(List<String> vpcTrns) {
    this.vpcTrns = vpcTrns;
  }

  public CreateResolverRuleRequest vpcs(List<VpcForCreateResolverRuleInput> vpcs) {
    this.vpcs = vpcs;
    return this;
  }

  public CreateResolverRuleRequest addVpcsItem(VpcForCreateResolverRuleInput vpcsItem) {
    if (this.vpcs == null) {
      this.vpcs = new ArrayList<VpcForCreateResolverRuleInput>();
    }
    this.vpcs.add(vpcsItem);
    return this;
  }

   /**
   * Get vpcs
   * @return vpcs
  **/
  @Valid
  @Schema(description = "")
  public List<VpcForCreateResolverRuleInput> getVpcs() {
    return vpcs;
  }

  public void setVpcs(List<VpcForCreateResolverRuleInput> vpcs) {
    this.vpcs = vpcs;
  }

  public CreateResolverRuleRequest zoneName(String zoneName) {
    this.zoneName = zoneName;
    return this;
  }

   /**
   * Get zoneName
   * @return zoneName
  **/
  @Schema(description = "")
  public String getZoneName() {
    return zoneName;
  }

  public void setZoneName(String zoneName) {
    this.zoneName = zoneName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateResolverRuleRequest createResolverRuleRequest = (CreateResolverRuleRequest) o;
    return Objects.equals(this.endpointID, createResolverRuleRequest.endpointID) &&
        Objects.equals(this.endpointTrn, createResolverRuleRequest.endpointTrn) &&
        Objects.equals(this.forwardIPs, createResolverRuleRequest.forwardIPs) &&
        Objects.equals(this.line, createResolverRuleRequest.line) &&
        Objects.equals(this.name, createResolverRuleRequest.name) &&
        Objects.equals(this.projectName, createResolverRuleRequest.projectName) &&
        Objects.equals(this.tags, createResolverRuleRequest.tags) &&
        Objects.equals(this.type, createResolverRuleRequest.type) &&
        Objects.equals(this.vpcTrns, createResolverRuleRequest.vpcTrns) &&
        Objects.equals(this.vpcs, createResolverRuleRequest.vpcs) &&
        Objects.equals(this.zoneName, createResolverRuleRequest.zoneName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endpointID, endpointTrn, forwardIPs, line, name, projectName, tags, type, vpcTrns, vpcs, zoneName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateResolverRuleRequest {\n");
    
    sb.append("    endpointID: ").append(toIndentedString(endpointID)).append("\n");
    sb.append("    endpointTrn: ").append(toIndentedString(endpointTrn)).append("\n");
    sb.append("    forwardIPs: ").append(toIndentedString(forwardIPs)).append("\n");
    sb.append("    line: ").append(toIndentedString(line)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    vpcTrns: ").append(toIndentedString(vpcTrns)).append("\n");
    sb.append("    vpcs: ").append(toIndentedString(vpcs)).append("\n");
    sb.append("    zoneName: ").append(toIndentedString(zoneName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
