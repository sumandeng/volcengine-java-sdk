/*
 * private_zone
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.privatezone.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.privatezone.model.TagFilterForListResolverEndpointsInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListResolverEndpointsRequest
 */



public class ListResolverEndpointsRequest {
  @SerializedName("Direction")
  private String direction = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("PageNumber")
  private Integer pageNumber = null;

  @SerializedName("PageSize")
  private Integer pageSize = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("TagFilters")
  private List<TagFilterForListResolverEndpointsInput> tagFilters = null;

  @SerializedName("VpcID")
  private String vpcID = null;

  @SerializedName("VpcTrns")
  private List<String> vpcTrns = null;

  public ListResolverEndpointsRequest direction(String direction) {
    this.direction = direction;
    return this;
  }

   /**
   * Get direction
   * @return direction
  **/
  @Schema(description = "")
  public String getDirection() {
    return direction;
  }

  public void setDirection(String direction) {
    this.direction = direction;
  }

  public ListResolverEndpointsRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ListResolverEndpointsRequest pageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @Schema(description = "")
  public Integer getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  public ListResolverEndpointsRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @Schema(description = "")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public ListResolverEndpointsRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public ListResolverEndpointsRequest status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public ListResolverEndpointsRequest tagFilters(List<TagFilterForListResolverEndpointsInput> tagFilters) {
    this.tagFilters = tagFilters;
    return this;
  }

  public ListResolverEndpointsRequest addTagFiltersItem(TagFilterForListResolverEndpointsInput tagFiltersItem) {
    if (this.tagFilters == null) {
      this.tagFilters = new ArrayList<TagFilterForListResolverEndpointsInput>();
    }
    this.tagFilters.add(tagFiltersItem);
    return this;
  }

   /**
   * Get tagFilters
   * @return tagFilters
  **/
  @Valid
  @Schema(description = "")
  public List<TagFilterForListResolverEndpointsInput> getTagFilters() {
    return tagFilters;
  }

  public void setTagFilters(List<TagFilterForListResolverEndpointsInput> tagFilters) {
    this.tagFilters = tagFilters;
  }

  public ListResolverEndpointsRequest vpcID(String vpcID) {
    this.vpcID = vpcID;
    return this;
  }

   /**
   * Get vpcID
   * @return vpcID
  **/
  @Schema(description = "")
  public String getVpcID() {
    return vpcID;
  }

  public void setVpcID(String vpcID) {
    this.vpcID = vpcID;
  }

  public ListResolverEndpointsRequest vpcTrns(List<String> vpcTrns) {
    this.vpcTrns = vpcTrns;
    return this;
  }

  public ListResolverEndpointsRequest addVpcTrnsItem(String vpcTrnsItem) {
    if (this.vpcTrns == null) {
      this.vpcTrns = new ArrayList<String>();
    }
    this.vpcTrns.add(vpcTrnsItem);
    return this;
  }

   /**
   * Get vpcTrns
   * @return vpcTrns
  **/
  @Schema(description = "")
  public List<String> getVpcTrns() {
    return vpcTrns;
  }

  public void setVpcTrns(List<String> vpcTrns) {
    this.vpcTrns = vpcTrns;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListResolverEndpointsRequest listResolverEndpointsRequest = (ListResolverEndpointsRequest) o;
    return Objects.equals(this.direction, listResolverEndpointsRequest.direction) &&
        Objects.equals(this.name, listResolverEndpointsRequest.name) &&
        Objects.equals(this.pageNumber, listResolverEndpointsRequest.pageNumber) &&
        Objects.equals(this.pageSize, listResolverEndpointsRequest.pageSize) &&
        Objects.equals(this.projectName, listResolverEndpointsRequest.projectName) &&
        Objects.equals(this.status, listResolverEndpointsRequest.status) &&
        Objects.equals(this.tagFilters, listResolverEndpointsRequest.tagFilters) &&
        Objects.equals(this.vpcID, listResolverEndpointsRequest.vpcID) &&
        Objects.equals(this.vpcTrns, listResolverEndpointsRequest.vpcTrns);
  }

  @Override
  public int hashCode() {
    return Objects.hash(direction, name, pageNumber, pageSize, projectName, status, tagFilters, vpcID, vpcTrns);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListResolverEndpointsRequest {\n");
    
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tagFilters: ").append(toIndentedString(tagFilters)).append("\n");
    sb.append("    vpcID: ").append(toIndentedString(vpcID)).append("\n");
    sb.append("    vpcTrns: ").append(toIndentedString(vpcTrns)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
