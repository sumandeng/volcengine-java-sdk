/*
 * apig
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.apig.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * GetPluginBindingResponse
 */



public class GetPluginBindingResponse extends com.volcengine.model.AbstractResponse {
  @SerializedName("Description")
  private String description = null;

  @SerializedName("Enable")
  private Boolean enable = null;

  @SerializedName("GatewayId")
  private String gatewayId = null;

  @SerializedName("GatewayName")
  private String gatewayName = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("PluginConfig")
  private String pluginConfig = null;

  @SerializedName("PluginName")
  private String pluginName = null;

  @SerializedName("RouteId")
  private String routeId = null;

  @SerializedName("RouteName")
  private String routeName = null;

  @SerializedName("Scope")
  private String scope = null;

  @SerializedName("ServiceId")
  private String serviceId = null;

  @SerializedName("ServiceName")
  private String serviceName = null;

  @SerializedName("Target")
  private String target = null;

  @SerializedName("TargetName")
  private String targetName = null;

  @SerializedName("UpdateTime")
  private String updateTime = null;

  public GetPluginBindingResponse description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public GetPluginBindingResponse enable(Boolean enable) {
    this.enable = enable;
    return this;
  }

   /**
   * Get enable
   * @return enable
  **/
  @Schema(description = "")
  public Boolean isEnable() {
    return enable;
  }

  public void setEnable(Boolean enable) {
    this.enable = enable;
  }

  public GetPluginBindingResponse gatewayId(String gatewayId) {
    this.gatewayId = gatewayId;
    return this;
  }

   /**
   * Get gatewayId
   * @return gatewayId
  **/
  @Schema(description = "")
  public String getGatewayId() {
    return gatewayId;
  }

  public void setGatewayId(String gatewayId) {
    this.gatewayId = gatewayId;
  }

  public GetPluginBindingResponse gatewayName(String gatewayName) {
    this.gatewayName = gatewayName;
    return this;
  }

   /**
   * Get gatewayName
   * @return gatewayName
  **/
  @Schema(description = "")
  public String getGatewayName() {
    return gatewayName;
  }

  public void setGatewayName(String gatewayName) {
    this.gatewayName = gatewayName;
  }

  public GetPluginBindingResponse id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public GetPluginBindingResponse pluginConfig(String pluginConfig) {
    this.pluginConfig = pluginConfig;
    return this;
  }

   /**
   * Get pluginConfig
   * @return pluginConfig
  **/
  @Schema(description = "")
  public String getPluginConfig() {
    return pluginConfig;
  }

  public void setPluginConfig(String pluginConfig) {
    this.pluginConfig = pluginConfig;
  }

  public GetPluginBindingResponse pluginName(String pluginName) {
    this.pluginName = pluginName;
    return this;
  }

   /**
   * Get pluginName
   * @return pluginName
  **/
  @Schema(description = "")
  public String getPluginName() {
    return pluginName;
  }

  public void setPluginName(String pluginName) {
    this.pluginName = pluginName;
  }

  public GetPluginBindingResponse routeId(String routeId) {
    this.routeId = routeId;
    return this;
  }

   /**
   * Get routeId
   * @return routeId
  **/
  @Schema(description = "")
  public String getRouteId() {
    return routeId;
  }

  public void setRouteId(String routeId) {
    this.routeId = routeId;
  }

  public GetPluginBindingResponse routeName(String routeName) {
    this.routeName = routeName;
    return this;
  }

   /**
   * Get routeName
   * @return routeName
  **/
  @Schema(description = "")
  public String getRouteName() {
    return routeName;
  }

  public void setRouteName(String routeName) {
    this.routeName = routeName;
  }

  public GetPluginBindingResponse scope(String scope) {
    this.scope = scope;
    return this;
  }

   /**
   * Get scope
   * @return scope
  **/
  @Schema(description = "")
  public String getScope() {
    return scope;
  }

  public void setScope(String scope) {
    this.scope = scope;
  }

  public GetPluginBindingResponse serviceId(String serviceId) {
    this.serviceId = serviceId;
    return this;
  }

   /**
   * Get serviceId
   * @return serviceId
  **/
  @Schema(description = "")
  public String getServiceId() {
    return serviceId;
  }

  public void setServiceId(String serviceId) {
    this.serviceId = serviceId;
  }

  public GetPluginBindingResponse serviceName(String serviceName) {
    this.serviceName = serviceName;
    return this;
  }

   /**
   * Get serviceName
   * @return serviceName
  **/
  @Schema(description = "")
  public String getServiceName() {
    return serviceName;
  }

  public void setServiceName(String serviceName) {
    this.serviceName = serviceName;
  }

  public GetPluginBindingResponse target(String target) {
    this.target = target;
    return this;
  }

   /**
   * Get target
   * @return target
  **/
  @Schema(description = "")
  public String getTarget() {
    return target;
  }

  public void setTarget(String target) {
    this.target = target;
  }

  public GetPluginBindingResponse targetName(String targetName) {
    this.targetName = targetName;
    return this;
  }

   /**
   * Get targetName
   * @return targetName
  **/
  @Schema(description = "")
  public String getTargetName() {
    return targetName;
  }

  public void setTargetName(String targetName) {
    this.targetName = targetName;
  }

  public GetPluginBindingResponse updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetPluginBindingResponse getPluginBindingResponse = (GetPluginBindingResponse) o;
    return Objects.equals(this.description, getPluginBindingResponse.description) &&
        Objects.equals(this.enable, getPluginBindingResponse.enable) &&
        Objects.equals(this.gatewayId, getPluginBindingResponse.gatewayId) &&
        Objects.equals(this.gatewayName, getPluginBindingResponse.gatewayName) &&
        Objects.equals(this.id, getPluginBindingResponse.id) &&
        Objects.equals(this.pluginConfig, getPluginBindingResponse.pluginConfig) &&
        Objects.equals(this.pluginName, getPluginBindingResponse.pluginName) &&
        Objects.equals(this.routeId, getPluginBindingResponse.routeId) &&
        Objects.equals(this.routeName, getPluginBindingResponse.routeName) &&
        Objects.equals(this.scope, getPluginBindingResponse.scope) &&
        Objects.equals(this.serviceId, getPluginBindingResponse.serviceId) &&
        Objects.equals(this.serviceName, getPluginBindingResponse.serviceName) &&
        Objects.equals(this.target, getPluginBindingResponse.target) &&
        Objects.equals(this.targetName, getPluginBindingResponse.targetName) &&
        Objects.equals(this.updateTime, getPluginBindingResponse.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, enable, gatewayId, gatewayName, id, pluginConfig, pluginName, routeId, routeName, scope, serviceId, serviceName, target, targetName, updateTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetPluginBindingResponse {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    enable: ").append(toIndentedString(enable)).append("\n");
    sb.append("    gatewayId: ").append(toIndentedString(gatewayId)).append("\n");
    sb.append("    gatewayName: ").append(toIndentedString(gatewayName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    pluginConfig: ").append(toIndentedString(pluginConfig)).append("\n");
    sb.append("    pluginName: ").append(toIndentedString(pluginName)).append("\n");
    sb.append("    routeId: ").append(toIndentedString(routeId)).append("\n");
    sb.append("    routeName: ").append(toIndentedString(routeName)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    serviceId: ").append(toIndentedString(serviceId)).append("\n");
    sb.append("    serviceName: ").append(toIndentedString(serviceName)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("    targetName: ").append(toIndentedString(targetName)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
