/*
 * apig
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.apig.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.apig.model.ConsistentHashLBForUpdateUpstreamInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * LoadBalancerSettingsForUpdateUpstreamInput
 */



public class LoadBalancerSettingsForUpdateUpstreamInput {
  @SerializedName("ConsistentHashLB")
  private ConsistentHashLBForUpdateUpstreamInput consistentHashLB = null;

  @SerializedName("LbPolicy")
  private String lbPolicy = null;

  @SerializedName("SimpleLB")
  private String simpleLB = null;

  @SerializedName("WarmupDuration")
  private Long warmupDuration = null;

  public LoadBalancerSettingsForUpdateUpstreamInput consistentHashLB(ConsistentHashLBForUpdateUpstreamInput consistentHashLB) {
    this.consistentHashLB = consistentHashLB;
    return this;
  }

   /**
   * Get consistentHashLB
   * @return consistentHashLB
  **/
  @Valid
  @Schema(description = "")
  public ConsistentHashLBForUpdateUpstreamInput getConsistentHashLB() {
    return consistentHashLB;
  }

  public void setConsistentHashLB(ConsistentHashLBForUpdateUpstreamInput consistentHashLB) {
    this.consistentHashLB = consistentHashLB;
  }

  public LoadBalancerSettingsForUpdateUpstreamInput lbPolicy(String lbPolicy) {
    this.lbPolicy = lbPolicy;
    return this;
  }

   /**
   * Get lbPolicy
   * @return lbPolicy
  **/
  @Schema(description = "")
  public String getLbPolicy() {
    return lbPolicy;
  }

  public void setLbPolicy(String lbPolicy) {
    this.lbPolicy = lbPolicy;
  }

  public LoadBalancerSettingsForUpdateUpstreamInput simpleLB(String simpleLB) {
    this.simpleLB = simpleLB;
    return this;
  }

   /**
   * Get simpleLB
   * @return simpleLB
  **/
  @Schema(description = "")
  public String getSimpleLB() {
    return simpleLB;
  }

  public void setSimpleLB(String simpleLB) {
    this.simpleLB = simpleLB;
  }

  public LoadBalancerSettingsForUpdateUpstreamInput warmupDuration(Long warmupDuration) {
    this.warmupDuration = warmupDuration;
    return this;
  }

   /**
   * Get warmupDuration
   * @return warmupDuration
  **/
  @Schema(description = "")
  public Long getWarmupDuration() {
    return warmupDuration;
  }

  public void setWarmupDuration(Long warmupDuration) {
    this.warmupDuration = warmupDuration;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoadBalancerSettingsForUpdateUpstreamInput loadBalancerSettingsForUpdateUpstreamInput = (LoadBalancerSettingsForUpdateUpstreamInput) o;
    return Objects.equals(this.consistentHashLB, loadBalancerSettingsForUpdateUpstreamInput.consistentHashLB) &&
        Objects.equals(this.lbPolicy, loadBalancerSettingsForUpdateUpstreamInput.lbPolicy) &&
        Objects.equals(this.simpleLB, loadBalancerSettingsForUpdateUpstreamInput.simpleLB) &&
        Objects.equals(this.warmupDuration, loadBalancerSettingsForUpdateUpstreamInput.warmupDuration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(consistentHashLB, lbPolicy, simpleLB, warmupDuration);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoadBalancerSettingsForUpdateUpstreamInput {\n");
    
    sb.append("    consistentHashLB: ").append(toIndentedString(consistentHashLB)).append("\n");
    sb.append("    lbPolicy: ").append(toIndentedString(lbPolicy)).append("\n");
    sb.append("    simpleLB: ").append(toIndentedString(simpleLB)).append("\n");
    sb.append("    warmupDuration: ").append(toIndentedString(warmupDuration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
