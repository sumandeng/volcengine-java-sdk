/*
 * apig
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.apig.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * IngressSettingsForCreateUpstreamSourceInput
 */



public class IngressSettingsForCreateUpstreamSourceInput {
  @SerializedName("EnableAllIngressClasses")
  private Boolean enableAllIngressClasses = null;

  @SerializedName("EnableAllNamespaces")
  private Boolean enableAllNamespaces = null;

  @SerializedName("EnableIngress")
  private Boolean enableIngress = null;

  @SerializedName("EnableIngressWithoutIngressClass")
  private Boolean enableIngressWithoutIngressClass = null;

  @SerializedName("IngressClasses")
  private List<String> ingressClasses = null;

  @SerializedName("UpdateStatus")
  private Boolean updateStatus = null;

  @SerializedName("WatchNamespaces")
  private List<String> watchNamespaces = null;

  public IngressSettingsForCreateUpstreamSourceInput enableAllIngressClasses(Boolean enableAllIngressClasses) {
    this.enableAllIngressClasses = enableAllIngressClasses;
    return this;
  }

   /**
   * Get enableAllIngressClasses
   * @return enableAllIngressClasses
  **/
  @Schema(description = "")
  public Boolean isEnableAllIngressClasses() {
    return enableAllIngressClasses;
  }

  public void setEnableAllIngressClasses(Boolean enableAllIngressClasses) {
    this.enableAllIngressClasses = enableAllIngressClasses;
  }

  public IngressSettingsForCreateUpstreamSourceInput enableAllNamespaces(Boolean enableAllNamespaces) {
    this.enableAllNamespaces = enableAllNamespaces;
    return this;
  }

   /**
   * Get enableAllNamespaces
   * @return enableAllNamespaces
  **/
  @Schema(description = "")
  public Boolean isEnableAllNamespaces() {
    return enableAllNamespaces;
  }

  public void setEnableAllNamespaces(Boolean enableAllNamespaces) {
    this.enableAllNamespaces = enableAllNamespaces;
  }

  public IngressSettingsForCreateUpstreamSourceInput enableIngress(Boolean enableIngress) {
    this.enableIngress = enableIngress;
    return this;
  }

   /**
   * Get enableIngress
   * @return enableIngress
  **/
  @Schema(description = "")
  public Boolean isEnableIngress() {
    return enableIngress;
  }

  public void setEnableIngress(Boolean enableIngress) {
    this.enableIngress = enableIngress;
  }

  public IngressSettingsForCreateUpstreamSourceInput enableIngressWithoutIngressClass(Boolean enableIngressWithoutIngressClass) {
    this.enableIngressWithoutIngressClass = enableIngressWithoutIngressClass;
    return this;
  }

   /**
   * Get enableIngressWithoutIngressClass
   * @return enableIngressWithoutIngressClass
  **/
  @Schema(description = "")
  public Boolean isEnableIngressWithoutIngressClass() {
    return enableIngressWithoutIngressClass;
  }

  public void setEnableIngressWithoutIngressClass(Boolean enableIngressWithoutIngressClass) {
    this.enableIngressWithoutIngressClass = enableIngressWithoutIngressClass;
  }

  public IngressSettingsForCreateUpstreamSourceInput ingressClasses(List<String> ingressClasses) {
    this.ingressClasses = ingressClasses;
    return this;
  }

  public IngressSettingsForCreateUpstreamSourceInput addIngressClassesItem(String ingressClassesItem) {
    if (this.ingressClasses == null) {
      this.ingressClasses = new ArrayList<String>();
    }
    this.ingressClasses.add(ingressClassesItem);
    return this;
  }

   /**
   * Get ingressClasses
   * @return ingressClasses
  **/
  @Schema(description = "")
  public List<String> getIngressClasses() {
    return ingressClasses;
  }

  public void setIngressClasses(List<String> ingressClasses) {
    this.ingressClasses = ingressClasses;
  }

  public IngressSettingsForCreateUpstreamSourceInput updateStatus(Boolean updateStatus) {
    this.updateStatus = updateStatus;
    return this;
  }

   /**
   * Get updateStatus
   * @return updateStatus
  **/
  @Schema(description = "")
  public Boolean isUpdateStatus() {
    return updateStatus;
  }

  public void setUpdateStatus(Boolean updateStatus) {
    this.updateStatus = updateStatus;
  }

  public IngressSettingsForCreateUpstreamSourceInput watchNamespaces(List<String> watchNamespaces) {
    this.watchNamespaces = watchNamespaces;
    return this;
  }

  public IngressSettingsForCreateUpstreamSourceInput addWatchNamespacesItem(String watchNamespacesItem) {
    if (this.watchNamespaces == null) {
      this.watchNamespaces = new ArrayList<String>();
    }
    this.watchNamespaces.add(watchNamespacesItem);
    return this;
  }

   /**
   * Get watchNamespaces
   * @return watchNamespaces
  **/
  @Schema(description = "")
  public List<String> getWatchNamespaces() {
    return watchNamespaces;
  }

  public void setWatchNamespaces(List<String> watchNamespaces) {
    this.watchNamespaces = watchNamespaces;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IngressSettingsForCreateUpstreamSourceInput ingressSettingsForCreateUpstreamSourceInput = (IngressSettingsForCreateUpstreamSourceInput) o;
    return Objects.equals(this.enableAllIngressClasses, ingressSettingsForCreateUpstreamSourceInput.enableAllIngressClasses) &&
        Objects.equals(this.enableAllNamespaces, ingressSettingsForCreateUpstreamSourceInput.enableAllNamespaces) &&
        Objects.equals(this.enableIngress, ingressSettingsForCreateUpstreamSourceInput.enableIngress) &&
        Objects.equals(this.enableIngressWithoutIngressClass, ingressSettingsForCreateUpstreamSourceInput.enableIngressWithoutIngressClass) &&
        Objects.equals(this.ingressClasses, ingressSettingsForCreateUpstreamSourceInput.ingressClasses) &&
        Objects.equals(this.updateStatus, ingressSettingsForCreateUpstreamSourceInput.updateStatus) &&
        Objects.equals(this.watchNamespaces, ingressSettingsForCreateUpstreamSourceInput.watchNamespaces);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enableAllIngressClasses, enableAllNamespaces, enableIngress, enableIngressWithoutIngressClass, ingressClasses, updateStatus, watchNamespaces);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IngressSettingsForCreateUpstreamSourceInput {\n");
    
    sb.append("    enableAllIngressClasses: ").append(toIndentedString(enableAllIngressClasses)).append("\n");
    sb.append("    enableAllNamespaces: ").append(toIndentedString(enableAllNamespaces)).append("\n");
    sb.append("    enableIngress: ").append(toIndentedString(enableIngress)).append("\n");
    sb.append("    enableIngressWithoutIngressClass: ").append(toIndentedString(enableIngressWithoutIngressClass)).append("\n");
    sb.append("    ingressClasses: ").append(toIndentedString(ingressClasses)).append("\n");
    sb.append("    updateStatus: ").append(toIndentedString(updateStatus)).append("\n");
    sb.append("    watchNamespaces: ").append(toIndentedString(watchNamespaces)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
