/*
 * apig
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.apig.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.apig.model.CustomBodyParamsForListUpstreamsOutput;
import com.volcengine.apig.model.CustomHeaderParamsForListUpstreamsOutput;
import com.volcengine.apig.model.CustomModelServiceForListUpstreamsOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * AIProviderForListUpstreamsOutput
 */



public class AIProviderForListUpstreamsOutput {
  @SerializedName("BaseUrl")
  private String baseUrl = null;

  @SerializedName("CustomBodyParams")
  private CustomBodyParamsForListUpstreamsOutput customBodyParams = null;

  @SerializedName("CustomHeaderParams")
  private CustomHeaderParamsForListUpstreamsOutput customHeaderParams = null;

  @SerializedName("CustomModelService")
  private CustomModelServiceForListUpstreamsOutput customModelService = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Token")
  private String token = null;

  public AIProviderForListUpstreamsOutput baseUrl(String baseUrl) {
    this.baseUrl = baseUrl;
    return this;
  }

   /**
   * Get baseUrl
   * @return baseUrl
  **/
  @Schema(description = "")
  public String getBaseUrl() {
    return baseUrl;
  }

  public void setBaseUrl(String baseUrl) {
    this.baseUrl = baseUrl;
  }

  public AIProviderForListUpstreamsOutput customBodyParams(CustomBodyParamsForListUpstreamsOutput customBodyParams) {
    this.customBodyParams = customBodyParams;
    return this;
  }

   /**
   * Get customBodyParams
   * @return customBodyParams
  **/
  @Valid
  @Schema(description = "")
  public CustomBodyParamsForListUpstreamsOutput getCustomBodyParams() {
    return customBodyParams;
  }

  public void setCustomBodyParams(CustomBodyParamsForListUpstreamsOutput customBodyParams) {
    this.customBodyParams = customBodyParams;
  }

  public AIProviderForListUpstreamsOutput customHeaderParams(CustomHeaderParamsForListUpstreamsOutput customHeaderParams) {
    this.customHeaderParams = customHeaderParams;
    return this;
  }

   /**
   * Get customHeaderParams
   * @return customHeaderParams
  **/
  @Valid
  @Schema(description = "")
  public CustomHeaderParamsForListUpstreamsOutput getCustomHeaderParams() {
    return customHeaderParams;
  }

  public void setCustomHeaderParams(CustomHeaderParamsForListUpstreamsOutput customHeaderParams) {
    this.customHeaderParams = customHeaderParams;
  }

  public AIProviderForListUpstreamsOutput customModelService(CustomModelServiceForListUpstreamsOutput customModelService) {
    this.customModelService = customModelService;
    return this;
  }

   /**
   * Get customModelService
   * @return customModelService
  **/
  @Valid
  @Schema(description = "")
  public CustomModelServiceForListUpstreamsOutput getCustomModelService() {
    return customModelService;
  }

  public void setCustomModelService(CustomModelServiceForListUpstreamsOutput customModelService) {
    this.customModelService = customModelService;
  }

  public AIProviderForListUpstreamsOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AIProviderForListUpstreamsOutput token(String token) {
    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/
  @Schema(description = "")
  public String getToken() {
    return token;
  }

  public void setToken(String token) {
    this.token = token;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AIProviderForListUpstreamsOutput aiProviderForListUpstreamsOutput = (AIProviderForListUpstreamsOutput) o;
    return Objects.equals(this.baseUrl, aiProviderForListUpstreamsOutput.baseUrl) &&
        Objects.equals(this.customBodyParams, aiProviderForListUpstreamsOutput.customBodyParams) &&
        Objects.equals(this.customHeaderParams, aiProviderForListUpstreamsOutput.customHeaderParams) &&
        Objects.equals(this.customModelService, aiProviderForListUpstreamsOutput.customModelService) &&
        Objects.equals(this.name, aiProviderForListUpstreamsOutput.name) &&
        Objects.equals(this.token, aiProviderForListUpstreamsOutput.token);
  }

  @Override
  public int hashCode() {
    return Objects.hash(baseUrl, customBodyParams, customHeaderParams, customModelService, name, token);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AIProviderForListUpstreamsOutput {\n");
    
    sb.append("    baseUrl: ").append(toIndentedString(baseUrl)).append("\n");
    sb.append("    customBodyParams: ").append(toIndentedString(customBodyParams)).append("\n");
    sb.append("    customHeaderParams: ").append(toIndentedString(customHeaderParams)).append("\n");
    sb.append("    customModelService: ").append(toIndentedString(customModelService)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
