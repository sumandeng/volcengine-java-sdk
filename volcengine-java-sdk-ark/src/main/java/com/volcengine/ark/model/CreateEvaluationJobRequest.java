/*
 * ark
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.ark.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.ark.model.EvaluationDatasetForCreateEvaluationJobInput;
import com.volcengine.ark.model.TagForCreateEvaluationJobInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateEvaluationJobRequest
 */



public class CreateEvaluationJobRequest {
  @SerializedName("Description")
  private String description = null;

  @SerializedName("DryRun")
  private Boolean dryRun = null;

  @SerializedName("EndpointId")
  private String endpointId = null;

  @SerializedName("EvaluationDatasets")
  private List<EvaluationDatasetForCreateEvaluationJobInput> evaluationDatasets = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("Tags")
  private List<TagForCreateEvaluationJobInput> tags = null;

  public CreateEvaluationJobRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CreateEvaluationJobRequest dryRun(Boolean dryRun) {
    this.dryRun = dryRun;
    return this;
  }

   /**
   * Get dryRun
   * @return dryRun
  **/
  @Schema(description = "")
  public Boolean isDryRun() {
    return dryRun;
  }

  public void setDryRun(Boolean dryRun) {
    this.dryRun = dryRun;
  }

  public CreateEvaluationJobRequest endpointId(String endpointId) {
    this.endpointId = endpointId;
    return this;
  }

   /**
   * Get endpointId
   * @return endpointId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getEndpointId() {
    return endpointId;
  }

  public void setEndpointId(String endpointId) {
    this.endpointId = endpointId;
  }

  public CreateEvaluationJobRequest evaluationDatasets(List<EvaluationDatasetForCreateEvaluationJobInput> evaluationDatasets) {
    this.evaluationDatasets = evaluationDatasets;
    return this;
  }

  public CreateEvaluationJobRequest addEvaluationDatasetsItem(EvaluationDatasetForCreateEvaluationJobInput evaluationDatasetsItem) {
    if (this.evaluationDatasets == null) {
      this.evaluationDatasets = new ArrayList<EvaluationDatasetForCreateEvaluationJobInput>();
    }
    this.evaluationDatasets.add(evaluationDatasetsItem);
    return this;
  }

   /**
   * Get evaluationDatasets
   * @return evaluationDatasets
  **/
  @Valid
  @Schema(description = "")
  public List<EvaluationDatasetForCreateEvaluationJobInput> getEvaluationDatasets() {
    return evaluationDatasets;
  }

  public void setEvaluationDatasets(List<EvaluationDatasetForCreateEvaluationJobInput> evaluationDatasets) {
    this.evaluationDatasets = evaluationDatasets;
  }

  public CreateEvaluationJobRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CreateEvaluationJobRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public CreateEvaluationJobRequest tags(List<TagForCreateEvaluationJobInput> tags) {
    this.tags = tags;
    return this;
  }

  public CreateEvaluationJobRequest addTagsItem(TagForCreateEvaluationJobInput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForCreateEvaluationJobInput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForCreateEvaluationJobInput> getTags() {
    return tags;
  }

  public void setTags(List<TagForCreateEvaluationJobInput> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateEvaluationJobRequest createEvaluationJobRequest = (CreateEvaluationJobRequest) o;
    return Objects.equals(this.description, createEvaluationJobRequest.description) &&
        Objects.equals(this.dryRun, createEvaluationJobRequest.dryRun) &&
        Objects.equals(this.endpointId, createEvaluationJobRequest.endpointId) &&
        Objects.equals(this.evaluationDatasets, createEvaluationJobRequest.evaluationDatasets) &&
        Objects.equals(this.name, createEvaluationJobRequest.name) &&
        Objects.equals(this.projectName, createEvaluationJobRequest.projectName) &&
        Objects.equals(this.tags, createEvaluationJobRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, dryRun, endpointId, evaluationDatasets, name, projectName, tags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateEvaluationJobRequest {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dryRun: ").append(toIndentedString(dryRun)).append("\n");
    sb.append("    endpointId: ").append(toIndentedString(endpointId)).append("\n");
    sb.append("    evaluationDatasets: ").append(toIndentedString(evaluationDatasets)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
