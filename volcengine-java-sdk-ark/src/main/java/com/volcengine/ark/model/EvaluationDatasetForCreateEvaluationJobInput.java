/*
 * ark
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.ark.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.ark.model.TosLocationForCreateEvaluationJobInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * EvaluationDatasetForCreateEvaluationJobInput
 */



public class EvaluationDatasetForCreateEvaluationJobInput {
  @SerializedName("AdminEvaluationDatasetId")
  private String adminEvaluationDatasetId = null;

  /**
   * Gets or Sets datasetType
   */
  @JsonAdapter(DatasetTypeEnum.Adapter.class)
  public enum DatasetTypeEnum {
    @SerializedName("AdminDataset")
    ADMINDATASET("AdminDataset"),
    @SerializedName("UserDataset")
    USERDATASET("UserDataset");

    private String value;

    DatasetTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static DatasetTypeEnum fromValue(String input) {
      for (DatasetTypeEnum b : DatasetTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<DatasetTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DatasetTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public DatasetTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return DatasetTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("DatasetType")
  private DatasetTypeEnum datasetType = null;

  @SerializedName("EvaluationAbility")
  private String evaluationAbility = null;

  /**
   * Gets or Sets method
   */
  @JsonAdapter(MethodEnum.Adapter.class)
  public enum MethodEnum {
    @SerializedName("Include")
    INCLUDE("Include"),
    @SerializedName("BuiltIn")
    BUILTIN("BuiltIn"),
    @SerializedName("Match")
    MATCH("Match"),
    @SerializedName("InferenceOnly")
    INFERENCEONLY("InferenceOnly");

    private String value;

    MethodEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static MethodEnum fromValue(String input) {
      for (MethodEnum b : MethodEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<MethodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MethodEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public MethodEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return MethodEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("Method")
  private MethodEnum method = null;

  @SerializedName("ScoringWeight")
  private Integer scoringWeight = null;

  @SerializedName("TosLocation")
  private TosLocationForCreateEvaluationJobInput tosLocation = null;

  public EvaluationDatasetForCreateEvaluationJobInput adminEvaluationDatasetId(String adminEvaluationDatasetId) {
    this.adminEvaluationDatasetId = adminEvaluationDatasetId;
    return this;
  }

   /**
   * Get adminEvaluationDatasetId
   * @return adminEvaluationDatasetId
  **/
  @Schema(description = "")
  public String getAdminEvaluationDatasetId() {
    return adminEvaluationDatasetId;
  }

  public void setAdminEvaluationDatasetId(String adminEvaluationDatasetId) {
    this.adminEvaluationDatasetId = adminEvaluationDatasetId;
  }

  public EvaluationDatasetForCreateEvaluationJobInput datasetType(DatasetTypeEnum datasetType) {
    this.datasetType = datasetType;
    return this;
  }

   /**
   * Get datasetType
   * @return datasetType
  **/
  @Schema(description = "")
  public DatasetTypeEnum getDatasetType() {
    return datasetType;
  }

  public void setDatasetType(DatasetTypeEnum datasetType) {
    this.datasetType = datasetType;
  }

  public EvaluationDatasetForCreateEvaluationJobInput evaluationAbility(String evaluationAbility) {
    this.evaluationAbility = evaluationAbility;
    return this;
  }

   /**
   * Get evaluationAbility
   * @return evaluationAbility
  **/
  @Schema(description = "")
  public String getEvaluationAbility() {
    return evaluationAbility;
  }

  public void setEvaluationAbility(String evaluationAbility) {
    this.evaluationAbility = evaluationAbility;
  }

  public EvaluationDatasetForCreateEvaluationJobInput method(MethodEnum method) {
    this.method = method;
    return this;
  }

   /**
   * Get method
   * @return method
  **/
  @Schema(description = "")
  public MethodEnum getMethod() {
    return method;
  }

  public void setMethod(MethodEnum method) {
    this.method = method;
  }

  public EvaluationDatasetForCreateEvaluationJobInput scoringWeight(Integer scoringWeight) {
    this.scoringWeight = scoringWeight;
    return this;
  }

   /**
   * Get scoringWeight
   * @return scoringWeight
  **/
  @Schema(description = "")
  public Integer getScoringWeight() {
    return scoringWeight;
  }

  public void setScoringWeight(Integer scoringWeight) {
    this.scoringWeight = scoringWeight;
  }

  public EvaluationDatasetForCreateEvaluationJobInput tosLocation(TosLocationForCreateEvaluationJobInput tosLocation) {
    this.tosLocation = tosLocation;
    return this;
  }

   /**
   * Get tosLocation
   * @return tosLocation
  **/
  @Valid
  @Schema(description = "")
  public TosLocationForCreateEvaluationJobInput getTosLocation() {
    return tosLocation;
  }

  public void setTosLocation(TosLocationForCreateEvaluationJobInput tosLocation) {
    this.tosLocation = tosLocation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EvaluationDatasetForCreateEvaluationJobInput evaluationDatasetForCreateEvaluationJobInput = (EvaluationDatasetForCreateEvaluationJobInput) o;
    return Objects.equals(this.adminEvaluationDatasetId, evaluationDatasetForCreateEvaluationJobInput.adminEvaluationDatasetId) &&
        Objects.equals(this.datasetType, evaluationDatasetForCreateEvaluationJobInput.datasetType) &&
        Objects.equals(this.evaluationAbility, evaluationDatasetForCreateEvaluationJobInput.evaluationAbility) &&
        Objects.equals(this.method, evaluationDatasetForCreateEvaluationJobInput.method) &&
        Objects.equals(this.scoringWeight, evaluationDatasetForCreateEvaluationJobInput.scoringWeight) &&
        Objects.equals(this.tosLocation, evaluationDatasetForCreateEvaluationJobInput.tosLocation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adminEvaluationDatasetId, datasetType, evaluationAbility, method, scoringWeight, tosLocation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EvaluationDatasetForCreateEvaluationJobInput {\n");
    
    sb.append("    adminEvaluationDatasetId: ").append(toIndentedString(adminEvaluationDatasetId)).append("\n");
    sb.append("    datasetType: ").append(toIndentedString(datasetType)).append("\n");
    sb.append("    evaluationAbility: ").append(toIndentedString(evaluationAbility)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    scoringWeight: ").append(toIndentedString(scoringWeight)).append("\n");
    sb.append("    tosLocation: ").append(toIndentedString(tosLocation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
