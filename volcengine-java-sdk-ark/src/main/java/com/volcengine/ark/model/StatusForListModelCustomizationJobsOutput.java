/*
 * ark
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.ark.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * StatusForListModelCustomizationJobsOutput
 */



public class StatusForListModelCustomizationJobsOutput {
  @SerializedName("BillableTokens")
  private Long billableTokens = null;

  @SerializedName("Message")
  private String message = null;

  @SerializedName("OutputExpiredTime")
  private String outputExpiredTime = null;

  /**
   * Gets or Sets phase
   */
  @JsonAdapter(PhaseEnum.Adapter.class)
  public enum PhaseEnum {
    @SerializedName("Preprocessing")
    PREPROCESSING("Preprocessing"),
    @SerializedName("Queued")
    QUEUED("Queued"),
    @SerializedName("Deploying")
    DEPLOYING("Deploying"),
    @SerializedName("Running")
    RUNNING("Running"),
    @SerializedName("Completing")
    COMPLETING("Completing"),
    @SerializedName("Completed")
    COMPLETED("Completed"),
    @SerializedName("Terminating")
    TERMINATING("Terminating"),
    @SerializedName("Terminated")
    TERMINATED("Terminated"),
    @SerializedName("Failed")
    FAILED("Failed");

    private String value;

    PhaseEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static PhaseEnum fromValue(String input) {
      for (PhaseEnum b : PhaseEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<PhaseEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PhaseEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public PhaseEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return PhaseEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("Phase")
  private PhaseEnum phase = null;

  @SerializedName("PhaseTime")
  private String phaseTime = null;

  @SerializedName("QueuePosition")
  private Integer queuePosition = null;

  @SerializedName("Resumable")
  private Boolean resumable = null;

  @SerializedName("RetryCount")
  private Integer retryCount = null;

  @SerializedName("RetryLimit")
  private Integer retryLimit = null;

  @SerializedName("TrainingTokensPerEpoch")
  private Long trainingTokensPerEpoch = null;

  public StatusForListModelCustomizationJobsOutput billableTokens(Long billableTokens) {
    this.billableTokens = billableTokens;
    return this;
  }

   /**
   * Get billableTokens
   * @return billableTokens
  **/
  @Schema(description = "")
  public Long getBillableTokens() {
    return billableTokens;
  }

  public void setBillableTokens(Long billableTokens) {
    this.billableTokens = billableTokens;
  }

  public StatusForListModelCustomizationJobsOutput message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @Schema(description = "")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public StatusForListModelCustomizationJobsOutput outputExpiredTime(String outputExpiredTime) {
    this.outputExpiredTime = outputExpiredTime;
    return this;
  }

   /**
   * Get outputExpiredTime
   * @return outputExpiredTime
  **/
  @Schema(description = "")
  public String getOutputExpiredTime() {
    return outputExpiredTime;
  }

  public void setOutputExpiredTime(String outputExpiredTime) {
    this.outputExpiredTime = outputExpiredTime;
  }

  public StatusForListModelCustomizationJobsOutput phase(PhaseEnum phase) {
    this.phase = phase;
    return this;
  }

   /**
   * Get phase
   * @return phase
  **/
  @Schema(description = "")
  public PhaseEnum getPhase() {
    return phase;
  }

  public void setPhase(PhaseEnum phase) {
    this.phase = phase;
  }

  public StatusForListModelCustomizationJobsOutput phaseTime(String phaseTime) {
    this.phaseTime = phaseTime;
    return this;
  }

   /**
   * Get phaseTime
   * @return phaseTime
  **/
  @Schema(description = "")
  public String getPhaseTime() {
    return phaseTime;
  }

  public void setPhaseTime(String phaseTime) {
    this.phaseTime = phaseTime;
  }

  public StatusForListModelCustomizationJobsOutput queuePosition(Integer queuePosition) {
    this.queuePosition = queuePosition;
    return this;
  }

   /**
   * Get queuePosition
   * @return queuePosition
  **/
  @Schema(description = "")
  public Integer getQueuePosition() {
    return queuePosition;
  }

  public void setQueuePosition(Integer queuePosition) {
    this.queuePosition = queuePosition;
  }

  public StatusForListModelCustomizationJobsOutput resumable(Boolean resumable) {
    this.resumable = resumable;
    return this;
  }

   /**
   * Get resumable
   * @return resumable
  **/
  @Schema(description = "")
  public Boolean isResumable() {
    return resumable;
  }

  public void setResumable(Boolean resumable) {
    this.resumable = resumable;
  }

  public StatusForListModelCustomizationJobsOutput retryCount(Integer retryCount) {
    this.retryCount = retryCount;
    return this;
  }

   /**
   * Get retryCount
   * @return retryCount
  **/
  @Schema(description = "")
  public Integer getRetryCount() {
    return retryCount;
  }

  public void setRetryCount(Integer retryCount) {
    this.retryCount = retryCount;
  }

  public StatusForListModelCustomizationJobsOutput retryLimit(Integer retryLimit) {
    this.retryLimit = retryLimit;
    return this;
  }

   /**
   * Get retryLimit
   * @return retryLimit
  **/
  @Schema(description = "")
  public Integer getRetryLimit() {
    return retryLimit;
  }

  public void setRetryLimit(Integer retryLimit) {
    this.retryLimit = retryLimit;
  }

  public StatusForListModelCustomizationJobsOutput trainingTokensPerEpoch(Long trainingTokensPerEpoch) {
    this.trainingTokensPerEpoch = trainingTokensPerEpoch;
    return this;
  }

   /**
   * Get trainingTokensPerEpoch
   * @return trainingTokensPerEpoch
  **/
  @Schema(description = "")
  public Long getTrainingTokensPerEpoch() {
    return trainingTokensPerEpoch;
  }

  public void setTrainingTokensPerEpoch(Long trainingTokensPerEpoch) {
    this.trainingTokensPerEpoch = trainingTokensPerEpoch;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatusForListModelCustomizationJobsOutput statusForListModelCustomizationJobsOutput = (StatusForListModelCustomizationJobsOutput) o;
    return Objects.equals(this.billableTokens, statusForListModelCustomizationJobsOutput.billableTokens) &&
        Objects.equals(this.message, statusForListModelCustomizationJobsOutput.message) &&
        Objects.equals(this.outputExpiredTime, statusForListModelCustomizationJobsOutput.outputExpiredTime) &&
        Objects.equals(this.phase, statusForListModelCustomizationJobsOutput.phase) &&
        Objects.equals(this.phaseTime, statusForListModelCustomizationJobsOutput.phaseTime) &&
        Objects.equals(this.queuePosition, statusForListModelCustomizationJobsOutput.queuePosition) &&
        Objects.equals(this.resumable, statusForListModelCustomizationJobsOutput.resumable) &&
        Objects.equals(this.retryCount, statusForListModelCustomizationJobsOutput.retryCount) &&
        Objects.equals(this.retryLimit, statusForListModelCustomizationJobsOutput.retryLimit) &&
        Objects.equals(this.trainingTokensPerEpoch, statusForListModelCustomizationJobsOutput.trainingTokensPerEpoch);
  }

  @Override
  public int hashCode() {
    return Objects.hash(billableTokens, message, outputExpiredTime, phase, phaseTime, queuePosition, resumable, retryCount, retryLimit, trainingTokensPerEpoch);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatusForListModelCustomizationJobsOutput {\n");
    
    sb.append("    billableTokens: ").append(toIndentedString(billableTokens)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    outputExpiredTime: ").append(toIndentedString(outputExpiredTime)).append("\n");
    sb.append("    phase: ").append(toIndentedString(phase)).append("\n");
    sb.append("    phaseTime: ").append(toIndentedString(phaseTime)).append("\n");
    sb.append("    queuePosition: ").append(toIndentedString(queuePosition)).append("\n");
    sb.append("    resumable: ").append(toIndentedString(resumable)).append("\n");
    sb.append("    retryCount: ").append(toIndentedString(retryCount)).append("\n");
    sb.append("    retryLimit: ").append(toIndentedString(retryLimit)).append("\n");
    sb.append("    trainingTokensPerEpoch: ").append(toIndentedString(trainingTokensPerEpoch)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
