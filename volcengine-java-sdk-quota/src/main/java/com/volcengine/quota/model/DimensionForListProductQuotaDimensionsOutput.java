/*
 * quota
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.quota.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.quota.model.DimensionValueForListProductQuotaDimensionsOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DimensionForListProductQuotaDimensionsOutput
 */



public class DimensionForListProductQuotaDimensionsOutput {
  @SerializedName("DimensionCode")
  private String dimensionCode = null;

  @SerializedName("DimensionName")
  private String dimensionName = null;

  @SerializedName("DimensionValues")
  private List<DimensionValueForListProductQuotaDimensionsOutput> dimensionValues = null;

  public DimensionForListProductQuotaDimensionsOutput dimensionCode(String dimensionCode) {
    this.dimensionCode = dimensionCode;
    return this;
  }

   /**
   * Get dimensionCode
   * @return dimensionCode
  **/
  @Schema(description = "")
  public String getDimensionCode() {
    return dimensionCode;
  }

  public void setDimensionCode(String dimensionCode) {
    this.dimensionCode = dimensionCode;
  }

  public DimensionForListProductQuotaDimensionsOutput dimensionName(String dimensionName) {
    this.dimensionName = dimensionName;
    return this;
  }

   /**
   * Get dimensionName
   * @return dimensionName
  **/
  @Schema(description = "")
  public String getDimensionName() {
    return dimensionName;
  }

  public void setDimensionName(String dimensionName) {
    this.dimensionName = dimensionName;
  }

  public DimensionForListProductQuotaDimensionsOutput dimensionValues(List<DimensionValueForListProductQuotaDimensionsOutput> dimensionValues) {
    this.dimensionValues = dimensionValues;
    return this;
  }

  public DimensionForListProductQuotaDimensionsOutput addDimensionValuesItem(DimensionValueForListProductQuotaDimensionsOutput dimensionValuesItem) {
    if (this.dimensionValues == null) {
      this.dimensionValues = new ArrayList<DimensionValueForListProductQuotaDimensionsOutput>();
    }
    this.dimensionValues.add(dimensionValuesItem);
    return this;
  }

   /**
   * Get dimensionValues
   * @return dimensionValues
  **/
  @Valid
  @Schema(description = "")
  public List<DimensionValueForListProductQuotaDimensionsOutput> getDimensionValues() {
    return dimensionValues;
  }

  public void setDimensionValues(List<DimensionValueForListProductQuotaDimensionsOutput> dimensionValues) {
    this.dimensionValues = dimensionValues;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DimensionForListProductQuotaDimensionsOutput dimensionForListProductQuotaDimensionsOutput = (DimensionForListProductQuotaDimensionsOutput) o;
    return Objects.equals(this.dimensionCode, dimensionForListProductQuotaDimensionsOutput.dimensionCode) &&
        Objects.equals(this.dimensionName, dimensionForListProductQuotaDimensionsOutput.dimensionName) &&
        Objects.equals(this.dimensionValues, dimensionForListProductQuotaDimensionsOutput.dimensionValues);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dimensionCode, dimensionName, dimensionValues);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DimensionForListProductQuotaDimensionsOutput {\n");
    
    sb.append("    dimensionCode: ").append(toIndentedString(dimensionCode)).append("\n");
    sb.append("    dimensionName: ").append(toIndentedString(dimensionName)).append("\n");
    sb.append("    dimensionValues: ").append(toIndentedString(dimensionValues)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
