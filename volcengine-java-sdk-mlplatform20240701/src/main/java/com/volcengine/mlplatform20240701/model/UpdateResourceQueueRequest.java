/*
 * ml_platform20240701
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.mlplatform20240701.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.mlplatform20240701.model.ComputeResourceForUpdateResourceQueueInput;
import com.volcengine.mlplatform20240701.model.QuotaForUpdateResourceQueueInput;
import com.volcengine.mlplatform20240701.model.RulesForUpdateResourceQueueInput;
import com.volcengine.mlplatform20240701.model.VolumeResourceForUpdateResourceQueueInput;
import com.volcengine.mlplatform20240701.model.WorkloadInfoForUpdateResourceQueueInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * UpdateResourceQueueRequest
 */



public class UpdateResourceQueueRequest {
  @SerializedName("ComputeResources")
  private List<ComputeResourceForUpdateResourceQueueInput> computeResources = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("DryRun")
  private Boolean dryRun = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Quota")
  private QuotaForUpdateResourceQueueInput quota = null;

  @SerializedName("Rules")
  private RulesForUpdateResourceQueueInput rules = null;

  @SerializedName("Shareable")
  private Boolean shareable = null;

  @SerializedName("VolumeResources")
  private List<VolumeResourceForUpdateResourceQueueInput> volumeResources = null;

  @SerializedName("WorkloadInfos")
  private List<WorkloadInfoForUpdateResourceQueueInput> workloadInfos = null;

  public UpdateResourceQueueRequest computeResources(List<ComputeResourceForUpdateResourceQueueInput> computeResources) {
    this.computeResources = computeResources;
    return this;
  }

  public UpdateResourceQueueRequest addComputeResourcesItem(ComputeResourceForUpdateResourceQueueInput computeResourcesItem) {
    if (this.computeResources == null) {
      this.computeResources = new ArrayList<ComputeResourceForUpdateResourceQueueInput>();
    }
    this.computeResources.add(computeResourcesItem);
    return this;
  }

   /**
   * Get computeResources
   * @return computeResources
  **/
  @Valid
  @Schema(description = "")
  public List<ComputeResourceForUpdateResourceQueueInput> getComputeResources() {
    return computeResources;
  }

  public void setComputeResources(List<ComputeResourceForUpdateResourceQueueInput> computeResources) {
    this.computeResources = computeResources;
  }

  public UpdateResourceQueueRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public UpdateResourceQueueRequest dryRun(Boolean dryRun) {
    this.dryRun = dryRun;
    return this;
  }

   /**
   * Get dryRun
   * @return dryRun
  **/
  @Schema(description = "")
  public Boolean isDryRun() {
    return dryRun;
  }

  public void setDryRun(Boolean dryRun) {
    this.dryRun = dryRun;
  }

  public UpdateResourceQueueRequest id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public UpdateResourceQueueRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public UpdateResourceQueueRequest quota(QuotaForUpdateResourceQueueInput quota) {
    this.quota = quota;
    return this;
  }

   /**
   * Get quota
   * @return quota
  **/
  @Valid
  @Schema(description = "")
  public QuotaForUpdateResourceQueueInput getQuota() {
    return quota;
  }

  public void setQuota(QuotaForUpdateResourceQueueInput quota) {
    this.quota = quota;
  }

  public UpdateResourceQueueRequest rules(RulesForUpdateResourceQueueInput rules) {
    this.rules = rules;
    return this;
  }

   /**
   * Get rules
   * @return rules
  **/
  @Valid
  @Schema(description = "")
  public RulesForUpdateResourceQueueInput getRules() {
    return rules;
  }

  public void setRules(RulesForUpdateResourceQueueInput rules) {
    this.rules = rules;
  }

  public UpdateResourceQueueRequest shareable(Boolean shareable) {
    this.shareable = shareable;
    return this;
  }

   /**
   * Get shareable
   * @return shareable
  **/
  @Schema(description = "")
  public Boolean isShareable() {
    return shareable;
  }

  public void setShareable(Boolean shareable) {
    this.shareable = shareable;
  }

  public UpdateResourceQueueRequest volumeResources(List<VolumeResourceForUpdateResourceQueueInput> volumeResources) {
    this.volumeResources = volumeResources;
    return this;
  }

  public UpdateResourceQueueRequest addVolumeResourcesItem(VolumeResourceForUpdateResourceQueueInput volumeResourcesItem) {
    if (this.volumeResources == null) {
      this.volumeResources = new ArrayList<VolumeResourceForUpdateResourceQueueInput>();
    }
    this.volumeResources.add(volumeResourcesItem);
    return this;
  }

   /**
   * Get volumeResources
   * @return volumeResources
  **/
  @Valid
  @Schema(description = "")
  public List<VolumeResourceForUpdateResourceQueueInput> getVolumeResources() {
    return volumeResources;
  }

  public void setVolumeResources(List<VolumeResourceForUpdateResourceQueueInput> volumeResources) {
    this.volumeResources = volumeResources;
  }

  public UpdateResourceQueueRequest workloadInfos(List<WorkloadInfoForUpdateResourceQueueInput> workloadInfos) {
    this.workloadInfos = workloadInfos;
    return this;
  }

  public UpdateResourceQueueRequest addWorkloadInfosItem(WorkloadInfoForUpdateResourceQueueInput workloadInfosItem) {
    if (this.workloadInfos == null) {
      this.workloadInfos = new ArrayList<WorkloadInfoForUpdateResourceQueueInput>();
    }
    this.workloadInfos.add(workloadInfosItem);
    return this;
  }

   /**
   * Get workloadInfos
   * @return workloadInfos
  **/
  @Valid
  @Schema(description = "")
  public List<WorkloadInfoForUpdateResourceQueueInput> getWorkloadInfos() {
    return workloadInfos;
  }

  public void setWorkloadInfos(List<WorkloadInfoForUpdateResourceQueueInput> workloadInfos) {
    this.workloadInfos = workloadInfos;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateResourceQueueRequest updateResourceQueueRequest = (UpdateResourceQueueRequest) o;
    return Objects.equals(this.computeResources, updateResourceQueueRequest.computeResources) &&
        Objects.equals(this.description, updateResourceQueueRequest.description) &&
        Objects.equals(this.dryRun, updateResourceQueueRequest.dryRun) &&
        Objects.equals(this.id, updateResourceQueueRequest.id) &&
        Objects.equals(this.name, updateResourceQueueRequest.name) &&
        Objects.equals(this.quota, updateResourceQueueRequest.quota) &&
        Objects.equals(this.rules, updateResourceQueueRequest.rules) &&
        Objects.equals(this.shareable, updateResourceQueueRequest.shareable) &&
        Objects.equals(this.volumeResources, updateResourceQueueRequest.volumeResources) &&
        Objects.equals(this.workloadInfos, updateResourceQueueRequest.workloadInfos);
  }

  @Override
  public int hashCode() {
    return Objects.hash(computeResources, description, dryRun, id, name, quota, rules, shareable, volumeResources, workloadInfos);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateResourceQueueRequest {\n");
    
    sb.append("    computeResources: ").append(toIndentedString(computeResources)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dryRun: ").append(toIndentedString(dryRun)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    quota: ").append(toIndentedString(quota)).append("\n");
    sb.append("    rules: ").append(toIndentedString(rules)).append("\n");
    sb.append("    shareable: ").append(toIndentedString(shareable)).append("\n");
    sb.append("    volumeResources: ").append(toIndentedString(volumeResources)).append("\n");
    sb.append("    workloadInfos: ").append(toIndentedString(workloadInfos)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
