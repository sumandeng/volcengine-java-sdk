/*
 * ml_platform20240701
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.mlplatform20240701.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * VepfsForUpdateResourceGroupInput
 */



public class VepfsForUpdateResourceGroupInput {
  @SerializedName("EnablePrefetch")
  private Boolean enablePrefetch = null;

  @SerializedName("FileSystemIds")
  private List<String> fileSystemIds = null;

  @SerializedName("MountServiceId")
  private String mountServiceId = null;

  public VepfsForUpdateResourceGroupInput enablePrefetch(Boolean enablePrefetch) {
    this.enablePrefetch = enablePrefetch;
    return this;
  }

   /**
   * Get enablePrefetch
   * @return enablePrefetch
  **/
  @Schema(description = "")
  public Boolean isEnablePrefetch() {
    return enablePrefetch;
  }

  public void setEnablePrefetch(Boolean enablePrefetch) {
    this.enablePrefetch = enablePrefetch;
  }

  public VepfsForUpdateResourceGroupInput fileSystemIds(List<String> fileSystemIds) {
    this.fileSystemIds = fileSystemIds;
    return this;
  }

  public VepfsForUpdateResourceGroupInput addFileSystemIdsItem(String fileSystemIdsItem) {
    if (this.fileSystemIds == null) {
      this.fileSystemIds = new ArrayList<String>();
    }
    this.fileSystemIds.add(fileSystemIdsItem);
    return this;
  }

   /**
   * Get fileSystemIds
   * @return fileSystemIds
  **/
  @Schema(description = "")
  public List<String> getFileSystemIds() {
    return fileSystemIds;
  }

  public void setFileSystemIds(List<String> fileSystemIds) {
    this.fileSystemIds = fileSystemIds;
  }

  public VepfsForUpdateResourceGroupInput mountServiceId(String mountServiceId) {
    this.mountServiceId = mountServiceId;
    return this;
  }

   /**
   * Get mountServiceId
   * @return mountServiceId
  **/
  @Schema(description = "")
  public String getMountServiceId() {
    return mountServiceId;
  }

  public void setMountServiceId(String mountServiceId) {
    this.mountServiceId = mountServiceId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VepfsForUpdateResourceGroupInput vepfsForUpdateResourceGroupInput = (VepfsForUpdateResourceGroupInput) o;
    return Objects.equals(this.enablePrefetch, vepfsForUpdateResourceGroupInput.enablePrefetch) &&
        Objects.equals(this.fileSystemIds, vepfsForUpdateResourceGroupInput.fileSystemIds) &&
        Objects.equals(this.mountServiceId, vepfsForUpdateResourceGroupInput.mountServiceId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enablePrefetch, fileSystemIds, mountServiceId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VepfsForUpdateResourceGroupInput {\n");
    
    sb.append("    enablePrefetch: ").append(toIndentedString(enablePrefetch)).append("\n");
    sb.append("    fileSystemIds: ").append(toIndentedString(fileSystemIds)).append("\n");
    sb.append("    mountServiceId: ").append(toIndentedString(mountServiceId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
