/*
 * ml_platform20240701
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.mlplatform20240701.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.mlplatform20240701.model.ExecForCreateDeploymentInput;
import com.volcengine.mlplatform20240701.model.HTTPGetForCreateDeploymentInput;
import com.volcengine.mlplatform20240701.model.TCPSocketForCreateDeploymentInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * LivenessProbeForCreateDeploymentInput
 */



public class LivenessProbeForCreateDeploymentInput {
  @SerializedName("Enabled")
  private Boolean enabled = null;

  @SerializedName("Exec")
  private ExecForCreateDeploymentInput exec = null;

  @SerializedName("FailureThreshold")
  private Integer failureThreshold = null;

  @SerializedName("HTTPGet")
  private HTTPGetForCreateDeploymentInput htTPGet = null;

  @SerializedName("InitialDelaySeconds")
  private Integer initialDelaySeconds = null;

  @SerializedName("PeriodSeconds")
  private Integer periodSeconds = null;

  @SerializedName("SuccessThreshold")
  private Integer successThreshold = null;

  @SerializedName("TCPSocket")
  private TCPSocketForCreateDeploymentInput tcPSocket = null;

  @SerializedName("TimeoutSeconds")
  private Integer timeoutSeconds = null;

  public LivenessProbeForCreateDeploymentInput enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @Schema(description = "")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public LivenessProbeForCreateDeploymentInput exec(ExecForCreateDeploymentInput exec) {
    this.exec = exec;
    return this;
  }

   /**
   * Get exec
   * @return exec
  **/
  @Valid
  @Schema(description = "")
  public ExecForCreateDeploymentInput getExec() {
    return exec;
  }

  public void setExec(ExecForCreateDeploymentInput exec) {
    this.exec = exec;
  }

  public LivenessProbeForCreateDeploymentInput failureThreshold(Integer failureThreshold) {
    this.failureThreshold = failureThreshold;
    return this;
  }

   /**
   * Get failureThreshold
   * @return failureThreshold
  **/
  @Schema(description = "")
  public Integer getFailureThreshold() {
    return failureThreshold;
  }

  public void setFailureThreshold(Integer failureThreshold) {
    this.failureThreshold = failureThreshold;
  }

  public LivenessProbeForCreateDeploymentInput htTPGet(HTTPGetForCreateDeploymentInput htTPGet) {
    this.htTPGet = htTPGet;
    return this;
  }

   /**
   * Get htTPGet
   * @return htTPGet
  **/
  @Valid
  @Schema(description = "")
  public HTTPGetForCreateDeploymentInput getHtTPGet() {
    return htTPGet;
  }

  public void setHtTPGet(HTTPGetForCreateDeploymentInput htTPGet) {
    this.htTPGet = htTPGet;
  }

  public LivenessProbeForCreateDeploymentInput initialDelaySeconds(Integer initialDelaySeconds) {
    this.initialDelaySeconds = initialDelaySeconds;
    return this;
  }

   /**
   * Get initialDelaySeconds
   * @return initialDelaySeconds
  **/
  @Schema(description = "")
  public Integer getInitialDelaySeconds() {
    return initialDelaySeconds;
  }

  public void setInitialDelaySeconds(Integer initialDelaySeconds) {
    this.initialDelaySeconds = initialDelaySeconds;
  }

  public LivenessProbeForCreateDeploymentInput periodSeconds(Integer periodSeconds) {
    this.periodSeconds = periodSeconds;
    return this;
  }

   /**
   * Get periodSeconds
   * @return periodSeconds
  **/
  @Schema(description = "")
  public Integer getPeriodSeconds() {
    return periodSeconds;
  }

  public void setPeriodSeconds(Integer periodSeconds) {
    this.periodSeconds = periodSeconds;
  }

  public LivenessProbeForCreateDeploymentInput successThreshold(Integer successThreshold) {
    this.successThreshold = successThreshold;
    return this;
  }

   /**
   * Get successThreshold
   * @return successThreshold
  **/
  @Schema(description = "")
  public Integer getSuccessThreshold() {
    return successThreshold;
  }

  public void setSuccessThreshold(Integer successThreshold) {
    this.successThreshold = successThreshold;
  }

  public LivenessProbeForCreateDeploymentInput tcPSocket(TCPSocketForCreateDeploymentInput tcPSocket) {
    this.tcPSocket = tcPSocket;
    return this;
  }

   /**
   * Get tcPSocket
   * @return tcPSocket
  **/
  @Valid
  @Schema(description = "")
  public TCPSocketForCreateDeploymentInput getTcPSocket() {
    return tcPSocket;
  }

  public void setTcPSocket(TCPSocketForCreateDeploymentInput tcPSocket) {
    this.tcPSocket = tcPSocket;
  }

  public LivenessProbeForCreateDeploymentInput timeoutSeconds(Integer timeoutSeconds) {
    this.timeoutSeconds = timeoutSeconds;
    return this;
  }

   /**
   * Get timeoutSeconds
   * @return timeoutSeconds
  **/
  @Schema(description = "")
  public Integer getTimeoutSeconds() {
    return timeoutSeconds;
  }

  public void setTimeoutSeconds(Integer timeoutSeconds) {
    this.timeoutSeconds = timeoutSeconds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LivenessProbeForCreateDeploymentInput livenessProbeForCreateDeploymentInput = (LivenessProbeForCreateDeploymentInput) o;
    return Objects.equals(this.enabled, livenessProbeForCreateDeploymentInput.enabled) &&
        Objects.equals(this.exec, livenessProbeForCreateDeploymentInput.exec) &&
        Objects.equals(this.failureThreshold, livenessProbeForCreateDeploymentInput.failureThreshold) &&
        Objects.equals(this.htTPGet, livenessProbeForCreateDeploymentInput.htTPGet) &&
        Objects.equals(this.initialDelaySeconds, livenessProbeForCreateDeploymentInput.initialDelaySeconds) &&
        Objects.equals(this.periodSeconds, livenessProbeForCreateDeploymentInput.periodSeconds) &&
        Objects.equals(this.successThreshold, livenessProbeForCreateDeploymentInput.successThreshold) &&
        Objects.equals(this.tcPSocket, livenessProbeForCreateDeploymentInput.tcPSocket) &&
        Objects.equals(this.timeoutSeconds, livenessProbeForCreateDeploymentInput.timeoutSeconds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enabled, exec, failureThreshold, htTPGet, initialDelaySeconds, periodSeconds, successThreshold, tcPSocket, timeoutSeconds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LivenessProbeForCreateDeploymentInput {\n");
    
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    exec: ").append(toIndentedString(exec)).append("\n");
    sb.append("    failureThreshold: ").append(toIndentedString(failureThreshold)).append("\n");
    sb.append("    htTPGet: ").append(toIndentedString(htTPGet)).append("\n");
    sb.append("    initialDelaySeconds: ").append(toIndentedString(initialDelaySeconds)).append("\n");
    sb.append("    periodSeconds: ").append(toIndentedString(periodSeconds)).append("\n");
    sb.append("    successThreshold: ").append(toIndentedString(successThreshold)).append("\n");
    sb.append("    tcPSocket: ").append(toIndentedString(tcPSocket)).append("\n");
    sb.append("    timeoutSeconds: ").append(toIndentedString(timeoutSeconds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
