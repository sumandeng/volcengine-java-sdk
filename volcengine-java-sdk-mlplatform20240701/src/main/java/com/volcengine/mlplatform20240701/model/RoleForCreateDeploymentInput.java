/*
 * ml_platform20240701
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.mlplatform20240701.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.mlplatform20240701.model.CredentialForCreateDeploymentInput;
import com.volcengine.mlplatform20240701.model.EnvForCreateDeploymentInput;
import com.volcengine.mlplatform20240701.model.ImageForCreateDeploymentInput;
import com.volcengine.mlplatform20240701.model.LivenessProbeForCreateDeploymentInput;
import com.volcengine.mlplatform20240701.model.ModelForCreateDeploymentInput;
import com.volcengine.mlplatform20240701.model.NodeAffinitySpecForCreateDeploymentInput;
import com.volcengine.mlplatform20240701.model.PortForCreateDeploymentInput;
import com.volcengine.mlplatform20240701.model.ReadinessProbeForCreateDeploymentInput;
import com.volcengine.mlplatform20240701.model.ResourceForCreateDeploymentInput;
import com.volcengine.mlplatform20240701.model.RollingUpdateStrategyForCreateDeploymentInput;
import com.volcengine.mlplatform20240701.model.StartupProbeForCreateDeploymentInput;
import com.volcengine.mlplatform20240701.model.StorageForCreateDeploymentInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * RoleForCreateDeploymentInput
 */



public class RoleForCreateDeploymentInput {
  @SerializedName("Command")
  private String command = null;

  @SerializedName("Credential")
  private CredentialForCreateDeploymentInput credential = null;

  @SerializedName("Envs")
  private List<EnvForCreateDeploymentInput> envs = null;

  @SerializedName("Expose")
  private Boolean expose = null;

  @SerializedName("GracefulShutdownPeriod")
  private Integer gracefulShutdownPeriod = null;

  @SerializedName("Image")
  private ImageForCreateDeploymentInput image = null;

  @SerializedName("LivenessProbe")
  private LivenessProbeForCreateDeploymentInput livenessProbe = null;

  @SerializedName("Model")
  private ModelForCreateDeploymentInput model = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("NodeAffinitySpec")
  private NodeAffinitySpecForCreateDeploymentInput nodeAffinitySpec = null;

  @SerializedName("Ports")
  private List<PortForCreateDeploymentInput> ports = null;

  @SerializedName("ReadinessProbe")
  private ReadinessProbeForCreateDeploymentInput readinessProbe = null;

  @SerializedName("Replicas")
  private Integer replicas = null;

  @SerializedName("Resource")
  private ResourceForCreateDeploymentInput resource = null;

  @SerializedName("RollingUpdateStrategy")
  private RollingUpdateStrategyForCreateDeploymentInput rollingUpdateStrategy = null;

  @SerializedName("SecurityGroupIds")
  private List<String> securityGroupIds = null;

  @SerializedName("ShardNum")
  private Integer shardNum = null;

  @SerializedName("StartupProbe")
  private StartupProbeForCreateDeploymentInput startupProbe = null;

  @SerializedName("Storages")
  private List<StorageForCreateDeploymentInput> storages = null;

  public RoleForCreateDeploymentInput command(String command) {
    this.command = command;
    return this;
  }

   /**
   * Get command
   * @return command
  **/
  @Schema(description = "")
  public String getCommand() {
    return command;
  }

  public void setCommand(String command) {
    this.command = command;
  }

  public RoleForCreateDeploymentInput credential(CredentialForCreateDeploymentInput credential) {
    this.credential = credential;
    return this;
  }

   /**
   * Get credential
   * @return credential
  **/
  @Valid
  @Schema(description = "")
  public CredentialForCreateDeploymentInput getCredential() {
    return credential;
  }

  public void setCredential(CredentialForCreateDeploymentInput credential) {
    this.credential = credential;
  }

  public RoleForCreateDeploymentInput envs(List<EnvForCreateDeploymentInput> envs) {
    this.envs = envs;
    return this;
  }

  public RoleForCreateDeploymentInput addEnvsItem(EnvForCreateDeploymentInput envsItem) {
    if (this.envs == null) {
      this.envs = new ArrayList<EnvForCreateDeploymentInput>();
    }
    this.envs.add(envsItem);
    return this;
  }

   /**
   * Get envs
   * @return envs
  **/
  @Valid
  @Schema(description = "")
  public List<EnvForCreateDeploymentInput> getEnvs() {
    return envs;
  }

  public void setEnvs(List<EnvForCreateDeploymentInput> envs) {
    this.envs = envs;
  }

  public RoleForCreateDeploymentInput expose(Boolean expose) {
    this.expose = expose;
    return this;
  }

   /**
   * Get expose
   * @return expose
  **/
  @Schema(description = "")
  public Boolean isExpose() {
    return expose;
  }

  public void setExpose(Boolean expose) {
    this.expose = expose;
  }

  public RoleForCreateDeploymentInput gracefulShutdownPeriod(Integer gracefulShutdownPeriod) {
    this.gracefulShutdownPeriod = gracefulShutdownPeriod;
    return this;
  }

   /**
   * Get gracefulShutdownPeriod
   * @return gracefulShutdownPeriod
  **/
  @Schema(description = "")
  public Integer getGracefulShutdownPeriod() {
    return gracefulShutdownPeriod;
  }

  public void setGracefulShutdownPeriod(Integer gracefulShutdownPeriod) {
    this.gracefulShutdownPeriod = gracefulShutdownPeriod;
  }

  public RoleForCreateDeploymentInput image(ImageForCreateDeploymentInput image) {
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @Valid
  @Schema(description = "")
  public ImageForCreateDeploymentInput getImage() {
    return image;
  }

  public void setImage(ImageForCreateDeploymentInput image) {
    this.image = image;
  }

  public RoleForCreateDeploymentInput livenessProbe(LivenessProbeForCreateDeploymentInput livenessProbe) {
    this.livenessProbe = livenessProbe;
    return this;
  }

   /**
   * Get livenessProbe
   * @return livenessProbe
  **/
  @Valid
  @Schema(description = "")
  public LivenessProbeForCreateDeploymentInput getLivenessProbe() {
    return livenessProbe;
  }

  public void setLivenessProbe(LivenessProbeForCreateDeploymentInput livenessProbe) {
    this.livenessProbe = livenessProbe;
  }

  public RoleForCreateDeploymentInput model(ModelForCreateDeploymentInput model) {
    this.model = model;
    return this;
  }

   /**
   * Get model
   * @return model
  **/
  @Valid
  @Schema(description = "")
  public ModelForCreateDeploymentInput getModel() {
    return model;
  }

  public void setModel(ModelForCreateDeploymentInput model) {
    this.model = model;
  }

  public RoleForCreateDeploymentInput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public RoleForCreateDeploymentInput nodeAffinitySpec(NodeAffinitySpecForCreateDeploymentInput nodeAffinitySpec) {
    this.nodeAffinitySpec = nodeAffinitySpec;
    return this;
  }

   /**
   * Get nodeAffinitySpec
   * @return nodeAffinitySpec
  **/
  @Valid
  @Schema(description = "")
  public NodeAffinitySpecForCreateDeploymentInput getNodeAffinitySpec() {
    return nodeAffinitySpec;
  }

  public void setNodeAffinitySpec(NodeAffinitySpecForCreateDeploymentInput nodeAffinitySpec) {
    this.nodeAffinitySpec = nodeAffinitySpec;
  }

  public RoleForCreateDeploymentInput ports(List<PortForCreateDeploymentInput> ports) {
    this.ports = ports;
    return this;
  }

  public RoleForCreateDeploymentInput addPortsItem(PortForCreateDeploymentInput portsItem) {
    if (this.ports == null) {
      this.ports = new ArrayList<PortForCreateDeploymentInput>();
    }
    this.ports.add(portsItem);
    return this;
  }

   /**
   * Get ports
   * @return ports
  **/
  @Valid
  @Schema(description = "")
  public List<PortForCreateDeploymentInput> getPorts() {
    return ports;
  }

  public void setPorts(List<PortForCreateDeploymentInput> ports) {
    this.ports = ports;
  }

  public RoleForCreateDeploymentInput readinessProbe(ReadinessProbeForCreateDeploymentInput readinessProbe) {
    this.readinessProbe = readinessProbe;
    return this;
  }

   /**
   * Get readinessProbe
   * @return readinessProbe
  **/
  @Valid
  @Schema(description = "")
  public ReadinessProbeForCreateDeploymentInput getReadinessProbe() {
    return readinessProbe;
  }

  public void setReadinessProbe(ReadinessProbeForCreateDeploymentInput readinessProbe) {
    this.readinessProbe = readinessProbe;
  }

  public RoleForCreateDeploymentInput replicas(Integer replicas) {
    this.replicas = replicas;
    return this;
  }

   /**
   * Get replicas
   * @return replicas
  **/
  @Schema(description = "")
  public Integer getReplicas() {
    return replicas;
  }

  public void setReplicas(Integer replicas) {
    this.replicas = replicas;
  }

  public RoleForCreateDeploymentInput resource(ResourceForCreateDeploymentInput resource) {
    this.resource = resource;
    return this;
  }

   /**
   * Get resource
   * @return resource
  **/
  @Valid
  @Schema(description = "")
  public ResourceForCreateDeploymentInput getResource() {
    return resource;
  }

  public void setResource(ResourceForCreateDeploymentInput resource) {
    this.resource = resource;
  }

  public RoleForCreateDeploymentInput rollingUpdateStrategy(RollingUpdateStrategyForCreateDeploymentInput rollingUpdateStrategy) {
    this.rollingUpdateStrategy = rollingUpdateStrategy;
    return this;
  }

   /**
   * Get rollingUpdateStrategy
   * @return rollingUpdateStrategy
  **/
  @Valid
  @Schema(description = "")
  public RollingUpdateStrategyForCreateDeploymentInput getRollingUpdateStrategy() {
    return rollingUpdateStrategy;
  }

  public void setRollingUpdateStrategy(RollingUpdateStrategyForCreateDeploymentInput rollingUpdateStrategy) {
    this.rollingUpdateStrategy = rollingUpdateStrategy;
  }

  public RoleForCreateDeploymentInput securityGroupIds(List<String> securityGroupIds) {
    this.securityGroupIds = securityGroupIds;
    return this;
  }

  public RoleForCreateDeploymentInput addSecurityGroupIdsItem(String securityGroupIdsItem) {
    if (this.securityGroupIds == null) {
      this.securityGroupIds = new ArrayList<String>();
    }
    this.securityGroupIds.add(securityGroupIdsItem);
    return this;
  }

   /**
   * Get securityGroupIds
   * @return securityGroupIds
  **/
  @Schema(description = "")
  public List<String> getSecurityGroupIds() {
    return securityGroupIds;
  }

  public void setSecurityGroupIds(List<String> securityGroupIds) {
    this.securityGroupIds = securityGroupIds;
  }

  public RoleForCreateDeploymentInput shardNum(Integer shardNum) {
    this.shardNum = shardNum;
    return this;
  }

   /**
   * Get shardNum
   * @return shardNum
  **/
  @Schema(description = "")
  public Integer getShardNum() {
    return shardNum;
  }

  public void setShardNum(Integer shardNum) {
    this.shardNum = shardNum;
  }

  public RoleForCreateDeploymentInput startupProbe(StartupProbeForCreateDeploymentInput startupProbe) {
    this.startupProbe = startupProbe;
    return this;
  }

   /**
   * Get startupProbe
   * @return startupProbe
  **/
  @Valid
  @Schema(description = "")
  public StartupProbeForCreateDeploymentInput getStartupProbe() {
    return startupProbe;
  }

  public void setStartupProbe(StartupProbeForCreateDeploymentInput startupProbe) {
    this.startupProbe = startupProbe;
  }

  public RoleForCreateDeploymentInput storages(List<StorageForCreateDeploymentInput> storages) {
    this.storages = storages;
    return this;
  }

  public RoleForCreateDeploymentInput addStoragesItem(StorageForCreateDeploymentInput storagesItem) {
    if (this.storages == null) {
      this.storages = new ArrayList<StorageForCreateDeploymentInput>();
    }
    this.storages.add(storagesItem);
    return this;
  }

   /**
   * Get storages
   * @return storages
  **/
  @Valid
  @Schema(description = "")
  public List<StorageForCreateDeploymentInput> getStorages() {
    return storages;
  }

  public void setStorages(List<StorageForCreateDeploymentInput> storages) {
    this.storages = storages;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RoleForCreateDeploymentInput roleForCreateDeploymentInput = (RoleForCreateDeploymentInput) o;
    return Objects.equals(this.command, roleForCreateDeploymentInput.command) &&
        Objects.equals(this.credential, roleForCreateDeploymentInput.credential) &&
        Objects.equals(this.envs, roleForCreateDeploymentInput.envs) &&
        Objects.equals(this.expose, roleForCreateDeploymentInput.expose) &&
        Objects.equals(this.gracefulShutdownPeriod, roleForCreateDeploymentInput.gracefulShutdownPeriod) &&
        Objects.equals(this.image, roleForCreateDeploymentInput.image) &&
        Objects.equals(this.livenessProbe, roleForCreateDeploymentInput.livenessProbe) &&
        Objects.equals(this.model, roleForCreateDeploymentInput.model) &&
        Objects.equals(this.name, roleForCreateDeploymentInput.name) &&
        Objects.equals(this.nodeAffinitySpec, roleForCreateDeploymentInput.nodeAffinitySpec) &&
        Objects.equals(this.ports, roleForCreateDeploymentInput.ports) &&
        Objects.equals(this.readinessProbe, roleForCreateDeploymentInput.readinessProbe) &&
        Objects.equals(this.replicas, roleForCreateDeploymentInput.replicas) &&
        Objects.equals(this.resource, roleForCreateDeploymentInput.resource) &&
        Objects.equals(this.rollingUpdateStrategy, roleForCreateDeploymentInput.rollingUpdateStrategy) &&
        Objects.equals(this.securityGroupIds, roleForCreateDeploymentInput.securityGroupIds) &&
        Objects.equals(this.shardNum, roleForCreateDeploymentInput.shardNum) &&
        Objects.equals(this.startupProbe, roleForCreateDeploymentInput.startupProbe) &&
        Objects.equals(this.storages, roleForCreateDeploymentInput.storages);
  }

  @Override
  public int hashCode() {
    return Objects.hash(command, credential, envs, expose, gracefulShutdownPeriod, image, livenessProbe, model, name, nodeAffinitySpec, ports, readinessProbe, replicas, resource, rollingUpdateStrategy, securityGroupIds, shardNum, startupProbe, storages);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RoleForCreateDeploymentInput {\n");
    
    sb.append("    command: ").append(toIndentedString(command)).append("\n");
    sb.append("    credential: ").append(toIndentedString(credential)).append("\n");
    sb.append("    envs: ").append(toIndentedString(envs)).append("\n");
    sb.append("    expose: ").append(toIndentedString(expose)).append("\n");
    sb.append("    gracefulShutdownPeriod: ").append(toIndentedString(gracefulShutdownPeriod)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    livenessProbe: ").append(toIndentedString(livenessProbe)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nodeAffinitySpec: ").append(toIndentedString(nodeAffinitySpec)).append("\n");
    sb.append("    ports: ").append(toIndentedString(ports)).append("\n");
    sb.append("    readinessProbe: ").append(toIndentedString(readinessProbe)).append("\n");
    sb.append("    replicas: ").append(toIndentedString(replicas)).append("\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    rollingUpdateStrategy: ").append(toIndentedString(rollingUpdateStrategy)).append("\n");
    sb.append("    securityGroupIds: ").append(toIndentedString(securityGroupIds)).append("\n");
    sb.append("    shardNum: ").append(toIndentedString(shardNum)).append("\n");
    sb.append("    startupProbe: ").append(toIndentedString(startupProbe)).append("\n");
    sb.append("    storages: ").append(toIndentedString(storages)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
