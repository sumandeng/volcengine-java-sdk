/*
 * ml_platform20240701
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.mlplatform20240701.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * StopJobRequest
 */



public class StopJobRequest {
  /**
   * Gets or Sets diagnoseNames
   */
  @JsonAdapter(DiagnoseNamesEnum.Adapter.class)
  public enum DiagnoseNamesEnum {
    @SerializedName("EnvironmentalDiagnosis")
    ENVIRONMENTALDIAGNOSIS("EnvironmentalDiagnosis"),
    @SerializedName("PythonDetection")
    PYTHONDETECTION("PythonDetection"),
    @SerializedName("LogDetection")
    LOGDETECTION("LogDetection");

    private String value;

    DiagnoseNamesEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static DiagnoseNamesEnum fromValue(String input) {
      for (DiagnoseNamesEnum b : DiagnoseNamesEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<DiagnoseNamesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DiagnoseNamesEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public DiagnoseNamesEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return DiagnoseNamesEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("DiagnoseNames")
  private List<DiagnoseNamesEnum> diagnoseNames = null;

  @SerializedName("DryRun")
  private Boolean dryRun = null;

  @SerializedName("Id")
  private String id = null;

  public StopJobRequest diagnoseNames(List<DiagnoseNamesEnum> diagnoseNames) {
    this.diagnoseNames = diagnoseNames;
    return this;
  }

  public StopJobRequest addDiagnoseNamesItem(DiagnoseNamesEnum diagnoseNamesItem) {
    if (this.diagnoseNames == null) {
      this.diagnoseNames = new ArrayList<DiagnoseNamesEnum>();
    }
    this.diagnoseNames.add(diagnoseNamesItem);
    return this;
  }

   /**
   * Get diagnoseNames
   * @return diagnoseNames
  **/
  @Schema(description = "")
  public List<DiagnoseNamesEnum> getDiagnoseNames() {
    return diagnoseNames;
  }

  public void setDiagnoseNames(List<DiagnoseNamesEnum> diagnoseNames) {
    this.diagnoseNames = diagnoseNames;
  }

  public StopJobRequest dryRun(Boolean dryRun) {
    this.dryRun = dryRun;
    return this;
  }

   /**
   * Get dryRun
   * @return dryRun
  **/
  @Schema(description = "")
  public Boolean isDryRun() {
    return dryRun;
  }

  public void setDryRun(Boolean dryRun) {
    this.dryRun = dryRun;
  }

  public StopJobRequest id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StopJobRequest stopJobRequest = (StopJobRequest) o;
    return Objects.equals(this.diagnoseNames, stopJobRequest.diagnoseNames) &&
        Objects.equals(this.dryRun, stopJobRequest.dryRun) &&
        Objects.equals(this.id, stopJobRequest.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(diagnoseNames, dryRun, id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StopJobRequest {\n");
    
    sb.append("    diagnoseNames: ").append(toIndentedString(diagnoseNames)).append("\n");
    sb.append("    dryRun: ").append(toIndentedString(dryRun)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
