/*
 * ml_platform20240701
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.mlplatform20240701.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.mlplatform20240701.model.ConvertConvertConvertWeightForGetServiceOutput;
import com.volcengine.mlplatform20240701.model.MirrorTrafficPolicyForGetServiceOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ConvertTrafficConfigForGetServiceOutput
 */



public class ConvertTrafficConfigForGetServiceOutput {
  @SerializedName("Enables")
  private List<String> enables = null;

  @SerializedName("MirrorTrafficPolicy")
  private MirrorTrafficPolicyForGetServiceOutput mirrorTrafficPolicy = null;

  /**
   * Gets or Sets mode
   */
  @JsonAdapter(ModeEnum.Adapter.class)
  public enum ModeEnum {
    @SerializedName("Default")
    DEFAULT("Default"),
    @SerializedName("Weight")
    WEIGHT("Weight");

    private String value;

    ModeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ModeEnum fromValue(String input) {
      for (ModeEnum b : ModeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ModeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ModeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ModeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("Mode")
  private ModeEnum mode = null;

  @SerializedName("Weights")
  private List<ConvertConvertConvertWeightForGetServiceOutput> weights = null;

  public ConvertTrafficConfigForGetServiceOutput enables(List<String> enables) {
    this.enables = enables;
    return this;
  }

  public ConvertTrafficConfigForGetServiceOutput addEnablesItem(String enablesItem) {
    if (this.enables == null) {
      this.enables = new ArrayList<String>();
    }
    this.enables.add(enablesItem);
    return this;
  }

   /**
   * Get enables
   * @return enables
  **/
  @Schema(description = "")
  public List<String> getEnables() {
    return enables;
  }

  public void setEnables(List<String> enables) {
    this.enables = enables;
  }

  public ConvertTrafficConfigForGetServiceOutput mirrorTrafficPolicy(MirrorTrafficPolicyForGetServiceOutput mirrorTrafficPolicy) {
    this.mirrorTrafficPolicy = mirrorTrafficPolicy;
    return this;
  }

   /**
   * Get mirrorTrafficPolicy
   * @return mirrorTrafficPolicy
  **/
  @Valid
  @Schema(description = "")
  public MirrorTrafficPolicyForGetServiceOutput getMirrorTrafficPolicy() {
    return mirrorTrafficPolicy;
  }

  public void setMirrorTrafficPolicy(MirrorTrafficPolicyForGetServiceOutput mirrorTrafficPolicy) {
    this.mirrorTrafficPolicy = mirrorTrafficPolicy;
  }

  public ConvertTrafficConfigForGetServiceOutput mode(ModeEnum mode) {
    this.mode = mode;
    return this;
  }

   /**
   * Get mode
   * @return mode
  **/
  @Schema(description = "")
  public ModeEnum getMode() {
    return mode;
  }

  public void setMode(ModeEnum mode) {
    this.mode = mode;
  }

  public ConvertTrafficConfigForGetServiceOutput weights(List<ConvertConvertConvertWeightForGetServiceOutput> weights) {
    this.weights = weights;
    return this;
  }

  public ConvertTrafficConfigForGetServiceOutput addWeightsItem(ConvertConvertConvertWeightForGetServiceOutput weightsItem) {
    if (this.weights == null) {
      this.weights = new ArrayList<ConvertConvertConvertWeightForGetServiceOutput>();
    }
    this.weights.add(weightsItem);
    return this;
  }

   /**
   * Get weights
   * @return weights
  **/
  @Valid
  @Schema(description = "")
  public List<ConvertConvertConvertWeightForGetServiceOutput> getWeights() {
    return weights;
  }

  public void setWeights(List<ConvertConvertConvertWeightForGetServiceOutput> weights) {
    this.weights = weights;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConvertTrafficConfigForGetServiceOutput convertTrafficConfigForGetServiceOutput = (ConvertTrafficConfigForGetServiceOutput) o;
    return Objects.equals(this.enables, convertTrafficConfigForGetServiceOutput.enables) &&
        Objects.equals(this.mirrorTrafficPolicy, convertTrafficConfigForGetServiceOutput.mirrorTrafficPolicy) &&
        Objects.equals(this.mode, convertTrafficConfigForGetServiceOutput.mode) &&
        Objects.equals(this.weights, convertTrafficConfigForGetServiceOutput.weights);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enables, mirrorTrafficPolicy, mode, weights);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConvertTrafficConfigForGetServiceOutput {\n");
    
    sb.append("    enables: ").append(toIndentedString(enables)).append("\n");
    sb.append("    mirrorTrafficPolicy: ").append(toIndentedString(mirrorTrafficPolicy)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    weights: ").append(toIndentedString(weights)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
