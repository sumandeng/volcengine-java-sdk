/*
 * ml_platform20240701
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.mlplatform20240701.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.mlplatform20240701.model.CredentialForUpdateDeploymentInput;
import com.volcengine.mlplatform20240701.model.EnvForUpdateDeploymentInput;
import com.volcengine.mlplatform20240701.model.ImageForUpdateDeploymentInput;
import com.volcengine.mlplatform20240701.model.LivenessProbeForUpdateDeploymentInput;
import com.volcengine.mlplatform20240701.model.ModelForUpdateDeploymentInput;
import com.volcengine.mlplatform20240701.model.NodeAffinitySpecForUpdateDeploymentInput;
import com.volcengine.mlplatform20240701.model.PortForUpdateDeploymentInput;
import com.volcengine.mlplatform20240701.model.ReadinessProbeForUpdateDeploymentInput;
import com.volcengine.mlplatform20240701.model.ResourceForUpdateDeploymentInput;
import com.volcengine.mlplatform20240701.model.RollingUpdateStrategyForUpdateDeploymentInput;
import com.volcengine.mlplatform20240701.model.StartupProbeForUpdateDeploymentInput;
import com.volcengine.mlplatform20240701.model.StorageForUpdateDeploymentInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * RoleForUpdateDeploymentInput
 */



public class RoleForUpdateDeploymentInput {
  @SerializedName("Command")
  private String command = null;

  @SerializedName("Credential")
  private CredentialForUpdateDeploymentInput credential = null;

  @SerializedName("Envs")
  private List<EnvForUpdateDeploymentInput> envs = null;

  @SerializedName("Expose")
  private Boolean expose = null;

  @SerializedName("GracefulShutdownPeriod")
  private Integer gracefulShutdownPeriod = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("Image")
  private ImageForUpdateDeploymentInput image = null;

  @SerializedName("LivenessProbe")
  private LivenessProbeForUpdateDeploymentInput livenessProbe = null;

  @SerializedName("Model")
  private ModelForUpdateDeploymentInput model = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("NodeAffinitySpec")
  private NodeAffinitySpecForUpdateDeploymentInput nodeAffinitySpec = null;

  @SerializedName("Ports")
  private List<PortForUpdateDeploymentInput> ports = null;

  @SerializedName("ReadinessProbe")
  private ReadinessProbeForUpdateDeploymentInput readinessProbe = null;

  @SerializedName("Replicas")
  private Integer replicas = null;

  @SerializedName("Resource")
  private ResourceForUpdateDeploymentInput resource = null;

  @SerializedName("RollingUpdateStrategy")
  private RollingUpdateStrategyForUpdateDeploymentInput rollingUpdateStrategy = null;

  @SerializedName("SecurityGroupIds")
  private List<String> securityGroupIds = null;

  @SerializedName("ShardNum")
  private Integer shardNum = null;

  @SerializedName("StartupProbe")
  private StartupProbeForUpdateDeploymentInput startupProbe = null;

  @SerializedName("Storages")
  private List<StorageForUpdateDeploymentInput> storages = null;

  public RoleForUpdateDeploymentInput command(String command) {
    this.command = command;
    return this;
  }

   /**
   * Get command
   * @return command
  **/
  @Schema(description = "")
  public String getCommand() {
    return command;
  }

  public void setCommand(String command) {
    this.command = command;
  }

  public RoleForUpdateDeploymentInput credential(CredentialForUpdateDeploymentInput credential) {
    this.credential = credential;
    return this;
  }

   /**
   * Get credential
   * @return credential
  **/
  @Valid
  @Schema(description = "")
  public CredentialForUpdateDeploymentInput getCredential() {
    return credential;
  }

  public void setCredential(CredentialForUpdateDeploymentInput credential) {
    this.credential = credential;
  }

  public RoleForUpdateDeploymentInput envs(List<EnvForUpdateDeploymentInput> envs) {
    this.envs = envs;
    return this;
  }

  public RoleForUpdateDeploymentInput addEnvsItem(EnvForUpdateDeploymentInput envsItem) {
    if (this.envs == null) {
      this.envs = new ArrayList<EnvForUpdateDeploymentInput>();
    }
    this.envs.add(envsItem);
    return this;
  }

   /**
   * Get envs
   * @return envs
  **/
  @Valid
  @Schema(description = "")
  public List<EnvForUpdateDeploymentInput> getEnvs() {
    return envs;
  }

  public void setEnvs(List<EnvForUpdateDeploymentInput> envs) {
    this.envs = envs;
  }

  public RoleForUpdateDeploymentInput expose(Boolean expose) {
    this.expose = expose;
    return this;
  }

   /**
   * Get expose
   * @return expose
  **/
  @Schema(description = "")
  public Boolean isExpose() {
    return expose;
  }

  public void setExpose(Boolean expose) {
    this.expose = expose;
  }

  public RoleForUpdateDeploymentInput gracefulShutdownPeriod(Integer gracefulShutdownPeriod) {
    this.gracefulShutdownPeriod = gracefulShutdownPeriod;
    return this;
  }

   /**
   * Get gracefulShutdownPeriod
   * @return gracefulShutdownPeriod
  **/
  @Schema(description = "")
  public Integer getGracefulShutdownPeriod() {
    return gracefulShutdownPeriod;
  }

  public void setGracefulShutdownPeriod(Integer gracefulShutdownPeriod) {
    this.gracefulShutdownPeriod = gracefulShutdownPeriod;
  }

  public RoleForUpdateDeploymentInput id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public RoleForUpdateDeploymentInput image(ImageForUpdateDeploymentInput image) {
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @Valid
  @Schema(description = "")
  public ImageForUpdateDeploymentInput getImage() {
    return image;
  }

  public void setImage(ImageForUpdateDeploymentInput image) {
    this.image = image;
  }

  public RoleForUpdateDeploymentInput livenessProbe(LivenessProbeForUpdateDeploymentInput livenessProbe) {
    this.livenessProbe = livenessProbe;
    return this;
  }

   /**
   * Get livenessProbe
   * @return livenessProbe
  **/
  @Valid
  @Schema(description = "")
  public LivenessProbeForUpdateDeploymentInput getLivenessProbe() {
    return livenessProbe;
  }

  public void setLivenessProbe(LivenessProbeForUpdateDeploymentInput livenessProbe) {
    this.livenessProbe = livenessProbe;
  }

  public RoleForUpdateDeploymentInput model(ModelForUpdateDeploymentInput model) {
    this.model = model;
    return this;
  }

   /**
   * Get model
   * @return model
  **/
  @Valid
  @Schema(description = "")
  public ModelForUpdateDeploymentInput getModel() {
    return model;
  }

  public void setModel(ModelForUpdateDeploymentInput model) {
    this.model = model;
  }

  public RoleForUpdateDeploymentInput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public RoleForUpdateDeploymentInput nodeAffinitySpec(NodeAffinitySpecForUpdateDeploymentInput nodeAffinitySpec) {
    this.nodeAffinitySpec = nodeAffinitySpec;
    return this;
  }

   /**
   * Get nodeAffinitySpec
   * @return nodeAffinitySpec
  **/
  @Valid
  @Schema(description = "")
  public NodeAffinitySpecForUpdateDeploymentInput getNodeAffinitySpec() {
    return nodeAffinitySpec;
  }

  public void setNodeAffinitySpec(NodeAffinitySpecForUpdateDeploymentInput nodeAffinitySpec) {
    this.nodeAffinitySpec = nodeAffinitySpec;
  }

  public RoleForUpdateDeploymentInput ports(List<PortForUpdateDeploymentInput> ports) {
    this.ports = ports;
    return this;
  }

  public RoleForUpdateDeploymentInput addPortsItem(PortForUpdateDeploymentInput portsItem) {
    if (this.ports == null) {
      this.ports = new ArrayList<PortForUpdateDeploymentInput>();
    }
    this.ports.add(portsItem);
    return this;
  }

   /**
   * Get ports
   * @return ports
  **/
  @Valid
  @Schema(description = "")
  public List<PortForUpdateDeploymentInput> getPorts() {
    return ports;
  }

  public void setPorts(List<PortForUpdateDeploymentInput> ports) {
    this.ports = ports;
  }

  public RoleForUpdateDeploymentInput readinessProbe(ReadinessProbeForUpdateDeploymentInput readinessProbe) {
    this.readinessProbe = readinessProbe;
    return this;
  }

   /**
   * Get readinessProbe
   * @return readinessProbe
  **/
  @Valid
  @Schema(description = "")
  public ReadinessProbeForUpdateDeploymentInput getReadinessProbe() {
    return readinessProbe;
  }

  public void setReadinessProbe(ReadinessProbeForUpdateDeploymentInput readinessProbe) {
    this.readinessProbe = readinessProbe;
  }

  public RoleForUpdateDeploymentInput replicas(Integer replicas) {
    this.replicas = replicas;
    return this;
  }

   /**
   * Get replicas
   * @return replicas
  **/
  @Schema(description = "")
  public Integer getReplicas() {
    return replicas;
  }

  public void setReplicas(Integer replicas) {
    this.replicas = replicas;
  }

  public RoleForUpdateDeploymentInput resource(ResourceForUpdateDeploymentInput resource) {
    this.resource = resource;
    return this;
  }

   /**
   * Get resource
   * @return resource
  **/
  @Valid
  @Schema(description = "")
  public ResourceForUpdateDeploymentInput getResource() {
    return resource;
  }

  public void setResource(ResourceForUpdateDeploymentInput resource) {
    this.resource = resource;
  }

  public RoleForUpdateDeploymentInput rollingUpdateStrategy(RollingUpdateStrategyForUpdateDeploymentInput rollingUpdateStrategy) {
    this.rollingUpdateStrategy = rollingUpdateStrategy;
    return this;
  }

   /**
   * Get rollingUpdateStrategy
   * @return rollingUpdateStrategy
  **/
  @Valid
  @Schema(description = "")
  public RollingUpdateStrategyForUpdateDeploymentInput getRollingUpdateStrategy() {
    return rollingUpdateStrategy;
  }

  public void setRollingUpdateStrategy(RollingUpdateStrategyForUpdateDeploymentInput rollingUpdateStrategy) {
    this.rollingUpdateStrategy = rollingUpdateStrategy;
  }

  public RoleForUpdateDeploymentInput securityGroupIds(List<String> securityGroupIds) {
    this.securityGroupIds = securityGroupIds;
    return this;
  }

  public RoleForUpdateDeploymentInput addSecurityGroupIdsItem(String securityGroupIdsItem) {
    if (this.securityGroupIds == null) {
      this.securityGroupIds = new ArrayList<String>();
    }
    this.securityGroupIds.add(securityGroupIdsItem);
    return this;
  }

   /**
   * Get securityGroupIds
   * @return securityGroupIds
  **/
  @Schema(description = "")
  public List<String> getSecurityGroupIds() {
    return securityGroupIds;
  }

  public void setSecurityGroupIds(List<String> securityGroupIds) {
    this.securityGroupIds = securityGroupIds;
  }

  public RoleForUpdateDeploymentInput shardNum(Integer shardNum) {
    this.shardNum = shardNum;
    return this;
  }

   /**
   * Get shardNum
   * @return shardNum
  **/
  @Schema(description = "")
  public Integer getShardNum() {
    return shardNum;
  }

  public void setShardNum(Integer shardNum) {
    this.shardNum = shardNum;
  }

  public RoleForUpdateDeploymentInput startupProbe(StartupProbeForUpdateDeploymentInput startupProbe) {
    this.startupProbe = startupProbe;
    return this;
  }

   /**
   * Get startupProbe
   * @return startupProbe
  **/
  @Valid
  @Schema(description = "")
  public StartupProbeForUpdateDeploymentInput getStartupProbe() {
    return startupProbe;
  }

  public void setStartupProbe(StartupProbeForUpdateDeploymentInput startupProbe) {
    this.startupProbe = startupProbe;
  }

  public RoleForUpdateDeploymentInput storages(List<StorageForUpdateDeploymentInput> storages) {
    this.storages = storages;
    return this;
  }

  public RoleForUpdateDeploymentInput addStoragesItem(StorageForUpdateDeploymentInput storagesItem) {
    if (this.storages == null) {
      this.storages = new ArrayList<StorageForUpdateDeploymentInput>();
    }
    this.storages.add(storagesItem);
    return this;
  }

   /**
   * Get storages
   * @return storages
  **/
  @Valid
  @Schema(description = "")
  public List<StorageForUpdateDeploymentInput> getStorages() {
    return storages;
  }

  public void setStorages(List<StorageForUpdateDeploymentInput> storages) {
    this.storages = storages;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RoleForUpdateDeploymentInput roleForUpdateDeploymentInput = (RoleForUpdateDeploymentInput) o;
    return Objects.equals(this.command, roleForUpdateDeploymentInput.command) &&
        Objects.equals(this.credential, roleForUpdateDeploymentInput.credential) &&
        Objects.equals(this.envs, roleForUpdateDeploymentInput.envs) &&
        Objects.equals(this.expose, roleForUpdateDeploymentInput.expose) &&
        Objects.equals(this.gracefulShutdownPeriod, roleForUpdateDeploymentInput.gracefulShutdownPeriod) &&
        Objects.equals(this.id, roleForUpdateDeploymentInput.id) &&
        Objects.equals(this.image, roleForUpdateDeploymentInput.image) &&
        Objects.equals(this.livenessProbe, roleForUpdateDeploymentInput.livenessProbe) &&
        Objects.equals(this.model, roleForUpdateDeploymentInput.model) &&
        Objects.equals(this.name, roleForUpdateDeploymentInput.name) &&
        Objects.equals(this.nodeAffinitySpec, roleForUpdateDeploymentInput.nodeAffinitySpec) &&
        Objects.equals(this.ports, roleForUpdateDeploymentInput.ports) &&
        Objects.equals(this.readinessProbe, roleForUpdateDeploymentInput.readinessProbe) &&
        Objects.equals(this.replicas, roleForUpdateDeploymentInput.replicas) &&
        Objects.equals(this.resource, roleForUpdateDeploymentInput.resource) &&
        Objects.equals(this.rollingUpdateStrategy, roleForUpdateDeploymentInput.rollingUpdateStrategy) &&
        Objects.equals(this.securityGroupIds, roleForUpdateDeploymentInput.securityGroupIds) &&
        Objects.equals(this.shardNum, roleForUpdateDeploymentInput.shardNum) &&
        Objects.equals(this.startupProbe, roleForUpdateDeploymentInput.startupProbe) &&
        Objects.equals(this.storages, roleForUpdateDeploymentInput.storages);
  }

  @Override
  public int hashCode() {
    return Objects.hash(command, credential, envs, expose, gracefulShutdownPeriod, id, image, livenessProbe, model, name, nodeAffinitySpec, ports, readinessProbe, replicas, resource, rollingUpdateStrategy, securityGroupIds, shardNum, startupProbe, storages);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RoleForUpdateDeploymentInput {\n");
    
    sb.append("    command: ").append(toIndentedString(command)).append("\n");
    sb.append("    credential: ").append(toIndentedString(credential)).append("\n");
    sb.append("    envs: ").append(toIndentedString(envs)).append("\n");
    sb.append("    expose: ").append(toIndentedString(expose)).append("\n");
    sb.append("    gracefulShutdownPeriod: ").append(toIndentedString(gracefulShutdownPeriod)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    livenessProbe: ").append(toIndentedString(livenessProbe)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nodeAffinitySpec: ").append(toIndentedString(nodeAffinitySpec)).append("\n");
    sb.append("    ports: ").append(toIndentedString(ports)).append("\n");
    sb.append("    readinessProbe: ").append(toIndentedString(readinessProbe)).append("\n");
    sb.append("    replicas: ").append(toIndentedString(replicas)).append("\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    rollingUpdateStrategy: ").append(toIndentedString(rollingUpdateStrategy)).append("\n");
    sb.append("    securityGroupIds: ").append(toIndentedString(securityGroupIds)).append("\n");
    sb.append("    shardNum: ").append(toIndentedString(shardNum)).append("\n");
    sb.append("    startupProbe: ").append(toIndentedString(startupProbe)).append("\n");
    sb.append("    storages: ").append(toIndentedString(storages)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
