/*
 * ml_platform20240701
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.mlplatform20240701.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListInstanceTypesRequest
 */



public class ListInstanceTypesRequest {
  @SerializedName("NameContains")
  private String nameContains = null;

  /**
   * Gets or Sets supportStatus
   */
  @JsonAdapter(SupportStatusEnum.Adapter.class)
  public enum SupportStatusEnum {
    @SerializedName("Deprecated")
    DEPRECATED("Deprecated"),
    @SerializedName("Valid")
    VALID("Valid");

    private String value;

    SupportStatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static SupportStatusEnum fromValue(String input) {
      for (SupportStatusEnum b : SupportStatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<SupportStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SupportStatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public SupportStatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return SupportStatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("SupportStatus")
  private SupportStatusEnum supportStatus = null;

  @SerializedName("ZoneId")
  private String zoneId = null;

  public ListInstanceTypesRequest nameContains(String nameContains) {
    this.nameContains = nameContains;
    return this;
  }

   /**
   * Get nameContains
   * @return nameContains
  **/
  @Schema(description = "")
  public String getNameContains() {
    return nameContains;
  }

  public void setNameContains(String nameContains) {
    this.nameContains = nameContains;
  }

  public ListInstanceTypesRequest supportStatus(SupportStatusEnum supportStatus) {
    this.supportStatus = supportStatus;
    return this;
  }

   /**
   * Get supportStatus
   * @return supportStatus
  **/
  @Schema(description = "")
  public SupportStatusEnum getSupportStatus() {
    return supportStatus;
  }

  public void setSupportStatus(SupportStatusEnum supportStatus) {
    this.supportStatus = supportStatus;
  }

  public ListInstanceTypesRequest zoneId(String zoneId) {
    this.zoneId = zoneId;
    return this;
  }

   /**
   * Get zoneId
   * @return zoneId
  **/
  @Schema(description = "")
  public String getZoneId() {
    return zoneId;
  }

  public void setZoneId(String zoneId) {
    this.zoneId = zoneId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListInstanceTypesRequest listInstanceTypesRequest = (ListInstanceTypesRequest) o;
    return Objects.equals(this.nameContains, listInstanceTypesRequest.nameContains) &&
        Objects.equals(this.supportStatus, listInstanceTypesRequest.supportStatus) &&
        Objects.equals(this.zoneId, listInstanceTypesRequest.zoneId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nameContains, supportStatus, zoneId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListInstanceTypesRequest {\n");
    
    sb.append("    nameContains: ").append(toIndentedString(nameContains)).append("\n");
    sb.append("    supportStatus: ").append(toIndentedString(supportStatus)).append("\n");
    sb.append("    zoneId: ").append(toIndentedString(zoneId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
