/*
 * vepfs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vepfs.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeDataFlowBandwidthResponse
 */



public class DescribeDataFlowBandwidthResponse extends com.volcengine.model.AbstractResponse {
  @SerializedName("Bandwidth")
  private Integer bandwidth = null;

  @SerializedName("BandwidthMax")
  private Integer bandwidthMax = null;

  @SerializedName("BandwidthMin")
  private Integer bandwidthMin = null;

  @SerializedName("BandwidthPerNode")
  private Integer bandwidthPerNode = null;

  @SerializedName("CreateTime")
  private String createTime = null;

  @SerializedName("FileSystemId")
  private String fileSystemId = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("UpdateTime")
  private String updateTime = null;

  public DescribeDataFlowBandwidthResponse bandwidth(Integer bandwidth) {
    this.bandwidth = bandwidth;
    return this;
  }

   /**
   * Get bandwidth
   * @return bandwidth
  **/
  @Schema(description = "")
  public Integer getBandwidth() {
    return bandwidth;
  }

  public void setBandwidth(Integer bandwidth) {
    this.bandwidth = bandwidth;
  }

  public DescribeDataFlowBandwidthResponse bandwidthMax(Integer bandwidthMax) {
    this.bandwidthMax = bandwidthMax;
    return this;
  }

   /**
   * Get bandwidthMax
   * @return bandwidthMax
  **/
  @Schema(description = "")
  public Integer getBandwidthMax() {
    return bandwidthMax;
  }

  public void setBandwidthMax(Integer bandwidthMax) {
    this.bandwidthMax = bandwidthMax;
  }

  public DescribeDataFlowBandwidthResponse bandwidthMin(Integer bandwidthMin) {
    this.bandwidthMin = bandwidthMin;
    return this;
  }

   /**
   * Get bandwidthMin
   * @return bandwidthMin
  **/
  @Schema(description = "")
  public Integer getBandwidthMin() {
    return bandwidthMin;
  }

  public void setBandwidthMin(Integer bandwidthMin) {
    this.bandwidthMin = bandwidthMin;
  }

  public DescribeDataFlowBandwidthResponse bandwidthPerNode(Integer bandwidthPerNode) {
    this.bandwidthPerNode = bandwidthPerNode;
    return this;
  }

   /**
   * Get bandwidthPerNode
   * @return bandwidthPerNode
  **/
  @Schema(description = "")
  public Integer getBandwidthPerNode() {
    return bandwidthPerNode;
  }

  public void setBandwidthPerNode(Integer bandwidthPerNode) {
    this.bandwidthPerNode = bandwidthPerNode;
  }

  public DescribeDataFlowBandwidthResponse createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }

  public DescribeDataFlowBandwidthResponse fileSystemId(String fileSystemId) {
    this.fileSystemId = fileSystemId;
    return this;
  }

   /**
   * Get fileSystemId
   * @return fileSystemId
  **/
  @Schema(description = "")
  public String getFileSystemId() {
    return fileSystemId;
  }

  public void setFileSystemId(String fileSystemId) {
    this.fileSystemId = fileSystemId;
  }

  public DescribeDataFlowBandwidthResponse status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public DescribeDataFlowBandwidthResponse updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeDataFlowBandwidthResponse describeDataFlowBandwidthResponse = (DescribeDataFlowBandwidthResponse) o;
    return Objects.equals(this.bandwidth, describeDataFlowBandwidthResponse.bandwidth) &&
        Objects.equals(this.bandwidthMax, describeDataFlowBandwidthResponse.bandwidthMax) &&
        Objects.equals(this.bandwidthMin, describeDataFlowBandwidthResponse.bandwidthMin) &&
        Objects.equals(this.bandwidthPerNode, describeDataFlowBandwidthResponse.bandwidthPerNode) &&
        Objects.equals(this.createTime, describeDataFlowBandwidthResponse.createTime) &&
        Objects.equals(this.fileSystemId, describeDataFlowBandwidthResponse.fileSystemId) &&
        Objects.equals(this.status, describeDataFlowBandwidthResponse.status) &&
        Objects.equals(this.updateTime, describeDataFlowBandwidthResponse.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bandwidth, bandwidthMax, bandwidthMin, bandwidthPerNode, createTime, fileSystemId, status, updateTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeDataFlowBandwidthResponse {\n");
    
    sb.append("    bandwidth: ").append(toIndentedString(bandwidth)).append("\n");
    sb.append("    bandwidthMax: ").append(toIndentedString(bandwidthMax)).append("\n");
    sb.append("    bandwidthMin: ").append(toIndentedString(bandwidthMin)).append("\n");
    sb.append("    bandwidthPerNode: ").append(toIndentedString(bandwidthPerNode)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    fileSystemId: ").append(toIndentedString(fileSystemId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
