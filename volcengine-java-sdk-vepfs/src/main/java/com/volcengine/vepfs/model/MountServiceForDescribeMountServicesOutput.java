/*
 * vepfs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vepfs.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vepfs.model.AttachFileSystemForDescribeMountServicesOutput;
import com.volcengine.vepfs.model.NodeForDescribeMountServicesOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * MountServiceForDescribeMountServicesOutput
 */



public class MountServiceForDescribeMountServicesOutput {
  @SerializedName("AccountId")
  private String accountId = null;

  @SerializedName("AttachFileSystems")
  private List<AttachFileSystemForDescribeMountServicesOutput> attachFileSystems = null;

  @SerializedName("CreateTime")
  private String createTime = null;

  @SerializedName("MountServiceId")
  private String mountServiceId = null;

  @SerializedName("MountServiceName")
  private String mountServiceName = null;

  @SerializedName("Nodes")
  private List<NodeForDescribeMountServicesOutput> nodes = null;

  @SerializedName("Project")
  private String project = null;

  @SerializedName("RegionId")
  private String regionId = null;

  @SerializedName("SecurityGroupId")
  private String securityGroupId = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    @SerializedName("Creating")
    CREATING("Creating"),
    @SerializedName("CreateError")
    CREATEERROR("CreateError"),
    @SerializedName("Running")
    RUNNING("Running"),
    @SerializedName("Updating")
    UPDATING("Updating"),
    @SerializedName("UpdateError")
    UPDATEERROR("UpdateError"),
    @SerializedName("Deleting")
    DELETING("Deleting"),
    @SerializedName("DeleteError")
    DELETEERROR("DeleteError"),
    @SerializedName("Deleted")
    DELETED("Deleted"),
    @SerializedName("Attaching")
    ATTACHING("Attaching"),
    @SerializedName("AttachError")
    ATTACHERROR("AttachError"),
    @SerializedName("Detaching")
    DETACHING("Detaching"),
    @SerializedName("DetachError")
    DETACHERROR("DetachError"),
    @SerializedName("Stopped")
    STOPPED("Stopped"),
    @SerializedName("Error")
    ERROR("Error");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("Status")
  private StatusEnum status = null;

  @SerializedName("SubnetId")
  private String subnetId = null;

  @SerializedName("VersionNumber")
  private String versionNumber = null;

  @SerializedName("VpcId")
  private String vpcId = null;

  @SerializedName("ZoneId")
  private String zoneId = null;

  @SerializedName("ZoneName")
  private String zoneName = null;

  public MountServiceForDescribeMountServicesOutput accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @Schema(description = "")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public MountServiceForDescribeMountServicesOutput attachFileSystems(List<AttachFileSystemForDescribeMountServicesOutput> attachFileSystems) {
    this.attachFileSystems = attachFileSystems;
    return this;
  }

  public MountServiceForDescribeMountServicesOutput addAttachFileSystemsItem(AttachFileSystemForDescribeMountServicesOutput attachFileSystemsItem) {
    if (this.attachFileSystems == null) {
      this.attachFileSystems = new ArrayList<AttachFileSystemForDescribeMountServicesOutput>();
    }
    this.attachFileSystems.add(attachFileSystemsItem);
    return this;
  }

   /**
   * Get attachFileSystems
   * @return attachFileSystems
  **/
  @Valid
  @Schema(description = "")
  public List<AttachFileSystemForDescribeMountServicesOutput> getAttachFileSystems() {
    return attachFileSystems;
  }

  public void setAttachFileSystems(List<AttachFileSystemForDescribeMountServicesOutput> attachFileSystems) {
    this.attachFileSystems = attachFileSystems;
  }

  public MountServiceForDescribeMountServicesOutput createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }

  public MountServiceForDescribeMountServicesOutput mountServiceId(String mountServiceId) {
    this.mountServiceId = mountServiceId;
    return this;
  }

   /**
   * Get mountServiceId
   * @return mountServiceId
  **/
  @Schema(description = "")
  public String getMountServiceId() {
    return mountServiceId;
  }

  public void setMountServiceId(String mountServiceId) {
    this.mountServiceId = mountServiceId;
  }

  public MountServiceForDescribeMountServicesOutput mountServiceName(String mountServiceName) {
    this.mountServiceName = mountServiceName;
    return this;
  }

   /**
   * Get mountServiceName
   * @return mountServiceName
  **/
  @Schema(description = "")
  public String getMountServiceName() {
    return mountServiceName;
  }

  public void setMountServiceName(String mountServiceName) {
    this.mountServiceName = mountServiceName;
  }

  public MountServiceForDescribeMountServicesOutput nodes(List<NodeForDescribeMountServicesOutput> nodes) {
    this.nodes = nodes;
    return this;
  }

  public MountServiceForDescribeMountServicesOutput addNodesItem(NodeForDescribeMountServicesOutput nodesItem) {
    if (this.nodes == null) {
      this.nodes = new ArrayList<NodeForDescribeMountServicesOutput>();
    }
    this.nodes.add(nodesItem);
    return this;
  }

   /**
   * Get nodes
   * @return nodes
  **/
  @Valid
  @Schema(description = "")
  public List<NodeForDescribeMountServicesOutput> getNodes() {
    return nodes;
  }

  public void setNodes(List<NodeForDescribeMountServicesOutput> nodes) {
    this.nodes = nodes;
  }

  public MountServiceForDescribeMountServicesOutput project(String project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @Schema(description = "")
  public String getProject() {
    return project;
  }

  public void setProject(String project) {
    this.project = project;
  }

  public MountServiceForDescribeMountServicesOutput regionId(String regionId) {
    this.regionId = regionId;
    return this;
  }

   /**
   * Get regionId
   * @return regionId
  **/
  @Schema(description = "")
  public String getRegionId() {
    return regionId;
  }

  public void setRegionId(String regionId) {
    this.regionId = regionId;
  }

  public MountServiceForDescribeMountServicesOutput securityGroupId(String securityGroupId) {
    this.securityGroupId = securityGroupId;
    return this;
  }

   /**
   * Get securityGroupId
   * @return securityGroupId
  **/
  @Schema(description = "")
  public String getSecurityGroupId() {
    return securityGroupId;
  }

  public void setSecurityGroupId(String securityGroupId) {
    this.securityGroupId = securityGroupId;
  }

  public MountServiceForDescribeMountServicesOutput status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public MountServiceForDescribeMountServicesOutput subnetId(String subnetId) {
    this.subnetId = subnetId;
    return this;
  }

   /**
   * Get subnetId
   * @return subnetId
  **/
  @Schema(description = "")
  public String getSubnetId() {
    return subnetId;
  }

  public void setSubnetId(String subnetId) {
    this.subnetId = subnetId;
  }

  public MountServiceForDescribeMountServicesOutput versionNumber(String versionNumber) {
    this.versionNumber = versionNumber;
    return this;
  }

   /**
   * Get versionNumber
   * @return versionNumber
  **/
  @Schema(description = "")
  public String getVersionNumber() {
    return versionNumber;
  }

  public void setVersionNumber(String versionNumber) {
    this.versionNumber = versionNumber;
  }

  public MountServiceForDescribeMountServicesOutput vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

   /**
   * Get vpcId
   * @return vpcId
  **/
  @Schema(description = "")
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }

  public MountServiceForDescribeMountServicesOutput zoneId(String zoneId) {
    this.zoneId = zoneId;
    return this;
  }

   /**
   * Get zoneId
   * @return zoneId
  **/
  @Schema(description = "")
  public String getZoneId() {
    return zoneId;
  }

  public void setZoneId(String zoneId) {
    this.zoneId = zoneId;
  }

  public MountServiceForDescribeMountServicesOutput zoneName(String zoneName) {
    this.zoneName = zoneName;
    return this;
  }

   /**
   * Get zoneName
   * @return zoneName
  **/
  @Schema(description = "")
  public String getZoneName() {
    return zoneName;
  }

  public void setZoneName(String zoneName) {
    this.zoneName = zoneName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MountServiceForDescribeMountServicesOutput mountServiceForDescribeMountServicesOutput = (MountServiceForDescribeMountServicesOutput) o;
    return Objects.equals(this.accountId, mountServiceForDescribeMountServicesOutput.accountId) &&
        Objects.equals(this.attachFileSystems, mountServiceForDescribeMountServicesOutput.attachFileSystems) &&
        Objects.equals(this.createTime, mountServiceForDescribeMountServicesOutput.createTime) &&
        Objects.equals(this.mountServiceId, mountServiceForDescribeMountServicesOutput.mountServiceId) &&
        Objects.equals(this.mountServiceName, mountServiceForDescribeMountServicesOutput.mountServiceName) &&
        Objects.equals(this.nodes, mountServiceForDescribeMountServicesOutput.nodes) &&
        Objects.equals(this.project, mountServiceForDescribeMountServicesOutput.project) &&
        Objects.equals(this.regionId, mountServiceForDescribeMountServicesOutput.regionId) &&
        Objects.equals(this.securityGroupId, mountServiceForDescribeMountServicesOutput.securityGroupId) &&
        Objects.equals(this.status, mountServiceForDescribeMountServicesOutput.status) &&
        Objects.equals(this.subnetId, mountServiceForDescribeMountServicesOutput.subnetId) &&
        Objects.equals(this.versionNumber, mountServiceForDescribeMountServicesOutput.versionNumber) &&
        Objects.equals(this.vpcId, mountServiceForDescribeMountServicesOutput.vpcId) &&
        Objects.equals(this.zoneId, mountServiceForDescribeMountServicesOutput.zoneId) &&
        Objects.equals(this.zoneName, mountServiceForDescribeMountServicesOutput.zoneName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, attachFileSystems, createTime, mountServiceId, mountServiceName, nodes, project, regionId, securityGroupId, status, subnetId, versionNumber, vpcId, zoneId, zoneName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MountServiceForDescribeMountServicesOutput {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    attachFileSystems: ").append(toIndentedString(attachFileSystems)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    mountServiceId: ").append(toIndentedString(mountServiceId)).append("\n");
    sb.append("    mountServiceName: ").append(toIndentedString(mountServiceName)).append("\n");
    sb.append("    nodes: ").append(toIndentedString(nodes)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    regionId: ").append(toIndentedString(regionId)).append("\n");
    sb.append("    securityGroupId: ").append(toIndentedString(securityGroupId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subnetId: ").append(toIndentedString(subnetId)).append("\n");
    sb.append("    versionNumber: ").append(toIndentedString(versionNumber)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("    zoneId: ").append(toIndentedString(zoneId)).append("\n");
    sb.append("    zoneName: ").append(toIndentedString(zoneName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
