/*
 * vepfs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vepfs.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vepfs.model.CapacityInfoForDescribeFileSystemsOutput;
import com.volcengine.vepfs.model.TagForDescribeFileSystemsOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * FileSystemForDescribeFileSystemsOutput
 */



public class FileSystemForDescribeFileSystemsOutput {
  @SerializedName("AccountId")
  private String accountId = null;

  @SerializedName("Bandwidth")
  private Integer bandwidth = null;

  @SerializedName("CapacityInfo")
  private CapacityInfoForDescribeFileSystemsOutput capacityInfo = null;

  /**
   * Gets or Sets chargeStatus
   */
  @JsonAdapter(ChargeStatusEnum.Adapter.class)
  public enum ChargeStatusEnum {
    @SerializedName("Init")
    INIT("Init"),
    @SerializedName("Normal")
    NORMAL("Normal"),
    @SerializedName("Overdue")
    OVERDUE("Overdue"),
    @SerializedName("Unpaid")
    UNPAID("Unpaid"),
    @SerializedName("NeedNotCharge")
    NEEDNOTCHARGE("NeedNotCharge"),
    @SerializedName("ChargeFailed")
    CHARGEFAILED("ChargeFailed");

    private String value;

    ChargeStatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ChargeStatusEnum fromValue(String input) {
      for (ChargeStatusEnum b : ChargeStatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ChargeStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ChargeStatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ChargeStatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ChargeStatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("ChargeStatus")
  private ChargeStatusEnum chargeStatus = null;

  /**
   * Gets or Sets chargeType
   */
  @JsonAdapter(ChargeTypeEnum.Adapter.class)
  public enum ChargeTypeEnum {
    @SerializedName("PayAsYouGo")
    PAYASYOUGO("PayAsYouGo");

    private String value;

    ChargeTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ChargeTypeEnum fromValue(String input) {
      for (ChargeTypeEnum b : ChargeTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ChargeTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ChargeTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ChargeTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ChargeTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("ChargeType")
  private ChargeTypeEnum chargeType = null;

  @SerializedName("CreateTime")
  private String createTime = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("ExpireTime")
  private String expireTime = null;

  @SerializedName("FileSystemId")
  private String fileSystemId = null;

  @SerializedName("FileSystemName")
  private String fileSystemName = null;

  /**
   * Gets or Sets fileSystemType
   */
  @JsonAdapter(FileSystemTypeEnum.Adapter.class)
  public enum FileSystemTypeEnum {
    @SerializedName("VePFS")
    VEPFS("VePFS");

    private String value;

    FileSystemTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static FileSystemTypeEnum fromValue(String input) {
      for (FileSystemTypeEnum b : FileSystemTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<FileSystemTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FileSystemTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public FileSystemTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return FileSystemTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("FileSystemType")
  private FileSystemTypeEnum fileSystemType = null;

  @SerializedName("FreeTime")
  private String freeTime = null;

  @SerializedName("LastModifyTime")
  private String lastModifyTime = null;

  @SerializedName("Project")
  private String project = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  /**
   * Gets or Sets protocolType
   */
  @JsonAdapter(ProtocolTypeEnum.Adapter.class)
  public enum ProtocolTypeEnum {
    @SerializedName("NFS")
    NFS("NFS"),
    @SerializedName("SMB")
    SMB("SMB"),
    @SerializedName("VePFS")
    VEPFS("VePFS"),
    @SerializedName("FSX")
    FSX("FSX");

    private String value;

    ProtocolTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ProtocolTypeEnum fromValue(String input) {
      for (ProtocolTypeEnum b : ProtocolTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ProtocolTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProtocolTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ProtocolTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ProtocolTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("ProtocolType")
  private ProtocolTypeEnum protocolType = null;

  @SerializedName("ReadBandwidth")
  private Integer readBandwidth = null;

  @SerializedName("RegionId")
  private String regionId = null;

  @SerializedName("SecurityGroupId")
  private String securityGroupId = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    @SerializedName("Creating")
    CREATING("Creating"),
    @SerializedName("CreateError")
    CREATEERROR("CreateError"),
    @SerializedName("Running")
    RUNNING("Running"),
    @SerializedName("Updating")
    UPDATING("Updating"),
    @SerializedName("UpdateError")
    UPDATEERROR("UpdateError"),
    @SerializedName("Upgrading")
    UPGRADING("Upgrading"),
    @SerializedName("UpgradeError")
    UPGRADEERROR("UpgradeError"),
    @SerializedName("Expanding")
    EXPANDING("Expanding"),
    @SerializedName("ExpandError")
    EXPANDERROR("ExpandError"),
    @SerializedName("Deleting")
    DELETING("Deleting"),
    @SerializedName("DeleteError")
    DELETEERROR("DeleteError"),
    @SerializedName("Deleted")
    DELETED("Deleted"),
    @SerializedName("Attaching")
    ATTACHING("Attaching"),
    @SerializedName("AttachError")
    ATTACHERROR("AttachError"),
    @SerializedName("Detaching")
    DETACHING("Detaching"),
    @SerializedName("DetachError")
    DETACHERROR("DetachError"),
    @SerializedName("Stopped")
    STOPPED("Stopped"),
    @SerializedName("Error")
    ERROR("Error");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("Status")
  private StatusEnum status = null;

  @SerializedName("StopServiceTime")
  private String stopServiceTime = null;

  @SerializedName("StoreType")
  private String storeType = null;

  @SerializedName("StoreTypeCN")
  private String storeTypeCN = null;

  @SerializedName("StoreTypeEN")
  private String storeTypeEN = null;

  @SerializedName("SubnetId")
  private String subnetId = null;

  @SerializedName("Tags")
  private List<TagForDescribeFileSystemsOutput> tags = null;

  @SerializedName("VersionNumber")
  private String versionNumber = null;

  @SerializedName("VpcId")
  private String vpcId = null;

  @SerializedName("WriteBandwidth")
  private Integer writeBandwidth = null;

  @SerializedName("ZoneId")
  private String zoneId = null;

  @SerializedName("ZoneName")
  private String zoneName = null;

  public FileSystemForDescribeFileSystemsOutput accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @Schema(description = "")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public FileSystemForDescribeFileSystemsOutput bandwidth(Integer bandwidth) {
    this.bandwidth = bandwidth;
    return this;
  }

   /**
   * Get bandwidth
   * @return bandwidth
  **/
  @Schema(description = "")
  public Integer getBandwidth() {
    return bandwidth;
  }

  public void setBandwidth(Integer bandwidth) {
    this.bandwidth = bandwidth;
  }

  public FileSystemForDescribeFileSystemsOutput capacityInfo(CapacityInfoForDescribeFileSystemsOutput capacityInfo) {
    this.capacityInfo = capacityInfo;
    return this;
  }

   /**
   * Get capacityInfo
   * @return capacityInfo
  **/
  @Valid
  @Schema(description = "")
  public CapacityInfoForDescribeFileSystemsOutput getCapacityInfo() {
    return capacityInfo;
  }

  public void setCapacityInfo(CapacityInfoForDescribeFileSystemsOutput capacityInfo) {
    this.capacityInfo = capacityInfo;
  }

  public FileSystemForDescribeFileSystemsOutput chargeStatus(ChargeStatusEnum chargeStatus) {
    this.chargeStatus = chargeStatus;
    return this;
  }

   /**
   * Get chargeStatus
   * @return chargeStatus
  **/
  @Schema(description = "")
  public ChargeStatusEnum getChargeStatus() {
    return chargeStatus;
  }

  public void setChargeStatus(ChargeStatusEnum chargeStatus) {
    this.chargeStatus = chargeStatus;
  }

  public FileSystemForDescribeFileSystemsOutput chargeType(ChargeTypeEnum chargeType) {
    this.chargeType = chargeType;
    return this;
  }

   /**
   * Get chargeType
   * @return chargeType
  **/
  @Schema(description = "")
  public ChargeTypeEnum getChargeType() {
    return chargeType;
  }

  public void setChargeType(ChargeTypeEnum chargeType) {
    this.chargeType = chargeType;
  }

  public FileSystemForDescribeFileSystemsOutput createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }

  public FileSystemForDescribeFileSystemsOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public FileSystemForDescribeFileSystemsOutput expireTime(String expireTime) {
    this.expireTime = expireTime;
    return this;
  }

   /**
   * Get expireTime
   * @return expireTime
  **/
  @Schema(description = "")
  public String getExpireTime() {
    return expireTime;
  }

  public void setExpireTime(String expireTime) {
    this.expireTime = expireTime;
  }

  public FileSystemForDescribeFileSystemsOutput fileSystemId(String fileSystemId) {
    this.fileSystemId = fileSystemId;
    return this;
  }

   /**
   * Get fileSystemId
   * @return fileSystemId
  **/
  @Schema(description = "")
  public String getFileSystemId() {
    return fileSystemId;
  }

  public void setFileSystemId(String fileSystemId) {
    this.fileSystemId = fileSystemId;
  }

  public FileSystemForDescribeFileSystemsOutput fileSystemName(String fileSystemName) {
    this.fileSystemName = fileSystemName;
    return this;
  }

   /**
   * Get fileSystemName
   * @return fileSystemName
  **/
  @Schema(description = "")
  public String getFileSystemName() {
    return fileSystemName;
  }

  public void setFileSystemName(String fileSystemName) {
    this.fileSystemName = fileSystemName;
  }

  public FileSystemForDescribeFileSystemsOutput fileSystemType(FileSystemTypeEnum fileSystemType) {
    this.fileSystemType = fileSystemType;
    return this;
  }

   /**
   * Get fileSystemType
   * @return fileSystemType
  **/
  @Schema(description = "")
  public FileSystemTypeEnum getFileSystemType() {
    return fileSystemType;
  }

  public void setFileSystemType(FileSystemTypeEnum fileSystemType) {
    this.fileSystemType = fileSystemType;
  }

  public FileSystemForDescribeFileSystemsOutput freeTime(String freeTime) {
    this.freeTime = freeTime;
    return this;
  }

   /**
   * Get freeTime
   * @return freeTime
  **/
  @Schema(description = "")
  public String getFreeTime() {
    return freeTime;
  }

  public void setFreeTime(String freeTime) {
    this.freeTime = freeTime;
  }

  public FileSystemForDescribeFileSystemsOutput lastModifyTime(String lastModifyTime) {
    this.lastModifyTime = lastModifyTime;
    return this;
  }

   /**
   * Get lastModifyTime
   * @return lastModifyTime
  **/
  @Schema(description = "")
  public String getLastModifyTime() {
    return lastModifyTime;
  }

  public void setLastModifyTime(String lastModifyTime) {
    this.lastModifyTime = lastModifyTime;
  }

  public FileSystemForDescribeFileSystemsOutput project(String project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @Schema(description = "")
  public String getProject() {
    return project;
  }

  public void setProject(String project) {
    this.project = project;
  }

  public FileSystemForDescribeFileSystemsOutput projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public FileSystemForDescribeFileSystemsOutput protocolType(ProtocolTypeEnum protocolType) {
    this.protocolType = protocolType;
    return this;
  }

   /**
   * Get protocolType
   * @return protocolType
  **/
  @Schema(description = "")
  public ProtocolTypeEnum getProtocolType() {
    return protocolType;
  }

  public void setProtocolType(ProtocolTypeEnum protocolType) {
    this.protocolType = protocolType;
  }

  public FileSystemForDescribeFileSystemsOutput readBandwidth(Integer readBandwidth) {
    this.readBandwidth = readBandwidth;
    return this;
  }

   /**
   * Get readBandwidth
   * @return readBandwidth
  **/
  @Schema(description = "")
  public Integer getReadBandwidth() {
    return readBandwidth;
  }

  public void setReadBandwidth(Integer readBandwidth) {
    this.readBandwidth = readBandwidth;
  }

  public FileSystemForDescribeFileSystemsOutput regionId(String regionId) {
    this.regionId = regionId;
    return this;
  }

   /**
   * Get regionId
   * @return regionId
  **/
  @Schema(description = "")
  public String getRegionId() {
    return regionId;
  }

  public void setRegionId(String regionId) {
    this.regionId = regionId;
  }

  public FileSystemForDescribeFileSystemsOutput securityGroupId(String securityGroupId) {
    this.securityGroupId = securityGroupId;
    return this;
  }

   /**
   * Get securityGroupId
   * @return securityGroupId
  **/
  @Schema(description = "")
  public String getSecurityGroupId() {
    return securityGroupId;
  }

  public void setSecurityGroupId(String securityGroupId) {
    this.securityGroupId = securityGroupId;
  }

  public FileSystemForDescribeFileSystemsOutput status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public FileSystemForDescribeFileSystemsOutput stopServiceTime(String stopServiceTime) {
    this.stopServiceTime = stopServiceTime;
    return this;
  }

   /**
   * Get stopServiceTime
   * @return stopServiceTime
  **/
  @Schema(description = "")
  public String getStopServiceTime() {
    return stopServiceTime;
  }

  public void setStopServiceTime(String stopServiceTime) {
    this.stopServiceTime = stopServiceTime;
  }

  public FileSystemForDescribeFileSystemsOutput storeType(String storeType) {
    this.storeType = storeType;
    return this;
  }

   /**
   * Get storeType
   * @return storeType
  **/
  @Schema(description = "")
  public String getStoreType() {
    return storeType;
  }

  public void setStoreType(String storeType) {
    this.storeType = storeType;
  }

  public FileSystemForDescribeFileSystemsOutput storeTypeCN(String storeTypeCN) {
    this.storeTypeCN = storeTypeCN;
    return this;
  }

   /**
   * Get storeTypeCN
   * @return storeTypeCN
  **/
  @Schema(description = "")
  public String getStoreTypeCN() {
    return storeTypeCN;
  }

  public void setStoreTypeCN(String storeTypeCN) {
    this.storeTypeCN = storeTypeCN;
  }

  public FileSystemForDescribeFileSystemsOutput storeTypeEN(String storeTypeEN) {
    this.storeTypeEN = storeTypeEN;
    return this;
  }

   /**
   * Get storeTypeEN
   * @return storeTypeEN
  **/
  @Schema(description = "")
  public String getStoreTypeEN() {
    return storeTypeEN;
  }

  public void setStoreTypeEN(String storeTypeEN) {
    this.storeTypeEN = storeTypeEN;
  }

  public FileSystemForDescribeFileSystemsOutput subnetId(String subnetId) {
    this.subnetId = subnetId;
    return this;
  }

   /**
   * Get subnetId
   * @return subnetId
  **/
  @Schema(description = "")
  public String getSubnetId() {
    return subnetId;
  }

  public void setSubnetId(String subnetId) {
    this.subnetId = subnetId;
  }

  public FileSystemForDescribeFileSystemsOutput tags(List<TagForDescribeFileSystemsOutput> tags) {
    this.tags = tags;
    return this;
  }

  public FileSystemForDescribeFileSystemsOutput addTagsItem(TagForDescribeFileSystemsOutput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForDescribeFileSystemsOutput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForDescribeFileSystemsOutput> getTags() {
    return tags;
  }

  public void setTags(List<TagForDescribeFileSystemsOutput> tags) {
    this.tags = tags;
  }

  public FileSystemForDescribeFileSystemsOutput versionNumber(String versionNumber) {
    this.versionNumber = versionNumber;
    return this;
  }

   /**
   * Get versionNumber
   * @return versionNumber
  **/
  @Schema(description = "")
  public String getVersionNumber() {
    return versionNumber;
  }

  public void setVersionNumber(String versionNumber) {
    this.versionNumber = versionNumber;
  }

  public FileSystemForDescribeFileSystemsOutput vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

   /**
   * Get vpcId
   * @return vpcId
  **/
  @Schema(description = "")
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }

  public FileSystemForDescribeFileSystemsOutput writeBandwidth(Integer writeBandwidth) {
    this.writeBandwidth = writeBandwidth;
    return this;
  }

   /**
   * Get writeBandwidth
   * @return writeBandwidth
  **/
  @Schema(description = "")
  public Integer getWriteBandwidth() {
    return writeBandwidth;
  }

  public void setWriteBandwidth(Integer writeBandwidth) {
    this.writeBandwidth = writeBandwidth;
  }

  public FileSystemForDescribeFileSystemsOutput zoneId(String zoneId) {
    this.zoneId = zoneId;
    return this;
  }

   /**
   * Get zoneId
   * @return zoneId
  **/
  @Schema(description = "")
  public String getZoneId() {
    return zoneId;
  }

  public void setZoneId(String zoneId) {
    this.zoneId = zoneId;
  }

  public FileSystemForDescribeFileSystemsOutput zoneName(String zoneName) {
    this.zoneName = zoneName;
    return this;
  }

   /**
   * Get zoneName
   * @return zoneName
  **/
  @Schema(description = "")
  public String getZoneName() {
    return zoneName;
  }

  public void setZoneName(String zoneName) {
    this.zoneName = zoneName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileSystemForDescribeFileSystemsOutput fileSystemForDescribeFileSystemsOutput = (FileSystemForDescribeFileSystemsOutput) o;
    return Objects.equals(this.accountId, fileSystemForDescribeFileSystemsOutput.accountId) &&
        Objects.equals(this.bandwidth, fileSystemForDescribeFileSystemsOutput.bandwidth) &&
        Objects.equals(this.capacityInfo, fileSystemForDescribeFileSystemsOutput.capacityInfo) &&
        Objects.equals(this.chargeStatus, fileSystemForDescribeFileSystemsOutput.chargeStatus) &&
        Objects.equals(this.chargeType, fileSystemForDescribeFileSystemsOutput.chargeType) &&
        Objects.equals(this.createTime, fileSystemForDescribeFileSystemsOutput.createTime) &&
        Objects.equals(this.description, fileSystemForDescribeFileSystemsOutput.description) &&
        Objects.equals(this.expireTime, fileSystemForDescribeFileSystemsOutput.expireTime) &&
        Objects.equals(this.fileSystemId, fileSystemForDescribeFileSystemsOutput.fileSystemId) &&
        Objects.equals(this.fileSystemName, fileSystemForDescribeFileSystemsOutput.fileSystemName) &&
        Objects.equals(this.fileSystemType, fileSystemForDescribeFileSystemsOutput.fileSystemType) &&
        Objects.equals(this.freeTime, fileSystemForDescribeFileSystemsOutput.freeTime) &&
        Objects.equals(this.lastModifyTime, fileSystemForDescribeFileSystemsOutput.lastModifyTime) &&
        Objects.equals(this.project, fileSystemForDescribeFileSystemsOutput.project) &&
        Objects.equals(this.projectName, fileSystemForDescribeFileSystemsOutput.projectName) &&
        Objects.equals(this.protocolType, fileSystemForDescribeFileSystemsOutput.protocolType) &&
        Objects.equals(this.readBandwidth, fileSystemForDescribeFileSystemsOutput.readBandwidth) &&
        Objects.equals(this.regionId, fileSystemForDescribeFileSystemsOutput.regionId) &&
        Objects.equals(this.securityGroupId, fileSystemForDescribeFileSystemsOutput.securityGroupId) &&
        Objects.equals(this.status, fileSystemForDescribeFileSystemsOutput.status) &&
        Objects.equals(this.stopServiceTime, fileSystemForDescribeFileSystemsOutput.stopServiceTime) &&
        Objects.equals(this.storeType, fileSystemForDescribeFileSystemsOutput.storeType) &&
        Objects.equals(this.storeTypeCN, fileSystemForDescribeFileSystemsOutput.storeTypeCN) &&
        Objects.equals(this.storeTypeEN, fileSystemForDescribeFileSystemsOutput.storeTypeEN) &&
        Objects.equals(this.subnetId, fileSystemForDescribeFileSystemsOutput.subnetId) &&
        Objects.equals(this.tags, fileSystemForDescribeFileSystemsOutput.tags) &&
        Objects.equals(this.versionNumber, fileSystemForDescribeFileSystemsOutput.versionNumber) &&
        Objects.equals(this.vpcId, fileSystemForDescribeFileSystemsOutput.vpcId) &&
        Objects.equals(this.writeBandwidth, fileSystemForDescribeFileSystemsOutput.writeBandwidth) &&
        Objects.equals(this.zoneId, fileSystemForDescribeFileSystemsOutput.zoneId) &&
        Objects.equals(this.zoneName, fileSystemForDescribeFileSystemsOutput.zoneName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, bandwidth, capacityInfo, chargeStatus, chargeType, createTime, description, expireTime, fileSystemId, fileSystemName, fileSystemType, freeTime, lastModifyTime, project, projectName, protocolType, readBandwidth, regionId, securityGroupId, status, stopServiceTime, storeType, storeTypeCN, storeTypeEN, subnetId, tags, versionNumber, vpcId, writeBandwidth, zoneId, zoneName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileSystemForDescribeFileSystemsOutput {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    bandwidth: ").append(toIndentedString(bandwidth)).append("\n");
    sb.append("    capacityInfo: ").append(toIndentedString(capacityInfo)).append("\n");
    sb.append("    chargeStatus: ").append(toIndentedString(chargeStatus)).append("\n");
    sb.append("    chargeType: ").append(toIndentedString(chargeType)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    expireTime: ").append(toIndentedString(expireTime)).append("\n");
    sb.append("    fileSystemId: ").append(toIndentedString(fileSystemId)).append("\n");
    sb.append("    fileSystemName: ").append(toIndentedString(fileSystemName)).append("\n");
    sb.append("    fileSystemType: ").append(toIndentedString(fileSystemType)).append("\n");
    sb.append("    freeTime: ").append(toIndentedString(freeTime)).append("\n");
    sb.append("    lastModifyTime: ").append(toIndentedString(lastModifyTime)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    protocolType: ").append(toIndentedString(protocolType)).append("\n");
    sb.append("    readBandwidth: ").append(toIndentedString(readBandwidth)).append("\n");
    sb.append("    regionId: ").append(toIndentedString(regionId)).append("\n");
    sb.append("    securityGroupId: ").append(toIndentedString(securityGroupId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    stopServiceTime: ").append(toIndentedString(stopServiceTime)).append("\n");
    sb.append("    storeType: ").append(toIndentedString(storeType)).append("\n");
    sb.append("    storeTypeCN: ").append(toIndentedString(storeTypeCN)).append("\n");
    sb.append("    storeTypeEN: ").append(toIndentedString(storeTypeEN)).append("\n");
    sb.append("    subnetId: ").append(toIndentedString(subnetId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    versionNumber: ").append(toIndentedString(versionNumber)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("    writeBandwidth: ").append(toIndentedString(writeBandwidth)).append("\n");
    sb.append("    zoneId: ").append(toIndentedString(zoneId)).append("\n");
    sb.append("    zoneName: ").append(toIndentedString(zoneName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
