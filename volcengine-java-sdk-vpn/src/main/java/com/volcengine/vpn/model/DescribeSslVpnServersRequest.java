/*
 * vpn
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vpn.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vpn.model.TagFilterForDescribeSslVpnServersInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeSslVpnServersRequest
 */



public class DescribeSslVpnServersRequest {
  @SerializedName("PageNumber")
  private Integer pageNumber = null;

  @SerializedName("PageSize")
  private Integer pageSize = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("SslVpnServerIds")
  private List<String> sslVpnServerIds = null;

  @SerializedName("SslVpnServerName")
  private String sslVpnServerName = null;

  @SerializedName("TagFilters")
  private List<TagFilterForDescribeSslVpnServersInput> tagFilters = null;

  @SerializedName("VpnGatewayId")
  private String vpnGatewayId = null;

  public DescribeSslVpnServersRequest pageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @Schema(description = "")
  public Integer getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  public DescribeSslVpnServersRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @Schema(description = "")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public DescribeSslVpnServersRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public DescribeSslVpnServersRequest sslVpnServerIds(List<String> sslVpnServerIds) {
    this.sslVpnServerIds = sslVpnServerIds;
    return this;
  }

  public DescribeSslVpnServersRequest addSslVpnServerIdsItem(String sslVpnServerIdsItem) {
    if (this.sslVpnServerIds == null) {
      this.sslVpnServerIds = new ArrayList<String>();
    }
    this.sslVpnServerIds.add(sslVpnServerIdsItem);
    return this;
  }

   /**
   * Get sslVpnServerIds
   * @return sslVpnServerIds
  **/
  @Schema(description = "")
  public List<String> getSslVpnServerIds() {
    return sslVpnServerIds;
  }

  public void setSslVpnServerIds(List<String> sslVpnServerIds) {
    this.sslVpnServerIds = sslVpnServerIds;
  }

  public DescribeSslVpnServersRequest sslVpnServerName(String sslVpnServerName) {
    this.sslVpnServerName = sslVpnServerName;
    return this;
  }

   /**
   * Get sslVpnServerName
   * @return sslVpnServerName
  **/
  @Schema(description = "")
  public String getSslVpnServerName() {
    return sslVpnServerName;
  }

  public void setSslVpnServerName(String sslVpnServerName) {
    this.sslVpnServerName = sslVpnServerName;
  }

  public DescribeSslVpnServersRequest tagFilters(List<TagFilterForDescribeSslVpnServersInput> tagFilters) {
    this.tagFilters = tagFilters;
    return this;
  }

  public DescribeSslVpnServersRequest addTagFiltersItem(TagFilterForDescribeSslVpnServersInput tagFiltersItem) {
    if (this.tagFilters == null) {
      this.tagFilters = new ArrayList<TagFilterForDescribeSslVpnServersInput>();
    }
    this.tagFilters.add(tagFiltersItem);
    return this;
  }

   /**
   * Get tagFilters
   * @return tagFilters
  **/
  @Valid
  @Schema(description = "")
  public List<TagFilterForDescribeSslVpnServersInput> getTagFilters() {
    return tagFilters;
  }

  public void setTagFilters(List<TagFilterForDescribeSslVpnServersInput> tagFilters) {
    this.tagFilters = tagFilters;
  }

  public DescribeSslVpnServersRequest vpnGatewayId(String vpnGatewayId) {
    this.vpnGatewayId = vpnGatewayId;
    return this;
  }

   /**
   * Get vpnGatewayId
   * @return vpnGatewayId
  **/
  @Schema(description = "")
  public String getVpnGatewayId() {
    return vpnGatewayId;
  }

  public void setVpnGatewayId(String vpnGatewayId) {
    this.vpnGatewayId = vpnGatewayId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeSslVpnServersRequest describeSslVpnServersRequest = (DescribeSslVpnServersRequest) o;
    return Objects.equals(this.pageNumber, describeSslVpnServersRequest.pageNumber) &&
        Objects.equals(this.pageSize, describeSslVpnServersRequest.pageSize) &&
        Objects.equals(this.projectName, describeSslVpnServersRequest.projectName) &&
        Objects.equals(this.sslVpnServerIds, describeSslVpnServersRequest.sslVpnServerIds) &&
        Objects.equals(this.sslVpnServerName, describeSslVpnServersRequest.sslVpnServerName) &&
        Objects.equals(this.tagFilters, describeSslVpnServersRequest.tagFilters) &&
        Objects.equals(this.vpnGatewayId, describeSslVpnServersRequest.vpnGatewayId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pageNumber, pageSize, projectName, sslVpnServerIds, sslVpnServerName, tagFilters, vpnGatewayId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeSslVpnServersRequest {\n");
    
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    sslVpnServerIds: ").append(toIndentedString(sslVpnServerIds)).append("\n");
    sb.append("    sslVpnServerName: ").append(toIndentedString(sslVpnServerName)).append("\n");
    sb.append("    tagFilters: ").append(toIndentedString(tagFilters)).append("\n");
    sb.append("    vpnGatewayId: ").append(toIndentedString(vpnGatewayId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
