/*
 * vpn
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vpn.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vpn.model.TagFilterForDescribeSslVpnClientCertsInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeSslVpnClientCertsRequest
 */



public class DescribeSslVpnClientCertsRequest {
  @SerializedName("PageNumber")
  private Integer pageNumber = null;

  @SerializedName("PageSize")
  private Integer pageSize = null;

  @SerializedName("SslVpnClientCertIds")
  private List<String> sslVpnClientCertIds = null;

  @SerializedName("SslVpnClientCertName")
  private String sslVpnClientCertName = null;

  @SerializedName("SslVpnServerId")
  private String sslVpnServerId = null;

  @SerializedName("TagFilters")
  private List<TagFilterForDescribeSslVpnClientCertsInput> tagFilters = null;

  public DescribeSslVpnClientCertsRequest pageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @Schema(description = "")
  public Integer getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  public DescribeSslVpnClientCertsRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @Schema(description = "")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public DescribeSslVpnClientCertsRequest sslVpnClientCertIds(List<String> sslVpnClientCertIds) {
    this.sslVpnClientCertIds = sslVpnClientCertIds;
    return this;
  }

  public DescribeSslVpnClientCertsRequest addSslVpnClientCertIdsItem(String sslVpnClientCertIdsItem) {
    if (this.sslVpnClientCertIds == null) {
      this.sslVpnClientCertIds = new ArrayList<String>();
    }
    this.sslVpnClientCertIds.add(sslVpnClientCertIdsItem);
    return this;
  }

   /**
   * Get sslVpnClientCertIds
   * @return sslVpnClientCertIds
  **/
  @Schema(description = "")
  public List<String> getSslVpnClientCertIds() {
    return sslVpnClientCertIds;
  }

  public void setSslVpnClientCertIds(List<String> sslVpnClientCertIds) {
    this.sslVpnClientCertIds = sslVpnClientCertIds;
  }

  public DescribeSslVpnClientCertsRequest sslVpnClientCertName(String sslVpnClientCertName) {
    this.sslVpnClientCertName = sslVpnClientCertName;
    return this;
  }

   /**
   * Get sslVpnClientCertName
   * @return sslVpnClientCertName
  **/
  @Schema(description = "")
  public String getSslVpnClientCertName() {
    return sslVpnClientCertName;
  }

  public void setSslVpnClientCertName(String sslVpnClientCertName) {
    this.sslVpnClientCertName = sslVpnClientCertName;
  }

  public DescribeSslVpnClientCertsRequest sslVpnServerId(String sslVpnServerId) {
    this.sslVpnServerId = sslVpnServerId;
    return this;
  }

   /**
   * Get sslVpnServerId
   * @return sslVpnServerId
  **/
  @Schema(description = "")
  public String getSslVpnServerId() {
    return sslVpnServerId;
  }

  public void setSslVpnServerId(String sslVpnServerId) {
    this.sslVpnServerId = sslVpnServerId;
  }

  public DescribeSslVpnClientCertsRequest tagFilters(List<TagFilterForDescribeSslVpnClientCertsInput> tagFilters) {
    this.tagFilters = tagFilters;
    return this;
  }

  public DescribeSslVpnClientCertsRequest addTagFiltersItem(TagFilterForDescribeSslVpnClientCertsInput tagFiltersItem) {
    if (this.tagFilters == null) {
      this.tagFilters = new ArrayList<TagFilterForDescribeSslVpnClientCertsInput>();
    }
    this.tagFilters.add(tagFiltersItem);
    return this;
  }

   /**
   * Get tagFilters
   * @return tagFilters
  **/
  @Valid
  @Schema(description = "")
  public List<TagFilterForDescribeSslVpnClientCertsInput> getTagFilters() {
    return tagFilters;
  }

  public void setTagFilters(List<TagFilterForDescribeSslVpnClientCertsInput> tagFilters) {
    this.tagFilters = tagFilters;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeSslVpnClientCertsRequest describeSslVpnClientCertsRequest = (DescribeSslVpnClientCertsRequest) o;
    return Objects.equals(this.pageNumber, describeSslVpnClientCertsRequest.pageNumber) &&
        Objects.equals(this.pageSize, describeSslVpnClientCertsRequest.pageSize) &&
        Objects.equals(this.sslVpnClientCertIds, describeSslVpnClientCertsRequest.sslVpnClientCertIds) &&
        Objects.equals(this.sslVpnClientCertName, describeSslVpnClientCertsRequest.sslVpnClientCertName) &&
        Objects.equals(this.sslVpnServerId, describeSslVpnClientCertsRequest.sslVpnServerId) &&
        Objects.equals(this.tagFilters, describeSslVpnClientCertsRequest.tagFilters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pageNumber, pageSize, sslVpnClientCertIds, sslVpnClientCertName, sslVpnServerId, tagFilters);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeSslVpnClientCertsRequest {\n");
    
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    sslVpnClientCertIds: ").append(toIndentedString(sslVpnClientCertIds)).append("\n");
    sb.append("    sslVpnClientCertName: ").append(toIndentedString(sslVpnClientCertName)).append("\n");
    sb.append("    sslVpnServerId: ").append(toIndentedString(sslVpnServerId)).append("\n");
    sb.append("    tagFilters: ").append(toIndentedString(tagFilters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
