/*
 * apig20221112
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.apig20221112.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.apig20221112.model.HeaderForCreateRouteInput;
import com.volcengine.apig20221112.model.PathForCreateRouteInput;
import com.volcengine.apig20221112.model.QueryStringForCreateRouteInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * MatchRuleForCreateRouteInput
 */



public class MatchRuleForCreateRouteInput {
  @SerializedName("Header")
  private List<HeaderForCreateRouteInput> header = null;

  @SerializedName("Method")
  private List<String> method = null;

  @SerializedName("Path")
  private PathForCreateRouteInput path = null;

  @SerializedName("QueryString")
  private List<QueryStringForCreateRouteInput> queryString = null;

  public MatchRuleForCreateRouteInput header(List<HeaderForCreateRouteInput> header) {
    this.header = header;
    return this;
  }

  public MatchRuleForCreateRouteInput addHeaderItem(HeaderForCreateRouteInput headerItem) {
    if (this.header == null) {
      this.header = new ArrayList<HeaderForCreateRouteInput>();
    }
    this.header.add(headerItem);
    return this;
  }

   /**
   * Get header
   * @return header
  **/
  @Valid
  @Schema(description = "")
  public List<HeaderForCreateRouteInput> getHeader() {
    return header;
  }

  public void setHeader(List<HeaderForCreateRouteInput> header) {
    this.header = header;
  }

  public MatchRuleForCreateRouteInput method(List<String> method) {
    this.method = method;
    return this;
  }

  public MatchRuleForCreateRouteInput addMethodItem(String methodItem) {
    if (this.method == null) {
      this.method = new ArrayList<String>();
    }
    this.method.add(methodItem);
    return this;
  }

   /**
   * Get method
   * @return method
  **/
  @Schema(description = "")
  public List<String> getMethod() {
    return method;
  }

  public void setMethod(List<String> method) {
    this.method = method;
  }

  public MatchRuleForCreateRouteInput path(PathForCreateRouteInput path) {
    this.path = path;
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @Valid
  @Schema(description = "")
  public PathForCreateRouteInput getPath() {
    return path;
  }

  public void setPath(PathForCreateRouteInput path) {
    this.path = path;
  }

  public MatchRuleForCreateRouteInput queryString(List<QueryStringForCreateRouteInput> queryString) {
    this.queryString = queryString;
    return this;
  }

  public MatchRuleForCreateRouteInput addQueryStringItem(QueryStringForCreateRouteInput queryStringItem) {
    if (this.queryString == null) {
      this.queryString = new ArrayList<QueryStringForCreateRouteInput>();
    }
    this.queryString.add(queryStringItem);
    return this;
  }

   /**
   * Get queryString
   * @return queryString
  **/
  @Valid
  @Schema(description = "")
  public List<QueryStringForCreateRouteInput> getQueryString() {
    return queryString;
  }

  public void setQueryString(List<QueryStringForCreateRouteInput> queryString) {
    this.queryString = queryString;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MatchRuleForCreateRouteInput matchRuleForCreateRouteInput = (MatchRuleForCreateRouteInput) o;
    return Objects.equals(this.header, matchRuleForCreateRouteInput.header) &&
        Objects.equals(this.method, matchRuleForCreateRouteInput.method) &&
        Objects.equals(this.path, matchRuleForCreateRouteInput.path) &&
        Objects.equals(this.queryString, matchRuleForCreateRouteInput.queryString);
  }

  @Override
  public int hashCode() {
    return Objects.hash(header, method, path, queryString);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MatchRuleForCreateRouteInput {\n");
    
    sb.append("    header: ").append(toIndentedString(header)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    queryString: ").append(toIndentedString(queryString)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
