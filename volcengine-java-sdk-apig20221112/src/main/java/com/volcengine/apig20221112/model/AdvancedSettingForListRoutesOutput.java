/*
 * apig20221112
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.apig20221112.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.apig20221112.model.CorsPolicySettingForListRoutesOutput;
import com.volcengine.apig20221112.model.HeaderOperationForListRoutesOutput;
import com.volcengine.apig20221112.model.MirrorPolicyForListRoutesOutput;
import com.volcengine.apig20221112.model.RetryPolicySettingForListRoutesOutput;
import com.volcengine.apig20221112.model.TimeoutSettingForListRoutesOutput;
import com.volcengine.apig20221112.model.URLRewriteSettingForListRoutesOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * AdvancedSettingForListRoutesOutput
 */



public class AdvancedSettingForListRoutesOutput {
  @SerializedName("CorsPolicySetting")
  private CorsPolicySettingForListRoutesOutput corsPolicySetting = null;

  @SerializedName("HeaderOperations")
  private List<HeaderOperationForListRoutesOutput> headerOperations = null;

  @SerializedName("MirrorPolicies")
  private List<MirrorPolicyForListRoutesOutput> mirrorPolicies = null;

  @SerializedName("RetryPolicySetting")
  private RetryPolicySettingForListRoutesOutput retryPolicySetting = null;

  @SerializedName("TimeoutSetting")
  private TimeoutSettingForListRoutesOutput timeoutSetting = null;

  @SerializedName("URLRewriteSetting")
  private URLRewriteSettingForListRoutesOutput urLRewriteSetting = null;

  public AdvancedSettingForListRoutesOutput corsPolicySetting(CorsPolicySettingForListRoutesOutput corsPolicySetting) {
    this.corsPolicySetting = corsPolicySetting;
    return this;
  }

   /**
   * Get corsPolicySetting
   * @return corsPolicySetting
  **/
  @Valid
  @Schema(description = "")
  public CorsPolicySettingForListRoutesOutput getCorsPolicySetting() {
    return corsPolicySetting;
  }

  public void setCorsPolicySetting(CorsPolicySettingForListRoutesOutput corsPolicySetting) {
    this.corsPolicySetting = corsPolicySetting;
  }

  public AdvancedSettingForListRoutesOutput headerOperations(List<HeaderOperationForListRoutesOutput> headerOperations) {
    this.headerOperations = headerOperations;
    return this;
  }

  public AdvancedSettingForListRoutesOutput addHeaderOperationsItem(HeaderOperationForListRoutesOutput headerOperationsItem) {
    if (this.headerOperations == null) {
      this.headerOperations = new ArrayList<HeaderOperationForListRoutesOutput>();
    }
    this.headerOperations.add(headerOperationsItem);
    return this;
  }

   /**
   * Get headerOperations
   * @return headerOperations
  **/
  @Valid
  @Schema(description = "")
  public List<HeaderOperationForListRoutesOutput> getHeaderOperations() {
    return headerOperations;
  }

  public void setHeaderOperations(List<HeaderOperationForListRoutesOutput> headerOperations) {
    this.headerOperations = headerOperations;
  }

  public AdvancedSettingForListRoutesOutput mirrorPolicies(List<MirrorPolicyForListRoutesOutput> mirrorPolicies) {
    this.mirrorPolicies = mirrorPolicies;
    return this;
  }

  public AdvancedSettingForListRoutesOutput addMirrorPoliciesItem(MirrorPolicyForListRoutesOutput mirrorPoliciesItem) {
    if (this.mirrorPolicies == null) {
      this.mirrorPolicies = new ArrayList<MirrorPolicyForListRoutesOutput>();
    }
    this.mirrorPolicies.add(mirrorPoliciesItem);
    return this;
  }

   /**
   * Get mirrorPolicies
   * @return mirrorPolicies
  **/
  @Valid
  @Schema(description = "")
  public List<MirrorPolicyForListRoutesOutput> getMirrorPolicies() {
    return mirrorPolicies;
  }

  public void setMirrorPolicies(List<MirrorPolicyForListRoutesOutput> mirrorPolicies) {
    this.mirrorPolicies = mirrorPolicies;
  }

  public AdvancedSettingForListRoutesOutput retryPolicySetting(RetryPolicySettingForListRoutesOutput retryPolicySetting) {
    this.retryPolicySetting = retryPolicySetting;
    return this;
  }

   /**
   * Get retryPolicySetting
   * @return retryPolicySetting
  **/
  @Valid
  @Schema(description = "")
  public RetryPolicySettingForListRoutesOutput getRetryPolicySetting() {
    return retryPolicySetting;
  }

  public void setRetryPolicySetting(RetryPolicySettingForListRoutesOutput retryPolicySetting) {
    this.retryPolicySetting = retryPolicySetting;
  }

  public AdvancedSettingForListRoutesOutput timeoutSetting(TimeoutSettingForListRoutesOutput timeoutSetting) {
    this.timeoutSetting = timeoutSetting;
    return this;
  }

   /**
   * Get timeoutSetting
   * @return timeoutSetting
  **/
  @Valid
  @Schema(description = "")
  public TimeoutSettingForListRoutesOutput getTimeoutSetting() {
    return timeoutSetting;
  }

  public void setTimeoutSetting(TimeoutSettingForListRoutesOutput timeoutSetting) {
    this.timeoutSetting = timeoutSetting;
  }

  public AdvancedSettingForListRoutesOutput urLRewriteSetting(URLRewriteSettingForListRoutesOutput urLRewriteSetting) {
    this.urLRewriteSetting = urLRewriteSetting;
    return this;
  }

   /**
   * Get urLRewriteSetting
   * @return urLRewriteSetting
  **/
  @Valid
  @Schema(description = "")
  public URLRewriteSettingForListRoutesOutput getUrLRewriteSetting() {
    return urLRewriteSetting;
  }

  public void setUrLRewriteSetting(URLRewriteSettingForListRoutesOutput urLRewriteSetting) {
    this.urLRewriteSetting = urLRewriteSetting;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdvancedSettingForListRoutesOutput advancedSettingForListRoutesOutput = (AdvancedSettingForListRoutesOutput) o;
    return Objects.equals(this.corsPolicySetting, advancedSettingForListRoutesOutput.corsPolicySetting) &&
        Objects.equals(this.headerOperations, advancedSettingForListRoutesOutput.headerOperations) &&
        Objects.equals(this.mirrorPolicies, advancedSettingForListRoutesOutput.mirrorPolicies) &&
        Objects.equals(this.retryPolicySetting, advancedSettingForListRoutesOutput.retryPolicySetting) &&
        Objects.equals(this.timeoutSetting, advancedSettingForListRoutesOutput.timeoutSetting) &&
        Objects.equals(this.urLRewriteSetting, advancedSettingForListRoutesOutput.urLRewriteSetting);
  }

  @Override
  public int hashCode() {
    return Objects.hash(corsPolicySetting, headerOperations, mirrorPolicies, retryPolicySetting, timeoutSetting, urLRewriteSetting);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdvancedSettingForListRoutesOutput {\n");
    
    sb.append("    corsPolicySetting: ").append(toIndentedString(corsPolicySetting)).append("\n");
    sb.append("    headerOperations: ").append(toIndentedString(headerOperations)).append("\n");
    sb.append("    mirrorPolicies: ").append(toIndentedString(mirrorPolicies)).append("\n");
    sb.append("    retryPolicySetting: ").append(toIndentedString(retryPolicySetting)).append("\n");
    sb.append("    timeoutSetting: ").append(toIndentedString(timeoutSetting)).append("\n");
    sb.append("    urLRewriteSetting: ").append(toIndentedString(urLRewriteSetting)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
