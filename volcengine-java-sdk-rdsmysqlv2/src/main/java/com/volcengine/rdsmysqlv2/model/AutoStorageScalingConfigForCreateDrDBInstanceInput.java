/*
 * rds_mysql_v2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.rdsmysqlv2.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * AutoStorageScalingConfigForCreateDrDBInstanceInput
 */



public class AutoStorageScalingConfigForCreateDrDBInstanceInput {
  @SerializedName("EnableStorageAutoScale")
  private Boolean enableStorageAutoScale = null;

  @SerializedName("StorageThreshold")
  private Integer storageThreshold = null;

  @SerializedName("StorageUpperBound")
  private Integer storageUpperBound = null;

  public AutoStorageScalingConfigForCreateDrDBInstanceInput enableStorageAutoScale(Boolean enableStorageAutoScale) {
    this.enableStorageAutoScale = enableStorageAutoScale;
    return this;
  }

   /**
   * Get enableStorageAutoScale
   * @return enableStorageAutoScale
  **/
  @Schema(description = "")
  public Boolean isEnableStorageAutoScale() {
    return enableStorageAutoScale;
  }

  public void setEnableStorageAutoScale(Boolean enableStorageAutoScale) {
    this.enableStorageAutoScale = enableStorageAutoScale;
  }

  public AutoStorageScalingConfigForCreateDrDBInstanceInput storageThreshold(Integer storageThreshold) {
    this.storageThreshold = storageThreshold;
    return this;
  }

   /**
   * Get storageThreshold
   * @return storageThreshold
  **/
  @Schema(description = "")
  public Integer getStorageThreshold() {
    return storageThreshold;
  }

  public void setStorageThreshold(Integer storageThreshold) {
    this.storageThreshold = storageThreshold;
  }

  public AutoStorageScalingConfigForCreateDrDBInstanceInput storageUpperBound(Integer storageUpperBound) {
    this.storageUpperBound = storageUpperBound;
    return this;
  }

   /**
   * Get storageUpperBound
   * @return storageUpperBound
  **/
  @Schema(description = "")
  public Integer getStorageUpperBound() {
    return storageUpperBound;
  }

  public void setStorageUpperBound(Integer storageUpperBound) {
    this.storageUpperBound = storageUpperBound;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutoStorageScalingConfigForCreateDrDBInstanceInput autoStorageScalingConfigForCreateDrDBInstanceInput = (AutoStorageScalingConfigForCreateDrDBInstanceInput) o;
    return Objects.equals(this.enableStorageAutoScale, autoStorageScalingConfigForCreateDrDBInstanceInput.enableStorageAutoScale) &&
        Objects.equals(this.storageThreshold, autoStorageScalingConfigForCreateDrDBInstanceInput.storageThreshold) &&
        Objects.equals(this.storageUpperBound, autoStorageScalingConfigForCreateDrDBInstanceInput.storageUpperBound);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enableStorageAutoScale, storageThreshold, storageUpperBound);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutoStorageScalingConfigForCreateDrDBInstanceInput {\n");
    
    sb.append("    enableStorageAutoScale: ").append(toIndentedString(enableStorageAutoScale)).append("\n");
    sb.append("    storageThreshold: ").append(toIndentedString(storageThreshold)).append("\n");
    sb.append("    storageUpperBound: ").append(toIndentedString(storageUpperBound)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
