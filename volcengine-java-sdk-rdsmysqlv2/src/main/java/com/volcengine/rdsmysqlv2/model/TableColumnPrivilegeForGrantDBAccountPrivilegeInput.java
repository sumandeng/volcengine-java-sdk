/*
 * rds_mysql_v2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.rdsmysqlv2.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.rdsmysqlv2.model.ColumnPrivilegeForGrantDBAccountPrivilegeInput;
import com.volcengine.rdsmysqlv2.model.TablePrivilegeForGrantDBAccountPrivilegeInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * TableColumnPrivilegeForGrantDBAccountPrivilegeInput
 */



public class TableColumnPrivilegeForGrantDBAccountPrivilegeInput {
  @SerializedName("ColumnPrivileges")
  private List<ColumnPrivilegeForGrantDBAccountPrivilegeInput> columnPrivileges = null;

  @SerializedName("DBName")
  private String dbName = null;

  @SerializedName("TablePrivileges")
  private List<TablePrivilegeForGrantDBAccountPrivilegeInput> tablePrivileges = null;

  public TableColumnPrivilegeForGrantDBAccountPrivilegeInput columnPrivileges(List<ColumnPrivilegeForGrantDBAccountPrivilegeInput> columnPrivileges) {
    this.columnPrivileges = columnPrivileges;
    return this;
  }

  public TableColumnPrivilegeForGrantDBAccountPrivilegeInput addColumnPrivilegesItem(ColumnPrivilegeForGrantDBAccountPrivilegeInput columnPrivilegesItem) {
    if (this.columnPrivileges == null) {
      this.columnPrivileges = new ArrayList<ColumnPrivilegeForGrantDBAccountPrivilegeInput>();
    }
    this.columnPrivileges.add(columnPrivilegesItem);
    return this;
  }

   /**
   * Get columnPrivileges
   * @return columnPrivileges
  **/
  @Valid
  @Schema(description = "")
  public List<ColumnPrivilegeForGrantDBAccountPrivilegeInput> getColumnPrivileges() {
    return columnPrivileges;
  }

  public void setColumnPrivileges(List<ColumnPrivilegeForGrantDBAccountPrivilegeInput> columnPrivileges) {
    this.columnPrivileges = columnPrivileges;
  }

  public TableColumnPrivilegeForGrantDBAccountPrivilegeInput dbName(String dbName) {
    this.dbName = dbName;
    return this;
  }

   /**
   * Get dbName
   * @return dbName
  **/
  @Schema(description = "")
  public String getDbName() {
    return dbName;
  }

  public void setDbName(String dbName) {
    this.dbName = dbName;
  }

  public TableColumnPrivilegeForGrantDBAccountPrivilegeInput tablePrivileges(List<TablePrivilegeForGrantDBAccountPrivilegeInput> tablePrivileges) {
    this.tablePrivileges = tablePrivileges;
    return this;
  }

  public TableColumnPrivilegeForGrantDBAccountPrivilegeInput addTablePrivilegesItem(TablePrivilegeForGrantDBAccountPrivilegeInput tablePrivilegesItem) {
    if (this.tablePrivileges == null) {
      this.tablePrivileges = new ArrayList<TablePrivilegeForGrantDBAccountPrivilegeInput>();
    }
    this.tablePrivileges.add(tablePrivilegesItem);
    return this;
  }

   /**
   * Get tablePrivileges
   * @return tablePrivileges
  **/
  @Valid
  @Schema(description = "")
  public List<TablePrivilegeForGrantDBAccountPrivilegeInput> getTablePrivileges() {
    return tablePrivileges;
  }

  public void setTablePrivileges(List<TablePrivilegeForGrantDBAccountPrivilegeInput> tablePrivileges) {
    this.tablePrivileges = tablePrivileges;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TableColumnPrivilegeForGrantDBAccountPrivilegeInput tableColumnPrivilegeForGrantDBAccountPrivilegeInput = (TableColumnPrivilegeForGrantDBAccountPrivilegeInput) o;
    return Objects.equals(this.columnPrivileges, tableColumnPrivilegeForGrantDBAccountPrivilegeInput.columnPrivileges) &&
        Objects.equals(this.dbName, tableColumnPrivilegeForGrantDBAccountPrivilegeInput.dbName) &&
        Objects.equals(this.tablePrivileges, tableColumnPrivilegeForGrantDBAccountPrivilegeInput.tablePrivileges);
  }

  @Override
  public int hashCode() {
    return Objects.hash(columnPrivileges, dbName, tablePrivileges);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TableColumnPrivilegeForGrantDBAccountPrivilegeInput {\n");
    
    sb.append("    columnPrivileges: ").append(toIndentedString(columnPrivileges)).append("\n");
    sb.append("    dbName: ").append(toIndentedString(dbName)).append("\n");
    sb.append("    tablePrivileges: ").append(toIndentedString(tablePrivileges)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
