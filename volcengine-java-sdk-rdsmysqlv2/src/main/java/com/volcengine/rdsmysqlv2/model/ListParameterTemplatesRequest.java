/*
 * rds_mysql_v2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.rdsmysqlv2.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListParameterTemplatesRequest
 */



public class ListParameterTemplatesRequest {
  @SerializedName("Limit")
  private Integer limit = null;

  @SerializedName("Offset")
  private Integer offset = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("TemplateCategory")
  private String templateCategory = null;

  @SerializedName("TemplateName")
  private String templateName = null;

  @SerializedName("TemplateSource")
  private String templateSource = null;

  @SerializedName("TemplateType")
  private String templateType = null;

  @SerializedName("TemplateTypeVersion")
  private String templateTypeVersion = null;

  public ListParameterTemplatesRequest limit(Integer limit) {
    this.limit = limit;
    return this;
  }

   /**
   * Get limit
   * @return limit
  **/
  @Schema(description = "")
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }

  public ListParameterTemplatesRequest offset(Integer offset) {
    this.offset = offset;
    return this;
  }

   /**
   * Get offset
   * @return offset
  **/
  @Schema(description = "")
  public Integer getOffset() {
    return offset;
  }

  public void setOffset(Integer offset) {
    this.offset = offset;
  }

  public ListParameterTemplatesRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public ListParameterTemplatesRequest templateCategory(String templateCategory) {
    this.templateCategory = templateCategory;
    return this;
  }

   /**
   * Get templateCategory
   * @return templateCategory
  **/
  @Schema(description = "")
  public String getTemplateCategory() {
    return templateCategory;
  }

  public void setTemplateCategory(String templateCategory) {
    this.templateCategory = templateCategory;
  }

  public ListParameterTemplatesRequest templateName(String templateName) {
    this.templateName = templateName;
    return this;
  }

   /**
   * Get templateName
   * @return templateName
  **/
  @Schema(description = "")
  public String getTemplateName() {
    return templateName;
  }

  public void setTemplateName(String templateName) {
    this.templateName = templateName;
  }

  public ListParameterTemplatesRequest templateSource(String templateSource) {
    this.templateSource = templateSource;
    return this;
  }

   /**
   * Get templateSource
   * @return templateSource
  **/
  @Schema(description = "")
  public String getTemplateSource() {
    return templateSource;
  }

  public void setTemplateSource(String templateSource) {
    this.templateSource = templateSource;
  }

  public ListParameterTemplatesRequest templateType(String templateType) {
    this.templateType = templateType;
    return this;
  }

   /**
   * Get templateType
   * @return templateType
  **/
  @Schema(description = "")
  public String getTemplateType() {
    return templateType;
  }

  public void setTemplateType(String templateType) {
    this.templateType = templateType;
  }

  public ListParameterTemplatesRequest templateTypeVersion(String templateTypeVersion) {
    this.templateTypeVersion = templateTypeVersion;
    return this;
  }

   /**
   * Get templateTypeVersion
   * @return templateTypeVersion
  **/
  @Schema(description = "")
  public String getTemplateTypeVersion() {
    return templateTypeVersion;
  }

  public void setTemplateTypeVersion(String templateTypeVersion) {
    this.templateTypeVersion = templateTypeVersion;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListParameterTemplatesRequest listParameterTemplatesRequest = (ListParameterTemplatesRequest) o;
    return Objects.equals(this.limit, listParameterTemplatesRequest.limit) &&
        Objects.equals(this.offset, listParameterTemplatesRequest.offset) &&
        Objects.equals(this.projectName, listParameterTemplatesRequest.projectName) &&
        Objects.equals(this.templateCategory, listParameterTemplatesRequest.templateCategory) &&
        Objects.equals(this.templateName, listParameterTemplatesRequest.templateName) &&
        Objects.equals(this.templateSource, listParameterTemplatesRequest.templateSource) &&
        Objects.equals(this.templateType, listParameterTemplatesRequest.templateType) &&
        Objects.equals(this.templateTypeVersion, listParameterTemplatesRequest.templateTypeVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(limit, offset, projectName, templateCategory, templateName, templateSource, templateType, templateTypeVersion);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListParameterTemplatesRequest {\n");
    
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    templateCategory: ").append(toIndentedString(templateCategory)).append("\n");
    sb.append("    templateName: ").append(toIndentedString(templateName)).append("\n");
    sb.append("    templateSource: ").append(toIndentedString(templateSource)).append("\n");
    sb.append("    templateType: ").append(toIndentedString(templateType)).append("\n");
    sb.append("    templateTypeVersion: ").append(toIndentedString(templateTypeVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
