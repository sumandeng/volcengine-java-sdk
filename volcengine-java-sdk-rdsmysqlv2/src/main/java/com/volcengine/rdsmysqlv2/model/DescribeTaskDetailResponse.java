/*
 * rds_mysql_v2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.rdsmysqlv2.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.rdsmysqlv2.model.CheckItemForDescribeTaskDetailOutput;
import com.volcengine.rdsmysqlv2.model.TaskInfoForDescribeTaskDetailOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeTaskDetailResponse
 */



public class DescribeTaskDetailResponse extends com.volcengine.model.AbstractResponse {
  @SerializedName("CheckItemLog")
  private String checkItemLog = null;

  @SerializedName("CheckItems")
  private List<CheckItemForDescribeTaskDetailOutput> checkItems = null;

  @SerializedName("TaskInfo")
  private TaskInfoForDescribeTaskDetailOutput taskInfo = null;

  public DescribeTaskDetailResponse checkItemLog(String checkItemLog) {
    this.checkItemLog = checkItemLog;
    return this;
  }

   /**
   * Get checkItemLog
   * @return checkItemLog
  **/
  @Schema(description = "")
  public String getCheckItemLog() {
    return checkItemLog;
  }

  public void setCheckItemLog(String checkItemLog) {
    this.checkItemLog = checkItemLog;
  }

  public DescribeTaskDetailResponse checkItems(List<CheckItemForDescribeTaskDetailOutput> checkItems) {
    this.checkItems = checkItems;
    return this;
  }

  public DescribeTaskDetailResponse addCheckItemsItem(CheckItemForDescribeTaskDetailOutput checkItemsItem) {
    if (this.checkItems == null) {
      this.checkItems = new ArrayList<CheckItemForDescribeTaskDetailOutput>();
    }
    this.checkItems.add(checkItemsItem);
    return this;
  }

   /**
   * Get checkItems
   * @return checkItems
  **/
  @Valid
  @Schema(description = "")
  public List<CheckItemForDescribeTaskDetailOutput> getCheckItems() {
    return checkItems;
  }

  public void setCheckItems(List<CheckItemForDescribeTaskDetailOutput> checkItems) {
    this.checkItems = checkItems;
  }

  public DescribeTaskDetailResponse taskInfo(TaskInfoForDescribeTaskDetailOutput taskInfo) {
    this.taskInfo = taskInfo;
    return this;
  }

   /**
   * Get taskInfo
   * @return taskInfo
  **/
  @Valid
  @Schema(description = "")
  public TaskInfoForDescribeTaskDetailOutput getTaskInfo() {
    return taskInfo;
  }

  public void setTaskInfo(TaskInfoForDescribeTaskDetailOutput taskInfo) {
    this.taskInfo = taskInfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeTaskDetailResponse describeTaskDetailResponse = (DescribeTaskDetailResponse) o;
    return Objects.equals(this.checkItemLog, describeTaskDetailResponse.checkItemLog) &&
        Objects.equals(this.checkItems, describeTaskDetailResponse.checkItems) &&
        Objects.equals(this.taskInfo, describeTaskDetailResponse.taskInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(checkItemLog, checkItems, taskInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeTaskDetailResponse {\n");
    
    sb.append("    checkItemLog: ").append(toIndentedString(checkItemLog)).append("\n");
    sb.append("    checkItems: ").append(toIndentedString(checkItems)).append("\n");
    sb.append("    taskInfo: ").append(toIndentedString(taskInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
