/*
 * rds_mysql_v2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.rdsmysqlv2.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeDBInstanceSpecsRequest
 */



public class DescribeDBInstanceSpecsRequest {
  @SerializedName("DBEngineVersion")
  private String dbEngineVersion = null;

  @SerializedName("InstanceType")
  private String instanceType = null;

  @SerializedName("SpecCode")
  private String specCode = null;

  @SerializedName("SpecFamily")
  private String specFamily = null;

  @SerializedName("StorageType")
  private String storageType = null;

  @SerializedName("ZoneId")
  private String zoneId = null;

  public DescribeDBInstanceSpecsRequest dbEngineVersion(String dbEngineVersion) {
    this.dbEngineVersion = dbEngineVersion;
    return this;
  }

   /**
   * Get dbEngineVersion
   * @return dbEngineVersion
  **/
  @Schema(description = "")
  public String getDbEngineVersion() {
    return dbEngineVersion;
  }

  public void setDbEngineVersion(String dbEngineVersion) {
    this.dbEngineVersion = dbEngineVersion;
  }

  public DescribeDBInstanceSpecsRequest instanceType(String instanceType) {
    this.instanceType = instanceType;
    return this;
  }

   /**
   * Get instanceType
   * @return instanceType
  **/
  @Schema(description = "")
  public String getInstanceType() {
    return instanceType;
  }

  public void setInstanceType(String instanceType) {
    this.instanceType = instanceType;
  }

  public DescribeDBInstanceSpecsRequest specCode(String specCode) {
    this.specCode = specCode;
    return this;
  }

   /**
   * Get specCode
   * @return specCode
  **/
  @Schema(description = "")
  public String getSpecCode() {
    return specCode;
  }

  public void setSpecCode(String specCode) {
    this.specCode = specCode;
  }

  public DescribeDBInstanceSpecsRequest specFamily(String specFamily) {
    this.specFamily = specFamily;
    return this;
  }

   /**
   * Get specFamily
   * @return specFamily
  **/
  @Schema(description = "")
  public String getSpecFamily() {
    return specFamily;
  }

  public void setSpecFamily(String specFamily) {
    this.specFamily = specFamily;
  }

  public DescribeDBInstanceSpecsRequest storageType(String storageType) {
    this.storageType = storageType;
    return this;
  }

   /**
   * Get storageType
   * @return storageType
  **/
  @Schema(description = "")
  public String getStorageType() {
    return storageType;
  }

  public void setStorageType(String storageType) {
    this.storageType = storageType;
  }

  public DescribeDBInstanceSpecsRequest zoneId(String zoneId) {
    this.zoneId = zoneId;
    return this;
  }

   /**
   * Get zoneId
   * @return zoneId
  **/
  @Schema(description = "")
  public String getZoneId() {
    return zoneId;
  }

  public void setZoneId(String zoneId) {
    this.zoneId = zoneId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeDBInstanceSpecsRequest describeDBInstanceSpecsRequest = (DescribeDBInstanceSpecsRequest) o;
    return Objects.equals(this.dbEngineVersion, describeDBInstanceSpecsRequest.dbEngineVersion) &&
        Objects.equals(this.instanceType, describeDBInstanceSpecsRequest.instanceType) &&
        Objects.equals(this.specCode, describeDBInstanceSpecsRequest.specCode) &&
        Objects.equals(this.specFamily, describeDBInstanceSpecsRequest.specFamily) &&
        Objects.equals(this.storageType, describeDBInstanceSpecsRequest.storageType) &&
        Objects.equals(this.zoneId, describeDBInstanceSpecsRequest.zoneId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dbEngineVersion, instanceType, specCode, specFamily, storageType, zoneId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeDBInstanceSpecsRequest {\n");
    
    sb.append("    dbEngineVersion: ").append(toIndentedString(dbEngineVersion)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    specCode: ").append(toIndentedString(specCode)).append("\n");
    sb.append("    specFamily: ").append(toIndentedString(specFamily)).append("\n");
    sb.append("    storageType: ").append(toIndentedString(storageType)).append("\n");
    sb.append("    zoneId: ").append(toIndentedString(zoneId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
