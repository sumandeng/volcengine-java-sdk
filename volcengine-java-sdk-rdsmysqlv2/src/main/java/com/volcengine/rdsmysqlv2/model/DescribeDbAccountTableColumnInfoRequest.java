/*
 * rds_mysql_v2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.rdsmysqlv2.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeDbAccountTableColumnInfoRequest
 */



public class DescribeDbAccountTableColumnInfoRequest {
  @SerializedName("AccountName")
  private String accountName = null;

  @SerializedName("ColumnName")
  private String columnName = null;

  @SerializedName("DBName")
  private String dbName = null;

  @SerializedName("Host")
  private String host = null;

  @SerializedName("InstanceId")
  private String instanceId = null;

  @SerializedName("TableLimit")
  private Integer tableLimit = null;

  @SerializedName("TableName")
  private String tableName = null;

  public DescribeDbAccountTableColumnInfoRequest accountName(String accountName) {
    this.accountName = accountName;
    return this;
  }

   /**
   * Get accountName
   * @return accountName
  **/
  @Schema(description = "")
  public String getAccountName() {
    return accountName;
  }

  public void setAccountName(String accountName) {
    this.accountName = accountName;
  }

  public DescribeDbAccountTableColumnInfoRequest columnName(String columnName) {
    this.columnName = columnName;
    return this;
  }

   /**
   * Get columnName
   * @return columnName
  **/
  @Schema(description = "")
  public String getColumnName() {
    return columnName;
  }

  public void setColumnName(String columnName) {
    this.columnName = columnName;
  }

  public DescribeDbAccountTableColumnInfoRequest dbName(String dbName) {
    this.dbName = dbName;
    return this;
  }

   /**
   * Get dbName
   * @return dbName
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getDbName() {
    return dbName;
  }

  public void setDbName(String dbName) {
    this.dbName = dbName;
  }

  public DescribeDbAccountTableColumnInfoRequest host(String host) {
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @Schema(description = "")
  public String getHost() {
    return host;
  }

  public void setHost(String host) {
    this.host = host;
  }

  public DescribeDbAccountTableColumnInfoRequest instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public DescribeDbAccountTableColumnInfoRequest tableLimit(Integer tableLimit) {
    this.tableLimit = tableLimit;
    return this;
  }

   /**
   * Get tableLimit
   * @return tableLimit
  **/
  @Schema(description = "")
  public Integer getTableLimit() {
    return tableLimit;
  }

  public void setTableLimit(Integer tableLimit) {
    this.tableLimit = tableLimit;
  }

  public DescribeDbAccountTableColumnInfoRequest tableName(String tableName) {
    this.tableName = tableName;
    return this;
  }

   /**
   * Get tableName
   * @return tableName
  **/
  @Schema(description = "")
  public String getTableName() {
    return tableName;
  }

  public void setTableName(String tableName) {
    this.tableName = tableName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeDbAccountTableColumnInfoRequest describeDbAccountTableColumnInfoRequest = (DescribeDbAccountTableColumnInfoRequest) o;
    return Objects.equals(this.accountName, describeDbAccountTableColumnInfoRequest.accountName) &&
        Objects.equals(this.columnName, describeDbAccountTableColumnInfoRequest.columnName) &&
        Objects.equals(this.dbName, describeDbAccountTableColumnInfoRequest.dbName) &&
        Objects.equals(this.host, describeDbAccountTableColumnInfoRequest.host) &&
        Objects.equals(this.instanceId, describeDbAccountTableColumnInfoRequest.instanceId) &&
        Objects.equals(this.tableLimit, describeDbAccountTableColumnInfoRequest.tableLimit) &&
        Objects.equals(this.tableName, describeDbAccountTableColumnInfoRequest.tableName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountName, columnName, dbName, host, instanceId, tableLimit, tableName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeDbAccountTableColumnInfoRequest {\n");
    
    sb.append("    accountName: ").append(toIndentedString(accountName)).append("\n");
    sb.append("    columnName: ").append(toIndentedString(columnName)).append("\n");
    sb.append("    dbName: ").append(toIndentedString(dbName)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    tableLimit: ").append(toIndentedString(tableLimit)).append("\n");
    sb.append("    tableName: ").append(toIndentedString(tableName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
