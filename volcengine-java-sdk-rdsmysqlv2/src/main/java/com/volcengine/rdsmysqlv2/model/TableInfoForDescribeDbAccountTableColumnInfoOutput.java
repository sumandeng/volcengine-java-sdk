/*
 * rds_mysql_v2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.rdsmysqlv2.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.rdsmysqlv2.model.ColumnInfoForDescribeDbAccountTableColumnInfoOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * TableInfoForDescribeDbAccountTableColumnInfoOutput
 */



public class TableInfoForDescribeDbAccountTableColumnInfoOutput {
  @SerializedName("AccountPrivileges")
  private List<String> accountPrivileges = null;

  @SerializedName("ColumnInfos")
  private List<ColumnInfoForDescribeDbAccountTableColumnInfoOutput> columnInfos = null;

  @SerializedName("TableName")
  private String tableName = null;

  public TableInfoForDescribeDbAccountTableColumnInfoOutput accountPrivileges(List<String> accountPrivileges) {
    this.accountPrivileges = accountPrivileges;
    return this;
  }

  public TableInfoForDescribeDbAccountTableColumnInfoOutput addAccountPrivilegesItem(String accountPrivilegesItem) {
    if (this.accountPrivileges == null) {
      this.accountPrivileges = new ArrayList<String>();
    }
    this.accountPrivileges.add(accountPrivilegesItem);
    return this;
  }

   /**
   * Get accountPrivileges
   * @return accountPrivileges
  **/
  @Schema(description = "")
  public List<String> getAccountPrivileges() {
    return accountPrivileges;
  }

  public void setAccountPrivileges(List<String> accountPrivileges) {
    this.accountPrivileges = accountPrivileges;
  }

  public TableInfoForDescribeDbAccountTableColumnInfoOutput columnInfos(List<ColumnInfoForDescribeDbAccountTableColumnInfoOutput> columnInfos) {
    this.columnInfos = columnInfos;
    return this;
  }

  public TableInfoForDescribeDbAccountTableColumnInfoOutput addColumnInfosItem(ColumnInfoForDescribeDbAccountTableColumnInfoOutput columnInfosItem) {
    if (this.columnInfos == null) {
      this.columnInfos = new ArrayList<ColumnInfoForDescribeDbAccountTableColumnInfoOutput>();
    }
    this.columnInfos.add(columnInfosItem);
    return this;
  }

   /**
   * Get columnInfos
   * @return columnInfos
  **/
  @Valid
  @Schema(description = "")
  public List<ColumnInfoForDescribeDbAccountTableColumnInfoOutput> getColumnInfos() {
    return columnInfos;
  }

  public void setColumnInfos(List<ColumnInfoForDescribeDbAccountTableColumnInfoOutput> columnInfos) {
    this.columnInfos = columnInfos;
  }

  public TableInfoForDescribeDbAccountTableColumnInfoOutput tableName(String tableName) {
    this.tableName = tableName;
    return this;
  }

   /**
   * Get tableName
   * @return tableName
  **/
  @Schema(description = "")
  public String getTableName() {
    return tableName;
  }

  public void setTableName(String tableName) {
    this.tableName = tableName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TableInfoForDescribeDbAccountTableColumnInfoOutput tableInfoForDescribeDbAccountTableColumnInfoOutput = (TableInfoForDescribeDbAccountTableColumnInfoOutput) o;
    return Objects.equals(this.accountPrivileges, tableInfoForDescribeDbAccountTableColumnInfoOutput.accountPrivileges) &&
        Objects.equals(this.columnInfos, tableInfoForDescribeDbAccountTableColumnInfoOutput.columnInfos) &&
        Objects.equals(this.tableName, tableInfoForDescribeDbAccountTableColumnInfoOutput.tableName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountPrivileges, columnInfos, tableName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TableInfoForDescribeDbAccountTableColumnInfoOutput {\n");
    
    sb.append("    accountPrivileges: ").append(toIndentedString(accountPrivileges)).append("\n");
    sb.append("    columnInfos: ").append(toIndentedString(columnInfos)).append("\n");
    sb.append("    tableName: ").append(toIndentedString(tableName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
