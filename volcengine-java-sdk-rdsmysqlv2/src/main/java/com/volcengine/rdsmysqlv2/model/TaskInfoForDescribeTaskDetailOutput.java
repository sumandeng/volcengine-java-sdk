/*
 * rds_mysql_v2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.rdsmysqlv2.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.rdsmysqlv2.model.RelatedInstanceInfosForDescribeTaskDetailOutput;
import com.volcengine.rdsmysqlv2.model.TaskProgressForDescribeTaskDetailOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * TaskInfoForDescribeTaskDetailOutput
 */



public class TaskInfoForDescribeTaskDetailOutput {
  @SerializedName("CostTimeMS")
  private Long costTimeMS = null;

  @SerializedName("CreateTime")
  private String createTime = null;

  @SerializedName("FinishTime")
  private String finishTime = null;

  @SerializedName("OriginConfig")
  private String originConfig = null;

  @SerializedName("Progress")
  private Integer progress = null;

  @SerializedName("RelatedInstanceInfos")
  private RelatedInstanceInfosForDescribeTaskDetailOutput relatedInstanceInfos = null;

  @SerializedName("ScheduledExecuteEndTime")
  private String scheduledExecuteEndTime = null;

  @SerializedName("ScheduledExecuteStartTime")
  private String scheduledExecuteStartTime = null;

  @SerializedName("ScheduledSwitchEndTime")
  private String scheduledSwitchEndTime = null;

  @SerializedName("ScheduledSwitchStartTime")
  private String scheduledSwitchStartTime = null;

  @SerializedName("StartTime")
  private String startTime = null;

  @SerializedName("TaskAction")
  private String taskAction = null;

  @SerializedName("TaskCategory")
  private String taskCategory = null;

  @SerializedName("TaskDesc")
  private String taskDesc = null;

  @SerializedName("TaskId")
  private String taskId = null;

  @SerializedName("TaskParams")
  private String taskParams = null;

  @SerializedName("TaskProgress")
  private List<TaskProgressForDescribeTaskDetailOutput> taskProgress = null;

  @SerializedName("TaskSource")
  private String taskSource = null;

  @SerializedName("TaskStatus")
  private String taskStatus = null;

  public TaskInfoForDescribeTaskDetailOutput costTimeMS(Long costTimeMS) {
    this.costTimeMS = costTimeMS;
    return this;
  }

   /**
   * Get costTimeMS
   * @return costTimeMS
  **/
  @Schema(description = "")
  public Long getCostTimeMS() {
    return costTimeMS;
  }

  public void setCostTimeMS(Long costTimeMS) {
    this.costTimeMS = costTimeMS;
  }

  public TaskInfoForDescribeTaskDetailOutput createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }

  public TaskInfoForDescribeTaskDetailOutput finishTime(String finishTime) {
    this.finishTime = finishTime;
    return this;
  }

   /**
   * Get finishTime
   * @return finishTime
  **/
  @Schema(description = "")
  public String getFinishTime() {
    return finishTime;
  }

  public void setFinishTime(String finishTime) {
    this.finishTime = finishTime;
  }

  public TaskInfoForDescribeTaskDetailOutput originConfig(String originConfig) {
    this.originConfig = originConfig;
    return this;
  }

   /**
   * Get originConfig
   * @return originConfig
  **/
  @Schema(description = "")
  public String getOriginConfig() {
    return originConfig;
  }

  public void setOriginConfig(String originConfig) {
    this.originConfig = originConfig;
  }

  public TaskInfoForDescribeTaskDetailOutput progress(Integer progress) {
    this.progress = progress;
    return this;
  }

   /**
   * Get progress
   * @return progress
  **/
  @Schema(description = "")
  public Integer getProgress() {
    return progress;
  }

  public void setProgress(Integer progress) {
    this.progress = progress;
  }

  public TaskInfoForDescribeTaskDetailOutput relatedInstanceInfos(RelatedInstanceInfosForDescribeTaskDetailOutput relatedInstanceInfos) {
    this.relatedInstanceInfos = relatedInstanceInfos;
    return this;
  }

   /**
   * Get relatedInstanceInfos
   * @return relatedInstanceInfos
  **/
  @Valid
  @Schema(description = "")
  public RelatedInstanceInfosForDescribeTaskDetailOutput getRelatedInstanceInfos() {
    return relatedInstanceInfos;
  }

  public void setRelatedInstanceInfos(RelatedInstanceInfosForDescribeTaskDetailOutput relatedInstanceInfos) {
    this.relatedInstanceInfos = relatedInstanceInfos;
  }

  public TaskInfoForDescribeTaskDetailOutput scheduledExecuteEndTime(String scheduledExecuteEndTime) {
    this.scheduledExecuteEndTime = scheduledExecuteEndTime;
    return this;
  }

   /**
   * Get scheduledExecuteEndTime
   * @return scheduledExecuteEndTime
  **/
  @Schema(description = "")
  public String getScheduledExecuteEndTime() {
    return scheduledExecuteEndTime;
  }

  public void setScheduledExecuteEndTime(String scheduledExecuteEndTime) {
    this.scheduledExecuteEndTime = scheduledExecuteEndTime;
  }

  public TaskInfoForDescribeTaskDetailOutput scheduledExecuteStartTime(String scheduledExecuteStartTime) {
    this.scheduledExecuteStartTime = scheduledExecuteStartTime;
    return this;
  }

   /**
   * Get scheduledExecuteStartTime
   * @return scheduledExecuteStartTime
  **/
  @Schema(description = "")
  public String getScheduledExecuteStartTime() {
    return scheduledExecuteStartTime;
  }

  public void setScheduledExecuteStartTime(String scheduledExecuteStartTime) {
    this.scheduledExecuteStartTime = scheduledExecuteStartTime;
  }

  public TaskInfoForDescribeTaskDetailOutput scheduledSwitchEndTime(String scheduledSwitchEndTime) {
    this.scheduledSwitchEndTime = scheduledSwitchEndTime;
    return this;
  }

   /**
   * Get scheduledSwitchEndTime
   * @return scheduledSwitchEndTime
  **/
  @Schema(description = "")
  public String getScheduledSwitchEndTime() {
    return scheduledSwitchEndTime;
  }

  public void setScheduledSwitchEndTime(String scheduledSwitchEndTime) {
    this.scheduledSwitchEndTime = scheduledSwitchEndTime;
  }

  public TaskInfoForDescribeTaskDetailOutput scheduledSwitchStartTime(String scheduledSwitchStartTime) {
    this.scheduledSwitchStartTime = scheduledSwitchStartTime;
    return this;
  }

   /**
   * Get scheduledSwitchStartTime
   * @return scheduledSwitchStartTime
  **/
  @Schema(description = "")
  public String getScheduledSwitchStartTime() {
    return scheduledSwitchStartTime;
  }

  public void setScheduledSwitchStartTime(String scheduledSwitchStartTime) {
    this.scheduledSwitchStartTime = scheduledSwitchStartTime;
  }

  public TaskInfoForDescribeTaskDetailOutput startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @Schema(description = "")
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }

  public TaskInfoForDescribeTaskDetailOutput taskAction(String taskAction) {
    this.taskAction = taskAction;
    return this;
  }

   /**
   * Get taskAction
   * @return taskAction
  **/
  @Schema(description = "")
  public String getTaskAction() {
    return taskAction;
  }

  public void setTaskAction(String taskAction) {
    this.taskAction = taskAction;
  }

  public TaskInfoForDescribeTaskDetailOutput taskCategory(String taskCategory) {
    this.taskCategory = taskCategory;
    return this;
  }

   /**
   * Get taskCategory
   * @return taskCategory
  **/
  @Schema(description = "")
  public String getTaskCategory() {
    return taskCategory;
  }

  public void setTaskCategory(String taskCategory) {
    this.taskCategory = taskCategory;
  }

  public TaskInfoForDescribeTaskDetailOutput taskDesc(String taskDesc) {
    this.taskDesc = taskDesc;
    return this;
  }

   /**
   * Get taskDesc
   * @return taskDesc
  **/
  @Schema(description = "")
  public String getTaskDesc() {
    return taskDesc;
  }

  public void setTaskDesc(String taskDesc) {
    this.taskDesc = taskDesc;
  }

  public TaskInfoForDescribeTaskDetailOutput taskId(String taskId) {
    this.taskId = taskId;
    return this;
  }

   /**
   * Get taskId
   * @return taskId
  **/
  @Schema(description = "")
  public String getTaskId() {
    return taskId;
  }

  public void setTaskId(String taskId) {
    this.taskId = taskId;
  }

  public TaskInfoForDescribeTaskDetailOutput taskParams(String taskParams) {
    this.taskParams = taskParams;
    return this;
  }

   /**
   * Get taskParams
   * @return taskParams
  **/
  @Schema(description = "")
  public String getTaskParams() {
    return taskParams;
  }

  public void setTaskParams(String taskParams) {
    this.taskParams = taskParams;
  }

  public TaskInfoForDescribeTaskDetailOutput taskProgress(List<TaskProgressForDescribeTaskDetailOutput> taskProgress) {
    this.taskProgress = taskProgress;
    return this;
  }

  public TaskInfoForDescribeTaskDetailOutput addTaskProgressItem(TaskProgressForDescribeTaskDetailOutput taskProgressItem) {
    if (this.taskProgress == null) {
      this.taskProgress = new ArrayList<TaskProgressForDescribeTaskDetailOutput>();
    }
    this.taskProgress.add(taskProgressItem);
    return this;
  }

   /**
   * Get taskProgress
   * @return taskProgress
  **/
  @Valid
  @Schema(description = "")
  public List<TaskProgressForDescribeTaskDetailOutput> getTaskProgress() {
    return taskProgress;
  }

  public void setTaskProgress(List<TaskProgressForDescribeTaskDetailOutput> taskProgress) {
    this.taskProgress = taskProgress;
  }

  public TaskInfoForDescribeTaskDetailOutput taskSource(String taskSource) {
    this.taskSource = taskSource;
    return this;
  }

   /**
   * Get taskSource
   * @return taskSource
  **/
  @Schema(description = "")
  public String getTaskSource() {
    return taskSource;
  }

  public void setTaskSource(String taskSource) {
    this.taskSource = taskSource;
  }

  public TaskInfoForDescribeTaskDetailOutput taskStatus(String taskStatus) {
    this.taskStatus = taskStatus;
    return this;
  }

   /**
   * Get taskStatus
   * @return taskStatus
  **/
  @Schema(description = "")
  public String getTaskStatus() {
    return taskStatus;
  }

  public void setTaskStatus(String taskStatus) {
    this.taskStatus = taskStatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskInfoForDescribeTaskDetailOutput taskInfoForDescribeTaskDetailOutput = (TaskInfoForDescribeTaskDetailOutput) o;
    return Objects.equals(this.costTimeMS, taskInfoForDescribeTaskDetailOutput.costTimeMS) &&
        Objects.equals(this.createTime, taskInfoForDescribeTaskDetailOutput.createTime) &&
        Objects.equals(this.finishTime, taskInfoForDescribeTaskDetailOutput.finishTime) &&
        Objects.equals(this.originConfig, taskInfoForDescribeTaskDetailOutput.originConfig) &&
        Objects.equals(this.progress, taskInfoForDescribeTaskDetailOutput.progress) &&
        Objects.equals(this.relatedInstanceInfos, taskInfoForDescribeTaskDetailOutput.relatedInstanceInfos) &&
        Objects.equals(this.scheduledExecuteEndTime, taskInfoForDescribeTaskDetailOutput.scheduledExecuteEndTime) &&
        Objects.equals(this.scheduledExecuteStartTime, taskInfoForDescribeTaskDetailOutput.scheduledExecuteStartTime) &&
        Objects.equals(this.scheduledSwitchEndTime, taskInfoForDescribeTaskDetailOutput.scheduledSwitchEndTime) &&
        Objects.equals(this.scheduledSwitchStartTime, taskInfoForDescribeTaskDetailOutput.scheduledSwitchStartTime) &&
        Objects.equals(this.startTime, taskInfoForDescribeTaskDetailOutput.startTime) &&
        Objects.equals(this.taskAction, taskInfoForDescribeTaskDetailOutput.taskAction) &&
        Objects.equals(this.taskCategory, taskInfoForDescribeTaskDetailOutput.taskCategory) &&
        Objects.equals(this.taskDesc, taskInfoForDescribeTaskDetailOutput.taskDesc) &&
        Objects.equals(this.taskId, taskInfoForDescribeTaskDetailOutput.taskId) &&
        Objects.equals(this.taskParams, taskInfoForDescribeTaskDetailOutput.taskParams) &&
        Objects.equals(this.taskProgress, taskInfoForDescribeTaskDetailOutput.taskProgress) &&
        Objects.equals(this.taskSource, taskInfoForDescribeTaskDetailOutput.taskSource) &&
        Objects.equals(this.taskStatus, taskInfoForDescribeTaskDetailOutput.taskStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(costTimeMS, createTime, finishTime, originConfig, progress, relatedInstanceInfos, scheduledExecuteEndTime, scheduledExecuteStartTime, scheduledSwitchEndTime, scheduledSwitchStartTime, startTime, taskAction, taskCategory, taskDesc, taskId, taskParams, taskProgress, taskSource, taskStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskInfoForDescribeTaskDetailOutput {\n");
    
    sb.append("    costTimeMS: ").append(toIndentedString(costTimeMS)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    finishTime: ").append(toIndentedString(finishTime)).append("\n");
    sb.append("    originConfig: ").append(toIndentedString(originConfig)).append("\n");
    sb.append("    progress: ").append(toIndentedString(progress)).append("\n");
    sb.append("    relatedInstanceInfos: ").append(toIndentedString(relatedInstanceInfos)).append("\n");
    sb.append("    scheduledExecuteEndTime: ").append(toIndentedString(scheduledExecuteEndTime)).append("\n");
    sb.append("    scheduledExecuteStartTime: ").append(toIndentedString(scheduledExecuteStartTime)).append("\n");
    sb.append("    scheduledSwitchEndTime: ").append(toIndentedString(scheduledSwitchEndTime)).append("\n");
    sb.append("    scheduledSwitchStartTime: ").append(toIndentedString(scheduledSwitchStartTime)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    taskAction: ").append(toIndentedString(taskAction)).append("\n");
    sb.append("    taskCategory: ").append(toIndentedString(taskCategory)).append("\n");
    sb.append("    taskDesc: ").append(toIndentedString(taskDesc)).append("\n");
    sb.append("    taskId: ").append(toIndentedString(taskId)).append("\n");
    sb.append("    taskParams: ").append(toIndentedString(taskParams)).append("\n");
    sb.append("    taskProgress: ").append(toIndentedString(taskProgress)).append("\n");
    sb.append("    taskSource: ").append(toIndentedString(taskSource)).append("\n");
    sb.append("    taskStatus: ").append(toIndentedString(taskStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
