/*
 * rds_mysql_v2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.rdsmysqlv2.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * NodeInfoForDescribeDBInstanceNodesOutput
 */



public class NodeInfoForDescribeDBInstanceNodesOutput {
  @SerializedName("CPUUsedPercentage")
  private Double cpUUsedPercentage = null;

  @SerializedName("LastIOError")
  private String lastIOError = null;

  @SerializedName("LastSQLError")
  private String lastSQLError = null;

  @SerializedName("MemoryUsedPercentage")
  private Double memoryUsedPercentage = null;

  @SerializedName("NodeId")
  private String nodeId = null;

  @SerializedName("NodeStatus")
  private String nodeStatus = null;

  @SerializedName("NodeType")
  private String nodeType = null;

  @SerializedName("SlaveIORunning")
  private Boolean slaveIORunning = null;

  @SerializedName("SlaveSQLRunning")
  private Boolean slaveSQLRunning = null;

  @SerializedName("SpaceUsedPercentage")
  private Double spaceUsedPercentage = null;

  @SerializedName("SyncDelay")
  private Integer syncDelay = null;

  @SerializedName("ZoneId")
  private String zoneId = null;

  public NodeInfoForDescribeDBInstanceNodesOutput cpUUsedPercentage(Double cpUUsedPercentage) {
    this.cpUUsedPercentage = cpUUsedPercentage;
    return this;
  }

   /**
   * Get cpUUsedPercentage
   * @return cpUUsedPercentage
  **/
  @Schema(description = "")
  public Double getCpUUsedPercentage() {
    return cpUUsedPercentage;
  }

  public void setCpUUsedPercentage(Double cpUUsedPercentage) {
    this.cpUUsedPercentage = cpUUsedPercentage;
  }

  public NodeInfoForDescribeDBInstanceNodesOutput lastIOError(String lastIOError) {
    this.lastIOError = lastIOError;
    return this;
  }

   /**
   * Get lastIOError
   * @return lastIOError
  **/
  @Schema(description = "")
  public String getLastIOError() {
    return lastIOError;
  }

  public void setLastIOError(String lastIOError) {
    this.lastIOError = lastIOError;
  }

  public NodeInfoForDescribeDBInstanceNodesOutput lastSQLError(String lastSQLError) {
    this.lastSQLError = lastSQLError;
    return this;
  }

   /**
   * Get lastSQLError
   * @return lastSQLError
  **/
  @Schema(description = "")
  public String getLastSQLError() {
    return lastSQLError;
  }

  public void setLastSQLError(String lastSQLError) {
    this.lastSQLError = lastSQLError;
  }

  public NodeInfoForDescribeDBInstanceNodesOutput memoryUsedPercentage(Double memoryUsedPercentage) {
    this.memoryUsedPercentage = memoryUsedPercentage;
    return this;
  }

   /**
   * Get memoryUsedPercentage
   * @return memoryUsedPercentage
  **/
  @Schema(description = "")
  public Double getMemoryUsedPercentage() {
    return memoryUsedPercentage;
  }

  public void setMemoryUsedPercentage(Double memoryUsedPercentage) {
    this.memoryUsedPercentage = memoryUsedPercentage;
  }

  public NodeInfoForDescribeDBInstanceNodesOutput nodeId(String nodeId) {
    this.nodeId = nodeId;
    return this;
  }

   /**
   * Get nodeId
   * @return nodeId
  **/
  @Schema(description = "")
  public String getNodeId() {
    return nodeId;
  }

  public void setNodeId(String nodeId) {
    this.nodeId = nodeId;
  }

  public NodeInfoForDescribeDBInstanceNodesOutput nodeStatus(String nodeStatus) {
    this.nodeStatus = nodeStatus;
    return this;
  }

   /**
   * Get nodeStatus
   * @return nodeStatus
  **/
  @Schema(description = "")
  public String getNodeStatus() {
    return nodeStatus;
  }

  public void setNodeStatus(String nodeStatus) {
    this.nodeStatus = nodeStatus;
  }

  public NodeInfoForDescribeDBInstanceNodesOutput nodeType(String nodeType) {
    this.nodeType = nodeType;
    return this;
  }

   /**
   * Get nodeType
   * @return nodeType
  **/
  @Schema(description = "")
  public String getNodeType() {
    return nodeType;
  }

  public void setNodeType(String nodeType) {
    this.nodeType = nodeType;
  }

  public NodeInfoForDescribeDBInstanceNodesOutput slaveIORunning(Boolean slaveIORunning) {
    this.slaveIORunning = slaveIORunning;
    return this;
  }

   /**
   * Get slaveIORunning
   * @return slaveIORunning
  **/
  @Schema(description = "")
  public Boolean isSlaveIORunning() {
    return slaveIORunning;
  }

  public void setSlaveIORunning(Boolean slaveIORunning) {
    this.slaveIORunning = slaveIORunning;
  }

  public NodeInfoForDescribeDBInstanceNodesOutput slaveSQLRunning(Boolean slaveSQLRunning) {
    this.slaveSQLRunning = slaveSQLRunning;
    return this;
  }

   /**
   * Get slaveSQLRunning
   * @return slaveSQLRunning
  **/
  @Schema(description = "")
  public Boolean isSlaveSQLRunning() {
    return slaveSQLRunning;
  }

  public void setSlaveSQLRunning(Boolean slaveSQLRunning) {
    this.slaveSQLRunning = slaveSQLRunning;
  }

  public NodeInfoForDescribeDBInstanceNodesOutput spaceUsedPercentage(Double spaceUsedPercentage) {
    this.spaceUsedPercentage = spaceUsedPercentage;
    return this;
  }

   /**
   * Get spaceUsedPercentage
   * @return spaceUsedPercentage
  **/
  @Schema(description = "")
  public Double getSpaceUsedPercentage() {
    return spaceUsedPercentage;
  }

  public void setSpaceUsedPercentage(Double spaceUsedPercentage) {
    this.spaceUsedPercentage = spaceUsedPercentage;
  }

  public NodeInfoForDescribeDBInstanceNodesOutput syncDelay(Integer syncDelay) {
    this.syncDelay = syncDelay;
    return this;
  }

   /**
   * Get syncDelay
   * @return syncDelay
  **/
  @Schema(description = "")
  public Integer getSyncDelay() {
    return syncDelay;
  }

  public void setSyncDelay(Integer syncDelay) {
    this.syncDelay = syncDelay;
  }

  public NodeInfoForDescribeDBInstanceNodesOutput zoneId(String zoneId) {
    this.zoneId = zoneId;
    return this;
  }

   /**
   * Get zoneId
   * @return zoneId
  **/
  @Schema(description = "")
  public String getZoneId() {
    return zoneId;
  }

  public void setZoneId(String zoneId) {
    this.zoneId = zoneId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NodeInfoForDescribeDBInstanceNodesOutput nodeInfoForDescribeDBInstanceNodesOutput = (NodeInfoForDescribeDBInstanceNodesOutput) o;
    return Objects.equals(this.cpUUsedPercentage, nodeInfoForDescribeDBInstanceNodesOutput.cpUUsedPercentage) &&
        Objects.equals(this.lastIOError, nodeInfoForDescribeDBInstanceNodesOutput.lastIOError) &&
        Objects.equals(this.lastSQLError, nodeInfoForDescribeDBInstanceNodesOutput.lastSQLError) &&
        Objects.equals(this.memoryUsedPercentage, nodeInfoForDescribeDBInstanceNodesOutput.memoryUsedPercentage) &&
        Objects.equals(this.nodeId, nodeInfoForDescribeDBInstanceNodesOutput.nodeId) &&
        Objects.equals(this.nodeStatus, nodeInfoForDescribeDBInstanceNodesOutput.nodeStatus) &&
        Objects.equals(this.nodeType, nodeInfoForDescribeDBInstanceNodesOutput.nodeType) &&
        Objects.equals(this.slaveIORunning, nodeInfoForDescribeDBInstanceNodesOutput.slaveIORunning) &&
        Objects.equals(this.slaveSQLRunning, nodeInfoForDescribeDBInstanceNodesOutput.slaveSQLRunning) &&
        Objects.equals(this.spaceUsedPercentage, nodeInfoForDescribeDBInstanceNodesOutput.spaceUsedPercentage) &&
        Objects.equals(this.syncDelay, nodeInfoForDescribeDBInstanceNodesOutput.syncDelay) &&
        Objects.equals(this.zoneId, nodeInfoForDescribeDBInstanceNodesOutput.zoneId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cpUUsedPercentage, lastIOError, lastSQLError, memoryUsedPercentage, nodeId, nodeStatus, nodeType, slaveIORunning, slaveSQLRunning, spaceUsedPercentage, syncDelay, zoneId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NodeInfoForDescribeDBInstanceNodesOutput {\n");
    
    sb.append("    cpUUsedPercentage: ").append(toIndentedString(cpUUsedPercentage)).append("\n");
    sb.append("    lastIOError: ").append(toIndentedString(lastIOError)).append("\n");
    sb.append("    lastSQLError: ").append(toIndentedString(lastSQLError)).append("\n");
    sb.append("    memoryUsedPercentage: ").append(toIndentedString(memoryUsedPercentage)).append("\n");
    sb.append("    nodeId: ").append(toIndentedString(nodeId)).append("\n");
    sb.append("    nodeStatus: ").append(toIndentedString(nodeStatus)).append("\n");
    sb.append("    nodeType: ").append(toIndentedString(nodeType)).append("\n");
    sb.append("    slaveIORunning: ").append(toIndentedString(slaveIORunning)).append("\n");
    sb.append("    slaveSQLRunning: ").append(toIndentedString(slaveSQLRunning)).append("\n");
    sb.append("    spaceUsedPercentage: ").append(toIndentedString(spaceUsedPercentage)).append("\n");
    sb.append("    syncDelay: ").append(toIndentedString(syncDelay)).append("\n");
    sb.append("    zoneId: ").append(toIndentedString(zoneId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
