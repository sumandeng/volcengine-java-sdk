/*
 * rds_mssql
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.rdsmssql.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * InstanceSpecInfoForDescribeDBInstanceSpecsOutput
 */



public class InstanceSpecInfoForDescribeDBInstanceSpecsOutput {
  @SerializedName("DBEngineVersion")
  private String dbEngineVersion = null;

  @SerializedName("Generation")
  private String generation = null;

  @SerializedName("InstanceType")
  private String instanceType = null;

  @SerializedName("Memory")
  private Integer memory = null;

  @SerializedName("SpecCode")
  private String specCode = null;

  @SerializedName("SpecFamily")
  private String specFamily = null;

  @SerializedName("SpecSaleType")
  private String specSaleType = null;

  @SerializedName("SpecStatus")
  private String specStatus = null;

  @SerializedName("VCPU")
  private Integer VCPU = null;

  @SerializedName("ZoneId")
  private String zoneId = null;

  public InstanceSpecInfoForDescribeDBInstanceSpecsOutput dbEngineVersion(String dbEngineVersion) {
    this.dbEngineVersion = dbEngineVersion;
    return this;
  }

   /**
   * Get dbEngineVersion
   * @return dbEngineVersion
  **/
  @Schema(description = "")
  public String getDbEngineVersion() {
    return dbEngineVersion;
  }

  public void setDbEngineVersion(String dbEngineVersion) {
    this.dbEngineVersion = dbEngineVersion;
  }

  public InstanceSpecInfoForDescribeDBInstanceSpecsOutput generation(String generation) {
    this.generation = generation;
    return this;
  }

   /**
   * Get generation
   * @return generation
  **/
  @Schema(description = "")
  public String getGeneration() {
    return generation;
  }

  public void setGeneration(String generation) {
    this.generation = generation;
  }

  public InstanceSpecInfoForDescribeDBInstanceSpecsOutput instanceType(String instanceType) {
    this.instanceType = instanceType;
    return this;
  }

   /**
   * Get instanceType
   * @return instanceType
  **/
  @Schema(description = "")
  public String getInstanceType() {
    return instanceType;
  }

  public void setInstanceType(String instanceType) {
    this.instanceType = instanceType;
  }

  public InstanceSpecInfoForDescribeDBInstanceSpecsOutput memory(Integer memory) {
    this.memory = memory;
    return this;
  }

   /**
   * Get memory
   * @return memory
  **/
  @Schema(description = "")
  public Integer getMemory() {
    return memory;
  }

  public void setMemory(Integer memory) {
    this.memory = memory;
  }

  public InstanceSpecInfoForDescribeDBInstanceSpecsOutput specCode(String specCode) {
    this.specCode = specCode;
    return this;
  }

   /**
   * Get specCode
   * @return specCode
  **/
  @Schema(description = "")
  public String getSpecCode() {
    return specCode;
  }

  public void setSpecCode(String specCode) {
    this.specCode = specCode;
  }

  public InstanceSpecInfoForDescribeDBInstanceSpecsOutput specFamily(String specFamily) {
    this.specFamily = specFamily;
    return this;
  }

   /**
   * Get specFamily
   * @return specFamily
  **/
  @Schema(description = "")
  public String getSpecFamily() {
    return specFamily;
  }

  public void setSpecFamily(String specFamily) {
    this.specFamily = specFamily;
  }

  public InstanceSpecInfoForDescribeDBInstanceSpecsOutput specSaleType(String specSaleType) {
    this.specSaleType = specSaleType;
    return this;
  }

   /**
   * Get specSaleType
   * @return specSaleType
  **/
  @Schema(description = "")
  public String getSpecSaleType() {
    return specSaleType;
  }

  public void setSpecSaleType(String specSaleType) {
    this.specSaleType = specSaleType;
  }

  public InstanceSpecInfoForDescribeDBInstanceSpecsOutput specStatus(String specStatus) {
    this.specStatus = specStatus;
    return this;
  }

   /**
   * Get specStatus
   * @return specStatus
  **/
  @Schema(description = "")
  public String getSpecStatus() {
    return specStatus;
  }

  public void setSpecStatus(String specStatus) {
    this.specStatus = specStatus;
  }

  public InstanceSpecInfoForDescribeDBInstanceSpecsOutput VCPU(Integer VCPU) {
    this.VCPU = VCPU;
    return this;
  }

   /**
   * Get VCPU
   * @return VCPU
  **/
  @Schema(description = "")
  public Integer getVCPU() {
    return VCPU;
  }

  public void setVCPU(Integer VCPU) {
    this.VCPU = VCPU;
  }

  public InstanceSpecInfoForDescribeDBInstanceSpecsOutput zoneId(String zoneId) {
    this.zoneId = zoneId;
    return this;
  }

   /**
   * Get zoneId
   * @return zoneId
  **/
  @Schema(description = "")
  public String getZoneId() {
    return zoneId;
  }

  public void setZoneId(String zoneId) {
    this.zoneId = zoneId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstanceSpecInfoForDescribeDBInstanceSpecsOutput instanceSpecInfoForDescribeDBInstanceSpecsOutput = (InstanceSpecInfoForDescribeDBInstanceSpecsOutput) o;
    return Objects.equals(this.dbEngineVersion, instanceSpecInfoForDescribeDBInstanceSpecsOutput.dbEngineVersion) &&
        Objects.equals(this.generation, instanceSpecInfoForDescribeDBInstanceSpecsOutput.generation) &&
        Objects.equals(this.instanceType, instanceSpecInfoForDescribeDBInstanceSpecsOutput.instanceType) &&
        Objects.equals(this.memory, instanceSpecInfoForDescribeDBInstanceSpecsOutput.memory) &&
        Objects.equals(this.specCode, instanceSpecInfoForDescribeDBInstanceSpecsOutput.specCode) &&
        Objects.equals(this.specFamily, instanceSpecInfoForDescribeDBInstanceSpecsOutput.specFamily) &&
        Objects.equals(this.specSaleType, instanceSpecInfoForDescribeDBInstanceSpecsOutput.specSaleType) &&
        Objects.equals(this.specStatus, instanceSpecInfoForDescribeDBInstanceSpecsOutput.specStatus) &&
        Objects.equals(this.VCPU, instanceSpecInfoForDescribeDBInstanceSpecsOutput.VCPU) &&
        Objects.equals(this.zoneId, instanceSpecInfoForDescribeDBInstanceSpecsOutput.zoneId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dbEngineVersion, generation, instanceType, memory, specCode, specFamily, specSaleType, specStatus, VCPU, zoneId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstanceSpecInfoForDescribeDBInstanceSpecsOutput {\n");
    
    sb.append("    dbEngineVersion: ").append(toIndentedString(dbEngineVersion)).append("\n");
    sb.append("    generation: ").append(toIndentedString(generation)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    memory: ").append(toIndentedString(memory)).append("\n");
    sb.append("    specCode: ").append(toIndentedString(specCode)).append("\n");
    sb.append("    specFamily: ").append(toIndentedString(specFamily)).append("\n");
    sb.append("    specSaleType: ").append(toIndentedString(specSaleType)).append("\n");
    sb.append("    specStatus: ").append(toIndentedString(specStatus)).append("\n");
    sb.append("    VCPU: ").append(toIndentedString(VCPU)).append("\n");
    sb.append("    zoneId: ").append(toIndentedString(zoneId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
