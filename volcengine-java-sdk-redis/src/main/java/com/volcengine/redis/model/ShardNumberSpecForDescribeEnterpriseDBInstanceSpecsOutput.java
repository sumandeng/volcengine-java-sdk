/*
 * redis
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.redis.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ShardNumberSpecForDescribeEnterpriseDBInstanceSpecsOutput
 */



public class ShardNumberSpecForDescribeEnterpriseDBInstanceSpecsOutput {
  @SerializedName("DefaultBandwidth")
  private Integer defaultBandwidth = null;

  @SerializedName("DefaultMaxConnections")
  private Integer defaultMaxConnections = null;

  @SerializedName("ShardNumber")
  private Integer shardNumber = null;

  public ShardNumberSpecForDescribeEnterpriseDBInstanceSpecsOutput defaultBandwidth(Integer defaultBandwidth) {
    this.defaultBandwidth = defaultBandwidth;
    return this;
  }

   /**
   * Get defaultBandwidth
   * @return defaultBandwidth
  **/
  @Schema(description = "")
  public Integer getDefaultBandwidth() {
    return defaultBandwidth;
  }

  public void setDefaultBandwidth(Integer defaultBandwidth) {
    this.defaultBandwidth = defaultBandwidth;
  }

  public ShardNumberSpecForDescribeEnterpriseDBInstanceSpecsOutput defaultMaxConnections(Integer defaultMaxConnections) {
    this.defaultMaxConnections = defaultMaxConnections;
    return this;
  }

   /**
   * Get defaultMaxConnections
   * @return defaultMaxConnections
  **/
  @Schema(description = "")
  public Integer getDefaultMaxConnections() {
    return defaultMaxConnections;
  }

  public void setDefaultMaxConnections(Integer defaultMaxConnections) {
    this.defaultMaxConnections = defaultMaxConnections;
  }

  public ShardNumberSpecForDescribeEnterpriseDBInstanceSpecsOutput shardNumber(Integer shardNumber) {
    this.shardNumber = shardNumber;
    return this;
  }

   /**
   * Get shardNumber
   * @return shardNumber
  **/
  @Schema(description = "")
  public Integer getShardNumber() {
    return shardNumber;
  }

  public void setShardNumber(Integer shardNumber) {
    this.shardNumber = shardNumber;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShardNumberSpecForDescribeEnterpriseDBInstanceSpecsOutput shardNumberSpecForDescribeEnterpriseDBInstanceSpecsOutput = (ShardNumberSpecForDescribeEnterpriseDBInstanceSpecsOutput) o;
    return Objects.equals(this.defaultBandwidth, shardNumberSpecForDescribeEnterpriseDBInstanceSpecsOutput.defaultBandwidth) &&
        Objects.equals(this.defaultMaxConnections, shardNumberSpecForDescribeEnterpriseDBInstanceSpecsOutput.defaultMaxConnections) &&
        Objects.equals(this.shardNumber, shardNumberSpecForDescribeEnterpriseDBInstanceSpecsOutput.shardNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultBandwidth, defaultMaxConnections, shardNumber);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShardNumberSpecForDescribeEnterpriseDBInstanceSpecsOutput {\n");
    
    sb.append("    defaultBandwidth: ").append(toIndentedString(defaultBandwidth)).append("\n");
    sb.append("    defaultMaxConnections: ").append(toIndentedString(defaultMaxConnections)).append("\n");
    sb.append("    shardNumber: ").append(toIndentedString(shardNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
