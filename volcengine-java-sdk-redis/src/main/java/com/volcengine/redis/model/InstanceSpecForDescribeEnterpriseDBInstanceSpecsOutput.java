/*
 * redis
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.redis.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.redis.model.ShardNumberSpecForDescribeEnterpriseDBInstanceSpecsOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * InstanceSpecForDescribeEnterpriseDBInstanceSpecsOutput
 */



public class InstanceSpecForDescribeEnterpriseDBInstanceSpecsOutput {
  @SerializedName("DataLayout")
  private String dataLayout = null;

  @SerializedName("FlashCapacityMax")
  private Integer flashCapacityMax = null;

  @SerializedName("FlashCapacityMin")
  private Integer flashCapacityMin = null;

  @SerializedName("FlashCapacityStep")
  private Integer flashCapacityStep = null;

  @SerializedName("RamCapacity")
  private Integer ramCapacity = null;

  @SerializedName("ShardNumberSpecs")
  private List<ShardNumberSpecForDescribeEnterpriseDBInstanceSpecsOutput> shardNumberSpecs = null;

  public InstanceSpecForDescribeEnterpriseDBInstanceSpecsOutput dataLayout(String dataLayout) {
    this.dataLayout = dataLayout;
    return this;
  }

   /**
   * Get dataLayout
   * @return dataLayout
  **/
  @Schema(description = "")
  public String getDataLayout() {
    return dataLayout;
  }

  public void setDataLayout(String dataLayout) {
    this.dataLayout = dataLayout;
  }

  public InstanceSpecForDescribeEnterpriseDBInstanceSpecsOutput flashCapacityMax(Integer flashCapacityMax) {
    this.flashCapacityMax = flashCapacityMax;
    return this;
  }

   /**
   * Get flashCapacityMax
   * @return flashCapacityMax
  **/
  @Schema(description = "")
  public Integer getFlashCapacityMax() {
    return flashCapacityMax;
  }

  public void setFlashCapacityMax(Integer flashCapacityMax) {
    this.flashCapacityMax = flashCapacityMax;
  }

  public InstanceSpecForDescribeEnterpriseDBInstanceSpecsOutput flashCapacityMin(Integer flashCapacityMin) {
    this.flashCapacityMin = flashCapacityMin;
    return this;
  }

   /**
   * Get flashCapacityMin
   * @return flashCapacityMin
  **/
  @Schema(description = "")
  public Integer getFlashCapacityMin() {
    return flashCapacityMin;
  }

  public void setFlashCapacityMin(Integer flashCapacityMin) {
    this.flashCapacityMin = flashCapacityMin;
  }

  public InstanceSpecForDescribeEnterpriseDBInstanceSpecsOutput flashCapacityStep(Integer flashCapacityStep) {
    this.flashCapacityStep = flashCapacityStep;
    return this;
  }

   /**
   * Get flashCapacityStep
   * @return flashCapacityStep
  **/
  @Schema(description = "")
  public Integer getFlashCapacityStep() {
    return flashCapacityStep;
  }

  public void setFlashCapacityStep(Integer flashCapacityStep) {
    this.flashCapacityStep = flashCapacityStep;
  }

  public InstanceSpecForDescribeEnterpriseDBInstanceSpecsOutput ramCapacity(Integer ramCapacity) {
    this.ramCapacity = ramCapacity;
    return this;
  }

   /**
   * Get ramCapacity
   * @return ramCapacity
  **/
  @Schema(description = "")
  public Integer getRamCapacity() {
    return ramCapacity;
  }

  public void setRamCapacity(Integer ramCapacity) {
    this.ramCapacity = ramCapacity;
  }

  public InstanceSpecForDescribeEnterpriseDBInstanceSpecsOutput shardNumberSpecs(List<ShardNumberSpecForDescribeEnterpriseDBInstanceSpecsOutput> shardNumberSpecs) {
    this.shardNumberSpecs = shardNumberSpecs;
    return this;
  }

  public InstanceSpecForDescribeEnterpriseDBInstanceSpecsOutput addShardNumberSpecsItem(ShardNumberSpecForDescribeEnterpriseDBInstanceSpecsOutput shardNumberSpecsItem) {
    if (this.shardNumberSpecs == null) {
      this.shardNumberSpecs = new ArrayList<ShardNumberSpecForDescribeEnterpriseDBInstanceSpecsOutput>();
    }
    this.shardNumberSpecs.add(shardNumberSpecsItem);
    return this;
  }

   /**
   * Get shardNumberSpecs
   * @return shardNumberSpecs
  **/
  @Valid
  @Schema(description = "")
  public List<ShardNumberSpecForDescribeEnterpriseDBInstanceSpecsOutput> getShardNumberSpecs() {
    return shardNumberSpecs;
  }

  public void setShardNumberSpecs(List<ShardNumberSpecForDescribeEnterpriseDBInstanceSpecsOutput> shardNumberSpecs) {
    this.shardNumberSpecs = shardNumberSpecs;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstanceSpecForDescribeEnterpriseDBInstanceSpecsOutput instanceSpecForDescribeEnterpriseDBInstanceSpecsOutput = (InstanceSpecForDescribeEnterpriseDBInstanceSpecsOutput) o;
    return Objects.equals(this.dataLayout, instanceSpecForDescribeEnterpriseDBInstanceSpecsOutput.dataLayout) &&
        Objects.equals(this.flashCapacityMax, instanceSpecForDescribeEnterpriseDBInstanceSpecsOutput.flashCapacityMax) &&
        Objects.equals(this.flashCapacityMin, instanceSpecForDescribeEnterpriseDBInstanceSpecsOutput.flashCapacityMin) &&
        Objects.equals(this.flashCapacityStep, instanceSpecForDescribeEnterpriseDBInstanceSpecsOutput.flashCapacityStep) &&
        Objects.equals(this.ramCapacity, instanceSpecForDescribeEnterpriseDBInstanceSpecsOutput.ramCapacity) &&
        Objects.equals(this.shardNumberSpecs, instanceSpecForDescribeEnterpriseDBInstanceSpecsOutput.shardNumberSpecs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataLayout, flashCapacityMax, flashCapacityMin, flashCapacityStep, ramCapacity, shardNumberSpecs);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstanceSpecForDescribeEnterpriseDBInstanceSpecsOutput {\n");
    
    sb.append("    dataLayout: ").append(toIndentedString(dataLayout)).append("\n");
    sb.append("    flashCapacityMax: ").append(toIndentedString(flashCapacityMax)).append("\n");
    sb.append("    flashCapacityMin: ").append(toIndentedString(flashCapacityMin)).append("\n");
    sb.append("    flashCapacityStep: ").append(toIndentedString(flashCapacityStep)).append("\n");
    sb.append("    ramCapacity: ").append(toIndentedString(ramCapacity)).append("\n");
    sb.append("    shardNumberSpecs: ").append(toIndentedString(shardNumberSpecs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
