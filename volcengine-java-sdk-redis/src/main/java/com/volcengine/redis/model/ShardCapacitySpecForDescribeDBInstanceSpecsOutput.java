/*
 * redis
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.redis.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ShardCapacitySpecForDescribeDBInstanceSpecsOutput
 */



public class ShardCapacitySpecForDescribeDBInstanceSpecsOutput {
  @SerializedName("DefaultBandwidthPerShard")
  private Integer defaultBandwidthPerShard = null;

  @SerializedName("MaxAdditionalBandwidthPerShard")
  private Integer maxAdditionalBandwidthPerShard = null;

  @SerializedName("ShardCapacity")
  private Integer shardCapacity = null;

  public ShardCapacitySpecForDescribeDBInstanceSpecsOutput defaultBandwidthPerShard(Integer defaultBandwidthPerShard) {
    this.defaultBandwidthPerShard = defaultBandwidthPerShard;
    return this;
  }

   /**
   * Get defaultBandwidthPerShard
   * @return defaultBandwidthPerShard
  **/
  @Schema(description = "")
  public Integer getDefaultBandwidthPerShard() {
    return defaultBandwidthPerShard;
  }

  public void setDefaultBandwidthPerShard(Integer defaultBandwidthPerShard) {
    this.defaultBandwidthPerShard = defaultBandwidthPerShard;
  }

  public ShardCapacitySpecForDescribeDBInstanceSpecsOutput maxAdditionalBandwidthPerShard(Integer maxAdditionalBandwidthPerShard) {
    this.maxAdditionalBandwidthPerShard = maxAdditionalBandwidthPerShard;
    return this;
  }

   /**
   * Get maxAdditionalBandwidthPerShard
   * @return maxAdditionalBandwidthPerShard
  **/
  @Schema(description = "")
  public Integer getMaxAdditionalBandwidthPerShard() {
    return maxAdditionalBandwidthPerShard;
  }

  public void setMaxAdditionalBandwidthPerShard(Integer maxAdditionalBandwidthPerShard) {
    this.maxAdditionalBandwidthPerShard = maxAdditionalBandwidthPerShard;
  }

  public ShardCapacitySpecForDescribeDBInstanceSpecsOutput shardCapacity(Integer shardCapacity) {
    this.shardCapacity = shardCapacity;
    return this;
  }

   /**
   * Get shardCapacity
   * @return shardCapacity
  **/
  @Schema(description = "")
  public Integer getShardCapacity() {
    return shardCapacity;
  }

  public void setShardCapacity(Integer shardCapacity) {
    this.shardCapacity = shardCapacity;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShardCapacitySpecForDescribeDBInstanceSpecsOutput shardCapacitySpecForDescribeDBInstanceSpecsOutput = (ShardCapacitySpecForDescribeDBInstanceSpecsOutput) o;
    return Objects.equals(this.defaultBandwidthPerShard, shardCapacitySpecForDescribeDBInstanceSpecsOutput.defaultBandwidthPerShard) &&
        Objects.equals(this.maxAdditionalBandwidthPerShard, shardCapacitySpecForDescribeDBInstanceSpecsOutput.maxAdditionalBandwidthPerShard) &&
        Objects.equals(this.shardCapacity, shardCapacitySpecForDescribeDBInstanceSpecsOutput.shardCapacity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultBandwidthPerShard, maxAdditionalBandwidthPerShard, shardCapacity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShardCapacitySpecForDescribeDBInstanceSpecsOutput {\n");
    
    sb.append("    defaultBandwidthPerShard: ").append(toIndentedString(defaultBandwidthPerShard)).append("\n");
    sb.append("    maxAdditionalBandwidthPerShard: ").append(toIndentedString(maxAdditionalBandwidthPerShard)).append("\n");
    sb.append("    shardCapacity: ").append(toIndentedString(shardCapacity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
