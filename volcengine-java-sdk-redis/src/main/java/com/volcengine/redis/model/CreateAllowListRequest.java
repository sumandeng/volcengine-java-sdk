/*
 * redis
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.redis.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.redis.model.SecurityGroupBindInfoForCreateAllowListInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateAllowListRequest
 */



public class CreateAllowListRequest {
  @SerializedName("AllowList")
  private String allowList = null;

  /**
   * Gets or Sets allowListCategory
   */
  @JsonAdapter(AllowListCategoryEnum.Adapter.class)
  public enum AllowListCategoryEnum {
    @SerializedName("Ordinary")
    ORDINARY("Ordinary"),
    @SerializedName("Default")
    DEFAULT("Default");

    private String value;

    AllowListCategoryEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static AllowListCategoryEnum fromValue(String input) {
      for (AllowListCategoryEnum b : AllowListCategoryEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<AllowListCategoryEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AllowListCategoryEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public AllowListCategoryEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return AllowListCategoryEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("AllowListCategory")
  private AllowListCategoryEnum allowListCategory = null;

  @SerializedName("AllowListDesc")
  private String allowListDesc = null;

  @SerializedName("AllowListName")
  private String allowListName = null;

  @SerializedName("AllowListType")
  private String allowListType = null;

  @SerializedName("ClientToken")
  private String clientToken = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("SecurityGroupBindInfos")
  private List<SecurityGroupBindInfoForCreateAllowListInput> securityGroupBindInfos = null;

  public CreateAllowListRequest allowList(String allowList) {
    this.allowList = allowList;
    return this;
  }

   /**
   * Get allowList
   * @return allowList
  **/
  @Schema(description = "")
  public String getAllowList() {
    return allowList;
  }

  public void setAllowList(String allowList) {
    this.allowList = allowList;
  }

  public CreateAllowListRequest allowListCategory(AllowListCategoryEnum allowListCategory) {
    this.allowListCategory = allowListCategory;
    return this;
  }

   /**
   * Get allowListCategory
   * @return allowListCategory
  **/
  @Schema(description = "")
  public AllowListCategoryEnum getAllowListCategory() {
    return allowListCategory;
  }

  public void setAllowListCategory(AllowListCategoryEnum allowListCategory) {
    this.allowListCategory = allowListCategory;
  }

  public CreateAllowListRequest allowListDesc(String allowListDesc) {
    this.allowListDesc = allowListDesc;
    return this;
  }

   /**
   * Get allowListDesc
   * @return allowListDesc
  **/
  @Schema(description = "")
  public String getAllowListDesc() {
    return allowListDesc;
  }

  public void setAllowListDesc(String allowListDesc) {
    this.allowListDesc = allowListDesc;
  }

  public CreateAllowListRequest allowListName(String allowListName) {
    this.allowListName = allowListName;
    return this;
  }

   /**
   * Get allowListName
   * @return allowListName
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getAllowListName() {
    return allowListName;
  }

  public void setAllowListName(String allowListName) {
    this.allowListName = allowListName;
  }

  public CreateAllowListRequest allowListType(String allowListType) {
    this.allowListType = allowListType;
    return this;
  }

   /**
   * Get allowListType
   * @return allowListType
  **/
  @Schema(description = "")
  public String getAllowListType() {
    return allowListType;
  }

  public void setAllowListType(String allowListType) {
    this.allowListType = allowListType;
  }

  public CreateAllowListRequest clientToken(String clientToken) {
    this.clientToken = clientToken;
    return this;
  }

   /**
   * Get clientToken
   * @return clientToken
  **/
  @Schema(description = "")
  public String getClientToken() {
    return clientToken;
  }

  public void setClientToken(String clientToken) {
    this.clientToken = clientToken;
  }

  public CreateAllowListRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public CreateAllowListRequest securityGroupBindInfos(List<SecurityGroupBindInfoForCreateAllowListInput> securityGroupBindInfos) {
    this.securityGroupBindInfos = securityGroupBindInfos;
    return this;
  }

  public CreateAllowListRequest addSecurityGroupBindInfosItem(SecurityGroupBindInfoForCreateAllowListInput securityGroupBindInfosItem) {
    if (this.securityGroupBindInfos == null) {
      this.securityGroupBindInfos = new ArrayList<SecurityGroupBindInfoForCreateAllowListInput>();
    }
    this.securityGroupBindInfos.add(securityGroupBindInfosItem);
    return this;
  }

   /**
   * Get securityGroupBindInfos
   * @return securityGroupBindInfos
  **/
  @Valid
  @Schema(description = "")
  public List<SecurityGroupBindInfoForCreateAllowListInput> getSecurityGroupBindInfos() {
    return securityGroupBindInfos;
  }

  public void setSecurityGroupBindInfos(List<SecurityGroupBindInfoForCreateAllowListInput> securityGroupBindInfos) {
    this.securityGroupBindInfos = securityGroupBindInfos;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAllowListRequest createAllowListRequest = (CreateAllowListRequest) o;
    return Objects.equals(this.allowList, createAllowListRequest.allowList) &&
        Objects.equals(this.allowListCategory, createAllowListRequest.allowListCategory) &&
        Objects.equals(this.allowListDesc, createAllowListRequest.allowListDesc) &&
        Objects.equals(this.allowListName, createAllowListRequest.allowListName) &&
        Objects.equals(this.allowListType, createAllowListRequest.allowListType) &&
        Objects.equals(this.clientToken, createAllowListRequest.clientToken) &&
        Objects.equals(this.projectName, createAllowListRequest.projectName) &&
        Objects.equals(this.securityGroupBindInfos, createAllowListRequest.securityGroupBindInfos);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowList, allowListCategory, allowListDesc, allowListName, allowListType, clientToken, projectName, securityGroupBindInfos);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAllowListRequest {\n");
    
    sb.append("    allowList: ").append(toIndentedString(allowList)).append("\n");
    sb.append("    allowListCategory: ").append(toIndentedString(allowListCategory)).append("\n");
    sb.append("    allowListDesc: ").append(toIndentedString(allowListDesc)).append("\n");
    sb.append("    allowListName: ").append(toIndentedString(allowListName)).append("\n");
    sb.append("    allowListType: ").append(toIndentedString(allowListType)).append("\n");
    sb.append("    clientToken: ").append(toIndentedString(clientToken)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    securityGroupBindInfos: ").append(toIndentedString(securityGroupBindInfos)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
