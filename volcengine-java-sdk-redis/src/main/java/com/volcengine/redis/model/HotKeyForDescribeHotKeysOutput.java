/*
 * redis
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.redis.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * HotKeyForDescribeHotKeysOutput
 */



public class HotKeyForDescribeHotKeysOutput {
  @SerializedName("CreateTime")
  private String createTime = null;

  @SerializedName("DBName")
  private String dbName = null;

  @SerializedName("KeyInfo")
  private String keyInfo = null;

  @SerializedName("KeyType")
  private String keyType = null;

  @SerializedName("NodeId")
  private String nodeId = null;

  @SerializedName("QueryCount")
  private String queryCount = null;

  @SerializedName("ShardId")
  private String shardId = null;

  public HotKeyForDescribeHotKeysOutput createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }

  public HotKeyForDescribeHotKeysOutput dbName(String dbName) {
    this.dbName = dbName;
    return this;
  }

   /**
   * Get dbName
   * @return dbName
  **/
  @Schema(description = "")
  public String getDbName() {
    return dbName;
  }

  public void setDbName(String dbName) {
    this.dbName = dbName;
  }

  public HotKeyForDescribeHotKeysOutput keyInfo(String keyInfo) {
    this.keyInfo = keyInfo;
    return this;
  }

   /**
   * Get keyInfo
   * @return keyInfo
  **/
  @Schema(description = "")
  public String getKeyInfo() {
    return keyInfo;
  }

  public void setKeyInfo(String keyInfo) {
    this.keyInfo = keyInfo;
  }

  public HotKeyForDescribeHotKeysOutput keyType(String keyType) {
    this.keyType = keyType;
    return this;
  }

   /**
   * Get keyType
   * @return keyType
  **/
  @Schema(description = "")
  public String getKeyType() {
    return keyType;
  }

  public void setKeyType(String keyType) {
    this.keyType = keyType;
  }

  public HotKeyForDescribeHotKeysOutput nodeId(String nodeId) {
    this.nodeId = nodeId;
    return this;
  }

   /**
   * Get nodeId
   * @return nodeId
  **/
  @Schema(description = "")
  public String getNodeId() {
    return nodeId;
  }

  public void setNodeId(String nodeId) {
    this.nodeId = nodeId;
  }

  public HotKeyForDescribeHotKeysOutput queryCount(String queryCount) {
    this.queryCount = queryCount;
    return this;
  }

   /**
   * Get queryCount
   * @return queryCount
  **/
  @Schema(description = "")
  public String getQueryCount() {
    return queryCount;
  }

  public void setQueryCount(String queryCount) {
    this.queryCount = queryCount;
  }

  public HotKeyForDescribeHotKeysOutput shardId(String shardId) {
    this.shardId = shardId;
    return this;
  }

   /**
   * Get shardId
   * @return shardId
  **/
  @Schema(description = "")
  public String getShardId() {
    return shardId;
  }

  public void setShardId(String shardId) {
    this.shardId = shardId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HotKeyForDescribeHotKeysOutput hotKeyForDescribeHotKeysOutput = (HotKeyForDescribeHotKeysOutput) o;
    return Objects.equals(this.createTime, hotKeyForDescribeHotKeysOutput.createTime) &&
        Objects.equals(this.dbName, hotKeyForDescribeHotKeysOutput.dbName) &&
        Objects.equals(this.keyInfo, hotKeyForDescribeHotKeysOutput.keyInfo) &&
        Objects.equals(this.keyType, hotKeyForDescribeHotKeysOutput.keyType) &&
        Objects.equals(this.nodeId, hotKeyForDescribeHotKeysOutput.nodeId) &&
        Objects.equals(this.queryCount, hotKeyForDescribeHotKeysOutput.queryCount) &&
        Objects.equals(this.shardId, hotKeyForDescribeHotKeysOutput.shardId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createTime, dbName, keyInfo, keyType, nodeId, queryCount, shardId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HotKeyForDescribeHotKeysOutput {\n");
    
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    dbName: ").append(toIndentedString(dbName)).append("\n");
    sb.append("    keyInfo: ").append(toIndentedString(keyInfo)).append("\n");
    sb.append("    keyType: ").append(toIndentedString(keyType)).append("\n");
    sb.append("    nodeId: ").append(toIndentedString(nodeId)).append("\n");
    sb.append("    queryCount: ").append(toIndentedString(queryCount)).append("\n");
    sb.append("    shardId: ").append(toIndentedString(shardId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
