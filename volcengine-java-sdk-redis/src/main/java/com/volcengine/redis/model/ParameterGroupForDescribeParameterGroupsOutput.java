/*
 * redis
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.redis.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ParameterGroupForDescribeParameterGroupsOutput
 */



public class ParameterGroupForDescribeParameterGroupsOutput {
  @SerializedName("CreateTime")
  private String createTime = null;

  @SerializedName("Default")
  private Boolean _default = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("EngineVersion")
  private String engineVersion = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("ParameterGroupId")
  private String parameterGroupId = null;

  @SerializedName("ParameterNum")
  private Integer parameterNum = null;

  /**
   * Gets or Sets source
   */
  @JsonAdapter(SourceEnum.Adapter.class)
  public enum SourceEnum {
    @SerializedName("System")
    SYSTEM("System"),
    @SerializedName("User")
    USER("User");

    private String value;

    SourceEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static SourceEnum fromValue(String input) {
      for (SourceEnum b : SourceEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<SourceEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SourceEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public SourceEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return SourceEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("Source")
  private SourceEnum source = null;

  @SerializedName("UpdateTime")
  private String updateTime = null;

  public ParameterGroupForDescribeParameterGroupsOutput createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }

  public ParameterGroupForDescribeParameterGroupsOutput _default(Boolean _default) {
    this._default = _default;
    return this;
  }

   /**
   * Get _default
   * @return _default
  **/
  @Schema(description = "")
  public Boolean isDefault() {
    return _default;
  }

  public void setDefault(Boolean _default) {
    this._default = _default;
  }

  public ParameterGroupForDescribeParameterGroupsOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ParameterGroupForDescribeParameterGroupsOutput engineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
    return this;
  }

   /**
   * Get engineVersion
   * @return engineVersion
  **/
  @Schema(description = "")
  public String getEngineVersion() {
    return engineVersion;
  }

  public void setEngineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
  }

  public ParameterGroupForDescribeParameterGroupsOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ParameterGroupForDescribeParameterGroupsOutput parameterGroupId(String parameterGroupId) {
    this.parameterGroupId = parameterGroupId;
    return this;
  }

   /**
   * Get parameterGroupId
   * @return parameterGroupId
  **/
  @Schema(description = "")
  public String getParameterGroupId() {
    return parameterGroupId;
  }

  public void setParameterGroupId(String parameterGroupId) {
    this.parameterGroupId = parameterGroupId;
  }

  public ParameterGroupForDescribeParameterGroupsOutput parameterNum(Integer parameterNum) {
    this.parameterNum = parameterNum;
    return this;
  }

   /**
   * Get parameterNum
   * @return parameterNum
  **/
  @Schema(description = "")
  public Integer getParameterNum() {
    return parameterNum;
  }

  public void setParameterNum(Integer parameterNum) {
    this.parameterNum = parameterNum;
  }

  public ParameterGroupForDescribeParameterGroupsOutput source(SourceEnum source) {
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @Schema(description = "")
  public SourceEnum getSource() {
    return source;
  }

  public void setSource(SourceEnum source) {
    this.source = source;
  }

  public ParameterGroupForDescribeParameterGroupsOutput updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ParameterGroupForDescribeParameterGroupsOutput parameterGroupForDescribeParameterGroupsOutput = (ParameterGroupForDescribeParameterGroupsOutput) o;
    return Objects.equals(this.createTime, parameterGroupForDescribeParameterGroupsOutput.createTime) &&
        Objects.equals(this._default, parameterGroupForDescribeParameterGroupsOutput._default) &&
        Objects.equals(this.description, parameterGroupForDescribeParameterGroupsOutput.description) &&
        Objects.equals(this.engineVersion, parameterGroupForDescribeParameterGroupsOutput.engineVersion) &&
        Objects.equals(this.name, parameterGroupForDescribeParameterGroupsOutput.name) &&
        Objects.equals(this.parameterGroupId, parameterGroupForDescribeParameterGroupsOutput.parameterGroupId) &&
        Objects.equals(this.parameterNum, parameterGroupForDescribeParameterGroupsOutput.parameterNum) &&
        Objects.equals(this.source, parameterGroupForDescribeParameterGroupsOutput.source) &&
        Objects.equals(this.updateTime, parameterGroupForDescribeParameterGroupsOutput.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createTime, _default, description, engineVersion, name, parameterGroupId, parameterNum, source, updateTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ParameterGroupForDescribeParameterGroupsOutput {\n");
    
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    _default: ").append(toIndentedString(_default)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    engineVersion: ").append(toIndentedString(engineVersion)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    parameterGroupId: ").append(toIndentedString(parameterGroupId)).append("\n");
    sb.append("    parameterNum: ").append(toIndentedString(parameterNum)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
