/*
 * dbw
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.dbw.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput
 */



public class DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput {
  @SerializedName("AffectRow")
  private Integer affectRow = null;

  @SerializedName("DB")
  private String DB = null;

  @SerializedName("Duration")
  private Integer duration = null;

  @SerializedName("ExecTime")
  private Integer execTime = null;

  @SerializedName("LogLevel")
  private String logLevel = null;

  @SerializedName("LogType")
  private String logType = null;

  @SerializedName("NodeId")
  private String nodeId = null;

  @SerializedName("OriSql")
  private String oriSql = null;

  @SerializedName("ReturnRows")
  private Integer returnRows = null;

  @SerializedName("ScanRows")
  private Integer scanRows = null;

  @SerializedName("SourceIP")
  private String sourceIP = null;

  @SerializedName("SqlFingerprint")
  private String sqlFingerprint = null;

  @SerializedName("SqlMethod")
  private String sqlMethod = null;

  @SerializedName("Table")
  private String table = null;

  @SerializedName("User")
  private String user = null;

  @SerializedName("WaitLockConsumingTime")
  private Integer waitLockConsumingTime = null;

  public DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput affectRow(Integer affectRow) {
    this.affectRow = affectRow;
    return this;
  }

   /**
   * Get affectRow
   * @return affectRow
  **/
  @Schema(description = "")
  public Integer getAffectRow() {
    return affectRow;
  }

  public void setAffectRow(Integer affectRow) {
    this.affectRow = affectRow;
  }

  public DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput DB(String DB) {
    this.DB = DB;
    return this;
  }

   /**
   * Get DB
   * @return DB
  **/
  @Schema(description = "")
  public String getDB() {
    return DB;
  }

  public void setDB(String DB) {
    this.DB = DB;
  }

  public DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput duration(Integer duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @Schema(description = "")
  public Integer getDuration() {
    return duration;
  }

  public void setDuration(Integer duration) {
    this.duration = duration;
  }

  public DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput execTime(Integer execTime) {
    this.execTime = execTime;
    return this;
  }

   /**
   * Get execTime
   * @return execTime
  **/
  @Schema(description = "")
  public Integer getExecTime() {
    return execTime;
  }

  public void setExecTime(Integer execTime) {
    this.execTime = execTime;
  }

  public DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput logLevel(String logLevel) {
    this.logLevel = logLevel;
    return this;
  }

   /**
   * Get logLevel
   * @return logLevel
  **/
  @Schema(description = "")
  public String getLogLevel() {
    return logLevel;
  }

  public void setLogLevel(String logLevel) {
    this.logLevel = logLevel;
  }

  public DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput logType(String logType) {
    this.logType = logType;
    return this;
  }

   /**
   * Get logType
   * @return logType
  **/
  @Schema(description = "")
  public String getLogType() {
    return logType;
  }

  public void setLogType(String logType) {
    this.logType = logType;
  }

  public DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput nodeId(String nodeId) {
    this.nodeId = nodeId;
    return this;
  }

   /**
   * Get nodeId
   * @return nodeId
  **/
  @Schema(description = "")
  public String getNodeId() {
    return nodeId;
  }

  public void setNodeId(String nodeId) {
    this.nodeId = nodeId;
  }

  public DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput oriSql(String oriSql) {
    this.oriSql = oriSql;
    return this;
  }

   /**
   * Get oriSql
   * @return oriSql
  **/
  @Schema(description = "")
  public String getOriSql() {
    return oriSql;
  }

  public void setOriSql(String oriSql) {
    this.oriSql = oriSql;
  }

  public DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput returnRows(Integer returnRows) {
    this.returnRows = returnRows;
    return this;
  }

   /**
   * Get returnRows
   * @return returnRows
  **/
  @Schema(description = "")
  public Integer getReturnRows() {
    return returnRows;
  }

  public void setReturnRows(Integer returnRows) {
    this.returnRows = returnRows;
  }

  public DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput scanRows(Integer scanRows) {
    this.scanRows = scanRows;
    return this;
  }

   /**
   * Get scanRows
   * @return scanRows
  **/
  @Schema(description = "")
  public Integer getScanRows() {
    return scanRows;
  }

  public void setScanRows(Integer scanRows) {
    this.scanRows = scanRows;
  }

  public DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput sourceIP(String sourceIP) {
    this.sourceIP = sourceIP;
    return this;
  }

   /**
   * Get sourceIP
   * @return sourceIP
  **/
  @Schema(description = "")
  public String getSourceIP() {
    return sourceIP;
  }

  public void setSourceIP(String sourceIP) {
    this.sourceIP = sourceIP;
  }

  public DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput sqlFingerprint(String sqlFingerprint) {
    this.sqlFingerprint = sqlFingerprint;
    return this;
  }

   /**
   * Get sqlFingerprint
   * @return sqlFingerprint
  **/
  @Schema(description = "")
  public String getSqlFingerprint() {
    return sqlFingerprint;
  }

  public void setSqlFingerprint(String sqlFingerprint) {
    this.sqlFingerprint = sqlFingerprint;
  }

  public DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput sqlMethod(String sqlMethod) {
    this.sqlMethod = sqlMethod;
    return this;
  }

   /**
   * Get sqlMethod
   * @return sqlMethod
  **/
  @Schema(description = "")
  public String getSqlMethod() {
    return sqlMethod;
  }

  public void setSqlMethod(String sqlMethod) {
    this.sqlMethod = sqlMethod;
  }

  public DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput table(String table) {
    this.table = table;
    return this;
  }

   /**
   * Get table
   * @return table
  **/
  @Schema(description = "")
  public String getTable() {
    return table;
  }

  public void setTable(String table) {
    this.table = table;
  }

  public DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput user(String user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @Schema(description = "")
  public String getUser() {
    return user;
  }

  public void setUser(String user) {
    this.user = user;
  }

  public DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput waitLockConsumingTime(Integer waitLockConsumingTime) {
    this.waitLockConsumingTime = waitLockConsumingTime;
    return this;
  }

   /**
   * Get waitLockConsumingTime
   * @return waitLockConsumingTime
  **/
  @Schema(description = "")
  public Integer getWaitLockConsumingTime() {
    return waitLockConsumingTime;
  }

  public void setWaitLockConsumingTime(Integer waitLockConsumingTime) {
    this.waitLockConsumingTime = waitLockConsumingTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput describeAuditLogDetailRowForDescribeAuditLogDetailOutput = (DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput) o;
    return Objects.equals(this.affectRow, describeAuditLogDetailRowForDescribeAuditLogDetailOutput.affectRow) &&
        Objects.equals(this.DB, describeAuditLogDetailRowForDescribeAuditLogDetailOutput.DB) &&
        Objects.equals(this.duration, describeAuditLogDetailRowForDescribeAuditLogDetailOutput.duration) &&
        Objects.equals(this.execTime, describeAuditLogDetailRowForDescribeAuditLogDetailOutput.execTime) &&
        Objects.equals(this.logLevel, describeAuditLogDetailRowForDescribeAuditLogDetailOutput.logLevel) &&
        Objects.equals(this.logType, describeAuditLogDetailRowForDescribeAuditLogDetailOutput.logType) &&
        Objects.equals(this.nodeId, describeAuditLogDetailRowForDescribeAuditLogDetailOutput.nodeId) &&
        Objects.equals(this.oriSql, describeAuditLogDetailRowForDescribeAuditLogDetailOutput.oriSql) &&
        Objects.equals(this.returnRows, describeAuditLogDetailRowForDescribeAuditLogDetailOutput.returnRows) &&
        Objects.equals(this.scanRows, describeAuditLogDetailRowForDescribeAuditLogDetailOutput.scanRows) &&
        Objects.equals(this.sourceIP, describeAuditLogDetailRowForDescribeAuditLogDetailOutput.sourceIP) &&
        Objects.equals(this.sqlFingerprint, describeAuditLogDetailRowForDescribeAuditLogDetailOutput.sqlFingerprint) &&
        Objects.equals(this.sqlMethod, describeAuditLogDetailRowForDescribeAuditLogDetailOutput.sqlMethod) &&
        Objects.equals(this.table, describeAuditLogDetailRowForDescribeAuditLogDetailOutput.table) &&
        Objects.equals(this.user, describeAuditLogDetailRowForDescribeAuditLogDetailOutput.user) &&
        Objects.equals(this.waitLockConsumingTime, describeAuditLogDetailRowForDescribeAuditLogDetailOutput.waitLockConsumingTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(affectRow, DB, duration, execTime, logLevel, logType, nodeId, oriSql, returnRows, scanRows, sourceIP, sqlFingerprint, sqlMethod, table, user, waitLockConsumingTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput {\n");
    
    sb.append("    affectRow: ").append(toIndentedString(affectRow)).append("\n");
    sb.append("    DB: ").append(toIndentedString(DB)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    execTime: ").append(toIndentedString(execTime)).append("\n");
    sb.append("    logLevel: ").append(toIndentedString(logLevel)).append("\n");
    sb.append("    logType: ").append(toIndentedString(logType)).append("\n");
    sb.append("    nodeId: ").append(toIndentedString(nodeId)).append("\n");
    sb.append("    oriSql: ").append(toIndentedString(oriSql)).append("\n");
    sb.append("    returnRows: ").append(toIndentedString(returnRows)).append("\n");
    sb.append("    scanRows: ").append(toIndentedString(scanRows)).append("\n");
    sb.append("    sourceIP: ").append(toIndentedString(sourceIP)).append("\n");
    sb.append("    sqlFingerprint: ").append(toIndentedString(sqlFingerprint)).append("\n");
    sb.append("    sqlMethod: ").append(toIndentedString(sqlMethod)).append("\n");
    sb.append("    table: ").append(toIndentedString(table)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    waitLockConsumingTime: ").append(toIndentedString(waitLockConsumingTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
