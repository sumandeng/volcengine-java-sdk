/*
 * dbw
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.dbw.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.dbw.model.SearchParamForDescribeSlowLogsInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeSlowLogsRequest
 */



public class DescribeSlowLogsRequest {
  @SerializedName("EndTime")
  private Integer endTime = null;

  @SerializedName("InstanceId")
  private String instanceId = null;

  /**
   * Gets or Sets instanceType
   */
  @JsonAdapter(InstanceTypeEnum.Adapter.class)
  public enum InstanceTypeEnum {
    @SerializedName("MySQL")
    MYSQL("MySQL"),
    @SerializedName("Postgres")
    POSTGRES("Postgres"),
    @SerializedName("Mongo")
    MONGO("Mongo"),
    @SerializedName("Redis")
    REDIS("Redis"),
    @SerializedName("VeDBMySQL")
    VEDBMYSQL("VeDBMySQL"),
    @SerializedName("MetaRDS")
    METARDS("MetaRDS"),
    @SerializedName("MSSQL")
    MSSQL("MSSQL"),
    @SerializedName("ByteRDS")
    BYTERDS("ByteRDS"),
    @SerializedName("MySQLSharding")
    MYSQLSHARDING("MySQLSharding"),
    @SerializedName("MetaMySQL")
    METAMYSQL("MetaMySQL");

    private String value;

    InstanceTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static InstanceTypeEnum fromValue(String input) {
      for (InstanceTypeEnum b : InstanceTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<InstanceTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final InstanceTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public InstanceTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return InstanceTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("InstanceType")
  private InstanceTypeEnum instanceType = null;

  @SerializedName("NodeId")
  private String nodeId = null;

  /**
   * Gets or Sets orderBy
   */
  @JsonAdapter(OrderByEnum.Adapter.class)
  public enum OrderByEnum {
    @SerializedName("Timestamp")
    TIMESTAMP("Timestamp"),
    @SerializedName("QueryTime")
    QUERYTIME("QueryTime"),
    @SerializedName("LockTime")
    LOCKTIME("LockTime"),
    @SerializedName("RowsExamined")
    ROWSEXAMINED("RowsExamined"),
    @SerializedName("RowsSent")
    ROWSSENT("RowsSent");

    private String value;

    OrderByEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static OrderByEnum fromValue(String input) {
      for (OrderByEnum b : OrderByEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<OrderByEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OrderByEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public OrderByEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return OrderByEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("OrderBy")
  private OrderByEnum orderBy = null;

  @SerializedName("PageNumber")
  private Integer pageNumber = null;

  @SerializedName("PageSize")
  private Integer pageSize = null;

  @SerializedName("RegionId")
  private String regionId = null;

  @SerializedName("SearchParam")
  private SearchParamForDescribeSlowLogsInput searchParam = null;

  /**
   * Gets or Sets sortBy
   */
  @JsonAdapter(SortByEnum.Adapter.class)
  public enum SortByEnum {
    @SerializedName("ASC")
    ASC("ASC"),
    @SerializedName("DESC")
    DESC("DESC");

    private String value;

    SortByEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static SortByEnum fromValue(String input) {
      for (SortByEnum b : SortByEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<SortByEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SortByEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public SortByEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return SortByEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("SortBy")
  private SortByEnum sortBy = null;

  @SerializedName("StartTime")
  private Integer startTime = null;

  public DescribeSlowLogsRequest endTime(Integer endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * Get endTime
   * @return endTime
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Integer getEndTime() {
    return endTime;
  }

  public void setEndTime(Integer endTime) {
    this.endTime = endTime;
  }

  public DescribeSlowLogsRequest instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public DescribeSlowLogsRequest instanceType(InstanceTypeEnum instanceType) {
    this.instanceType = instanceType;
    return this;
  }

   /**
   * Get instanceType
   * @return instanceType
  **/
  @Schema(description = "")
  public InstanceTypeEnum getInstanceType() {
    return instanceType;
  }

  public void setInstanceType(InstanceTypeEnum instanceType) {
    this.instanceType = instanceType;
  }

  public DescribeSlowLogsRequest nodeId(String nodeId) {
    this.nodeId = nodeId;
    return this;
  }

   /**
   * Get nodeId
   * @return nodeId
  **/
  @Schema(description = "")
  public String getNodeId() {
    return nodeId;
  }

  public void setNodeId(String nodeId) {
    this.nodeId = nodeId;
  }

  public DescribeSlowLogsRequest orderBy(OrderByEnum orderBy) {
    this.orderBy = orderBy;
    return this;
  }

   /**
   * Get orderBy
   * @return orderBy
  **/
  @Schema(description = "")
  public OrderByEnum getOrderBy() {
    return orderBy;
  }

  public void setOrderBy(OrderByEnum orderBy) {
    this.orderBy = orderBy;
  }

  public DescribeSlowLogsRequest pageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @Schema(description = "")
  public Integer getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  public DescribeSlowLogsRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @Schema(description = "")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public DescribeSlowLogsRequest regionId(String regionId) {
    this.regionId = regionId;
    return this;
  }

   /**
   * Get regionId
   * @return regionId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getRegionId() {
    return regionId;
  }

  public void setRegionId(String regionId) {
    this.regionId = regionId;
  }

  public DescribeSlowLogsRequest searchParam(SearchParamForDescribeSlowLogsInput searchParam) {
    this.searchParam = searchParam;
    return this;
  }

   /**
   * Get searchParam
   * @return searchParam
  **/
  @Valid
  @Schema(description = "")
  public SearchParamForDescribeSlowLogsInput getSearchParam() {
    return searchParam;
  }

  public void setSearchParam(SearchParamForDescribeSlowLogsInput searchParam) {
    this.searchParam = searchParam;
  }

  public DescribeSlowLogsRequest sortBy(SortByEnum sortBy) {
    this.sortBy = sortBy;
    return this;
  }

   /**
   * Get sortBy
   * @return sortBy
  **/
  @Schema(description = "")
  public SortByEnum getSortBy() {
    return sortBy;
  }

  public void setSortBy(SortByEnum sortBy) {
    this.sortBy = sortBy;
  }

  public DescribeSlowLogsRequest startTime(Integer startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Integer getStartTime() {
    return startTime;
  }

  public void setStartTime(Integer startTime) {
    this.startTime = startTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeSlowLogsRequest describeSlowLogsRequest = (DescribeSlowLogsRequest) o;
    return Objects.equals(this.endTime, describeSlowLogsRequest.endTime) &&
        Objects.equals(this.instanceId, describeSlowLogsRequest.instanceId) &&
        Objects.equals(this.instanceType, describeSlowLogsRequest.instanceType) &&
        Objects.equals(this.nodeId, describeSlowLogsRequest.nodeId) &&
        Objects.equals(this.orderBy, describeSlowLogsRequest.orderBy) &&
        Objects.equals(this.pageNumber, describeSlowLogsRequest.pageNumber) &&
        Objects.equals(this.pageSize, describeSlowLogsRequest.pageSize) &&
        Objects.equals(this.regionId, describeSlowLogsRequest.regionId) &&
        Objects.equals(this.searchParam, describeSlowLogsRequest.searchParam) &&
        Objects.equals(this.sortBy, describeSlowLogsRequest.sortBy) &&
        Objects.equals(this.startTime, describeSlowLogsRequest.startTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endTime, instanceId, instanceType, nodeId, orderBy, pageNumber, pageSize, regionId, searchParam, sortBy, startTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeSlowLogsRequest {\n");
    
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    nodeId: ").append(toIndentedString(nodeId)).append("\n");
    sb.append("    orderBy: ").append(toIndentedString(orderBy)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    regionId: ").append(toIndentedString(regionId)).append("\n");
    sb.append("    searchParam: ").append(toIndentedString(searchParam)).append("\n");
    sb.append("    sortBy: ").append(toIndentedString(sortBy)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
