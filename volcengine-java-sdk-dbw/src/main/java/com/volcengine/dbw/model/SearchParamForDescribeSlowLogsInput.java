/*
 * dbw
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.dbw.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * SearchParamForDescribeSlowLogsInput
 */



public class SearchParamForDescribeSlowLogsInput {
  @SerializedName("DBs")
  private List<String> dbs = null;

  @SerializedName("MaxQueryTime")
  private Double maxQueryTime = null;

  @SerializedName("MinQueryTime")
  private Double minQueryTime = null;

  @SerializedName("SQLTemplate")
  private String sqLTemplate = null;

  @SerializedName("SQLTemplateID")
  private String sqLTemplateID = null;

  @SerializedName("SourceIPs")
  private List<String> sourceIPs = null;

  @SerializedName("Users")
  private List<String> users = null;

  public SearchParamForDescribeSlowLogsInput dbs(List<String> dbs) {
    this.dbs = dbs;
    return this;
  }

  public SearchParamForDescribeSlowLogsInput addDbsItem(String dbsItem) {
    if (this.dbs == null) {
      this.dbs = new ArrayList<String>();
    }
    this.dbs.add(dbsItem);
    return this;
  }

   /**
   * Get dbs
   * @return dbs
  **/
  @Schema(description = "")
  public List<String> getDbs() {
    return dbs;
  }

  public void setDbs(List<String> dbs) {
    this.dbs = dbs;
  }

  public SearchParamForDescribeSlowLogsInput maxQueryTime(Double maxQueryTime) {
    this.maxQueryTime = maxQueryTime;
    return this;
  }

   /**
   * Get maxQueryTime
   * @return maxQueryTime
  **/
  @Schema(description = "")
  public Double getMaxQueryTime() {
    return maxQueryTime;
  }

  public void setMaxQueryTime(Double maxQueryTime) {
    this.maxQueryTime = maxQueryTime;
  }

  public SearchParamForDescribeSlowLogsInput minQueryTime(Double minQueryTime) {
    this.minQueryTime = minQueryTime;
    return this;
  }

   /**
   * Get minQueryTime
   * @return minQueryTime
  **/
  @Schema(description = "")
  public Double getMinQueryTime() {
    return minQueryTime;
  }

  public void setMinQueryTime(Double minQueryTime) {
    this.minQueryTime = minQueryTime;
  }

  public SearchParamForDescribeSlowLogsInput sqLTemplate(String sqLTemplate) {
    this.sqLTemplate = sqLTemplate;
    return this;
  }

   /**
   * Get sqLTemplate
   * @return sqLTemplate
  **/
  @Schema(description = "")
  public String getSqLTemplate() {
    return sqLTemplate;
  }

  public void setSqLTemplate(String sqLTemplate) {
    this.sqLTemplate = sqLTemplate;
  }

  public SearchParamForDescribeSlowLogsInput sqLTemplateID(String sqLTemplateID) {
    this.sqLTemplateID = sqLTemplateID;
    return this;
  }

   /**
   * Get sqLTemplateID
   * @return sqLTemplateID
  **/
  @Schema(description = "")
  public String getSqLTemplateID() {
    return sqLTemplateID;
  }

  public void setSqLTemplateID(String sqLTemplateID) {
    this.sqLTemplateID = sqLTemplateID;
  }

  public SearchParamForDescribeSlowLogsInput sourceIPs(List<String> sourceIPs) {
    this.sourceIPs = sourceIPs;
    return this;
  }

  public SearchParamForDescribeSlowLogsInput addSourceIPsItem(String sourceIPsItem) {
    if (this.sourceIPs == null) {
      this.sourceIPs = new ArrayList<String>();
    }
    this.sourceIPs.add(sourceIPsItem);
    return this;
  }

   /**
   * Get sourceIPs
   * @return sourceIPs
  **/
  @Schema(description = "")
  public List<String> getSourceIPs() {
    return sourceIPs;
  }

  public void setSourceIPs(List<String> sourceIPs) {
    this.sourceIPs = sourceIPs;
  }

  public SearchParamForDescribeSlowLogsInput users(List<String> users) {
    this.users = users;
    return this;
  }

  public SearchParamForDescribeSlowLogsInput addUsersItem(String usersItem) {
    if (this.users == null) {
      this.users = new ArrayList<String>();
    }
    this.users.add(usersItem);
    return this;
  }

   /**
   * Get users
   * @return users
  **/
  @Schema(description = "")
  public List<String> getUsers() {
    return users;
  }

  public void setUsers(List<String> users) {
    this.users = users;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchParamForDescribeSlowLogsInput searchParamForDescribeSlowLogsInput = (SearchParamForDescribeSlowLogsInput) o;
    return Objects.equals(this.dbs, searchParamForDescribeSlowLogsInput.dbs) &&
        Objects.equals(this.maxQueryTime, searchParamForDescribeSlowLogsInput.maxQueryTime) &&
        Objects.equals(this.minQueryTime, searchParamForDescribeSlowLogsInput.minQueryTime) &&
        Objects.equals(this.sqLTemplate, searchParamForDescribeSlowLogsInput.sqLTemplate) &&
        Objects.equals(this.sqLTemplateID, searchParamForDescribeSlowLogsInput.sqLTemplateID) &&
        Objects.equals(this.sourceIPs, searchParamForDescribeSlowLogsInput.sourceIPs) &&
        Objects.equals(this.users, searchParamForDescribeSlowLogsInput.users);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dbs, maxQueryTime, minQueryTime, sqLTemplate, sqLTemplateID, sourceIPs, users);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchParamForDescribeSlowLogsInput {\n");
    
    sb.append("    dbs: ").append(toIndentedString(dbs)).append("\n");
    sb.append("    maxQueryTime: ").append(toIndentedString(maxQueryTime)).append("\n");
    sb.append("    minQueryTime: ").append(toIndentedString(minQueryTime)).append("\n");
    sb.append("    sqLTemplate: ").append(toIndentedString(sqLTemplate)).append("\n");
    sb.append("    sqLTemplateID: ").append(toIndentedString(sqLTemplateID)).append("\n");
    sb.append("    sourceIPs: ").append(toIndentedString(sourceIPs)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
