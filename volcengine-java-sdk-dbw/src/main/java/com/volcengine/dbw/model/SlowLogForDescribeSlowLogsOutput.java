/*
 * dbw
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.dbw.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * SlowLogForDescribeSlowLogsOutput
 */



public class SlowLogForDescribeSlowLogsOutput {
  @SerializedName("ConnectionId")
  private Integer connectionId = null;

  @SerializedName("DB")
  private String DB = null;

  @SerializedName("LockTime")
  private Double lockTime = null;

  @SerializedName("QueryTime")
  private Double queryTime = null;

  @SerializedName("RowsExamined")
  private Integer rowsExamined = null;

  @SerializedName("RowsSent")
  private Integer rowsSent = null;

  @SerializedName("SQLTemplate")
  private String sqLTemplate = null;

  @SerializedName("SQLText")
  private String sqLText = null;

  @SerializedName("SourceIP")
  private String sourceIP = null;

  @SerializedName("SqlFingerprint")
  private String sqlFingerprint = null;

  @SerializedName("SqlMethod")
  private String sqlMethod = null;

  @SerializedName("Table")
  private String table = null;

  @SerializedName("Timestamp")
  private Integer timestamp = null;

  @SerializedName("User")
  private String user = null;

  public SlowLogForDescribeSlowLogsOutput connectionId(Integer connectionId) {
    this.connectionId = connectionId;
    return this;
  }

   /**
   * Get connectionId
   * @return connectionId
  **/
  @Schema(description = "")
  public Integer getConnectionId() {
    return connectionId;
  }

  public void setConnectionId(Integer connectionId) {
    this.connectionId = connectionId;
  }

  public SlowLogForDescribeSlowLogsOutput DB(String DB) {
    this.DB = DB;
    return this;
  }

   /**
   * Get DB
   * @return DB
  **/
  @Schema(description = "")
  public String getDB() {
    return DB;
  }

  public void setDB(String DB) {
    this.DB = DB;
  }

  public SlowLogForDescribeSlowLogsOutput lockTime(Double lockTime) {
    this.lockTime = lockTime;
    return this;
  }

   /**
   * Get lockTime
   * @return lockTime
  **/
  @Schema(description = "")
  public Double getLockTime() {
    return lockTime;
  }

  public void setLockTime(Double lockTime) {
    this.lockTime = lockTime;
  }

  public SlowLogForDescribeSlowLogsOutput queryTime(Double queryTime) {
    this.queryTime = queryTime;
    return this;
  }

   /**
   * Get queryTime
   * @return queryTime
  **/
  @Schema(description = "")
  public Double getQueryTime() {
    return queryTime;
  }

  public void setQueryTime(Double queryTime) {
    this.queryTime = queryTime;
  }

  public SlowLogForDescribeSlowLogsOutput rowsExamined(Integer rowsExamined) {
    this.rowsExamined = rowsExamined;
    return this;
  }

   /**
   * Get rowsExamined
   * @return rowsExamined
  **/
  @Schema(description = "")
  public Integer getRowsExamined() {
    return rowsExamined;
  }

  public void setRowsExamined(Integer rowsExamined) {
    this.rowsExamined = rowsExamined;
  }

  public SlowLogForDescribeSlowLogsOutput rowsSent(Integer rowsSent) {
    this.rowsSent = rowsSent;
    return this;
  }

   /**
   * Get rowsSent
   * @return rowsSent
  **/
  @Schema(description = "")
  public Integer getRowsSent() {
    return rowsSent;
  }

  public void setRowsSent(Integer rowsSent) {
    this.rowsSent = rowsSent;
  }

  public SlowLogForDescribeSlowLogsOutput sqLTemplate(String sqLTemplate) {
    this.sqLTemplate = sqLTemplate;
    return this;
  }

   /**
   * Get sqLTemplate
   * @return sqLTemplate
  **/
  @Schema(description = "")
  public String getSqLTemplate() {
    return sqLTemplate;
  }

  public void setSqLTemplate(String sqLTemplate) {
    this.sqLTemplate = sqLTemplate;
  }

  public SlowLogForDescribeSlowLogsOutput sqLText(String sqLText) {
    this.sqLText = sqLText;
    return this;
  }

   /**
   * Get sqLText
   * @return sqLText
  **/
  @Schema(description = "")
  public String getSqLText() {
    return sqLText;
  }

  public void setSqLText(String sqLText) {
    this.sqLText = sqLText;
  }

  public SlowLogForDescribeSlowLogsOutput sourceIP(String sourceIP) {
    this.sourceIP = sourceIP;
    return this;
  }

   /**
   * Get sourceIP
   * @return sourceIP
  **/
  @Schema(description = "")
  public String getSourceIP() {
    return sourceIP;
  }

  public void setSourceIP(String sourceIP) {
    this.sourceIP = sourceIP;
  }

  public SlowLogForDescribeSlowLogsOutput sqlFingerprint(String sqlFingerprint) {
    this.sqlFingerprint = sqlFingerprint;
    return this;
  }

   /**
   * Get sqlFingerprint
   * @return sqlFingerprint
  **/
  @Schema(description = "")
  public String getSqlFingerprint() {
    return sqlFingerprint;
  }

  public void setSqlFingerprint(String sqlFingerprint) {
    this.sqlFingerprint = sqlFingerprint;
  }

  public SlowLogForDescribeSlowLogsOutput sqlMethod(String sqlMethod) {
    this.sqlMethod = sqlMethod;
    return this;
  }

   /**
   * Get sqlMethod
   * @return sqlMethod
  **/
  @Schema(description = "")
  public String getSqlMethod() {
    return sqlMethod;
  }

  public void setSqlMethod(String sqlMethod) {
    this.sqlMethod = sqlMethod;
  }

  public SlowLogForDescribeSlowLogsOutput table(String table) {
    this.table = table;
    return this;
  }

   /**
   * Get table
   * @return table
  **/
  @Schema(description = "")
  public String getTable() {
    return table;
  }

  public void setTable(String table) {
    this.table = table;
  }

  public SlowLogForDescribeSlowLogsOutput timestamp(Integer timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @Schema(description = "")
  public Integer getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(Integer timestamp) {
    this.timestamp = timestamp;
  }

  public SlowLogForDescribeSlowLogsOutput user(String user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @Schema(description = "")
  public String getUser() {
    return user;
  }

  public void setUser(String user) {
    this.user = user;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SlowLogForDescribeSlowLogsOutput slowLogForDescribeSlowLogsOutput = (SlowLogForDescribeSlowLogsOutput) o;
    return Objects.equals(this.connectionId, slowLogForDescribeSlowLogsOutput.connectionId) &&
        Objects.equals(this.DB, slowLogForDescribeSlowLogsOutput.DB) &&
        Objects.equals(this.lockTime, slowLogForDescribeSlowLogsOutput.lockTime) &&
        Objects.equals(this.queryTime, slowLogForDescribeSlowLogsOutput.queryTime) &&
        Objects.equals(this.rowsExamined, slowLogForDescribeSlowLogsOutput.rowsExamined) &&
        Objects.equals(this.rowsSent, slowLogForDescribeSlowLogsOutput.rowsSent) &&
        Objects.equals(this.sqLTemplate, slowLogForDescribeSlowLogsOutput.sqLTemplate) &&
        Objects.equals(this.sqLText, slowLogForDescribeSlowLogsOutput.sqLText) &&
        Objects.equals(this.sourceIP, slowLogForDescribeSlowLogsOutput.sourceIP) &&
        Objects.equals(this.sqlFingerprint, slowLogForDescribeSlowLogsOutput.sqlFingerprint) &&
        Objects.equals(this.sqlMethod, slowLogForDescribeSlowLogsOutput.sqlMethod) &&
        Objects.equals(this.table, slowLogForDescribeSlowLogsOutput.table) &&
        Objects.equals(this.timestamp, slowLogForDescribeSlowLogsOutput.timestamp) &&
        Objects.equals(this.user, slowLogForDescribeSlowLogsOutput.user);
  }

  @Override
  public int hashCode() {
    return Objects.hash(connectionId, DB, lockTime, queryTime, rowsExamined, rowsSent, sqLTemplate, sqLText, sourceIP, sqlFingerprint, sqlMethod, table, timestamp, user);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SlowLogForDescribeSlowLogsOutput {\n");
    
    sb.append("    connectionId: ").append(toIndentedString(connectionId)).append("\n");
    sb.append("    DB: ").append(toIndentedString(DB)).append("\n");
    sb.append("    lockTime: ").append(toIndentedString(lockTime)).append("\n");
    sb.append("    queryTime: ").append(toIndentedString(queryTime)).append("\n");
    sb.append("    rowsExamined: ").append(toIndentedString(rowsExamined)).append("\n");
    sb.append("    rowsSent: ").append(toIndentedString(rowsSent)).append("\n");
    sb.append("    sqLTemplate: ").append(toIndentedString(sqLTemplate)).append("\n");
    sb.append("    sqLText: ").append(toIndentedString(sqLText)).append("\n");
    sb.append("    sourceIP: ").append(toIndentedString(sourceIP)).append("\n");
    sb.append("    sqlFingerprint: ").append(toIndentedString(sqlFingerprint)).append("\n");
    sb.append("    sqlMethod: ").append(toIndentedString(sqlMethod)).append("\n");
    sb.append("    table: ").append(toIndentedString(table)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
