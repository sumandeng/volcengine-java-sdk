/*
 * vedbm
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vedbm.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DatabasesPrivilegeForCreateDatabaseInput
 */



public class DatabasesPrivilegeForCreateDatabaseInput {
  @SerializedName("AccountName")
  private String accountName = null;

  /**
   * Gets or Sets accountPrivilege
   */
  @JsonAdapter(AccountPrivilegeEnum.Adapter.class)
  public enum AccountPrivilegeEnum {
    @SerializedName("Custom")
    CUSTOM("Custom"),
    @SerializedName("DDLOnly")
    DDLONLY("DDLOnly"),
    @SerializedName("DMLOnly")
    DMLONLY("DMLOnly"),
    @SerializedName("ReadOnly")
    READONLY("ReadOnly"),
    @SerializedName("ReadWrite")
    READWRITE("ReadWrite");

    private String value;

    AccountPrivilegeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static AccountPrivilegeEnum fromValue(String input) {
      for (AccountPrivilegeEnum b : AccountPrivilegeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<AccountPrivilegeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AccountPrivilegeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public AccountPrivilegeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return AccountPrivilegeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("AccountPrivilege")
  private AccountPrivilegeEnum accountPrivilege = null;

  @SerializedName("AccountPrivilegeDetail")
  private String accountPrivilegeDetail = null;

  public DatabasesPrivilegeForCreateDatabaseInput accountName(String accountName) {
    this.accountName = accountName;
    return this;
  }

   /**
   * Get accountName
   * @return accountName
  **/
  @Schema(description = "")
  public String getAccountName() {
    return accountName;
  }

  public void setAccountName(String accountName) {
    this.accountName = accountName;
  }

  public DatabasesPrivilegeForCreateDatabaseInput accountPrivilege(AccountPrivilegeEnum accountPrivilege) {
    this.accountPrivilege = accountPrivilege;
    return this;
  }

   /**
   * Get accountPrivilege
   * @return accountPrivilege
  **/
  @Schema(description = "")
  public AccountPrivilegeEnum getAccountPrivilege() {
    return accountPrivilege;
  }

  public void setAccountPrivilege(AccountPrivilegeEnum accountPrivilege) {
    this.accountPrivilege = accountPrivilege;
  }

  public DatabasesPrivilegeForCreateDatabaseInput accountPrivilegeDetail(String accountPrivilegeDetail) {
    this.accountPrivilegeDetail = accountPrivilegeDetail;
    return this;
  }

   /**
   * Get accountPrivilegeDetail
   * @return accountPrivilegeDetail
  **/
  @Schema(description = "")
  public String getAccountPrivilegeDetail() {
    return accountPrivilegeDetail;
  }

  public void setAccountPrivilegeDetail(String accountPrivilegeDetail) {
    this.accountPrivilegeDetail = accountPrivilegeDetail;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DatabasesPrivilegeForCreateDatabaseInput databasesPrivilegeForCreateDatabaseInput = (DatabasesPrivilegeForCreateDatabaseInput) o;
    return Objects.equals(this.accountName, databasesPrivilegeForCreateDatabaseInput.accountName) &&
        Objects.equals(this.accountPrivilege, databasesPrivilegeForCreateDatabaseInput.accountPrivilege) &&
        Objects.equals(this.accountPrivilegeDetail, databasesPrivilegeForCreateDatabaseInput.accountPrivilegeDetail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountName, accountPrivilege, accountPrivilegeDetail);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DatabasesPrivilegeForCreateDatabaseInput {\n");
    
    sb.append("    accountName: ").append(toIndentedString(accountName)).append("\n");
    sb.append("    accountPrivilege: ").append(toIndentedString(accountPrivilege)).append("\n");
    sb.append("    accountPrivilegeDetail: ").append(toIndentedString(accountPrivilegeDetail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
