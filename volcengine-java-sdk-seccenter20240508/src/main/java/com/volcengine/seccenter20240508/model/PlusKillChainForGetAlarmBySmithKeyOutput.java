/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * PlusKillChainForGetAlarmBySmithKeyOutput
 */



public class PlusKillChainForGetAlarmBySmithKeyOutput {
  @SerializedName("Docker")
  private String docker = null;

  @SerializedName("ExternalConns")
  private String externalConns = null;

  @SerializedName("PidSet")
  private String pidSet = null;

  @SerializedName("Ssh")
  private String ssh = null;

  @SerializedName("Timestamp")
  private String timestamp = null;

  @SerializedName("TopChain")
  private String topChain = null;

  @SerializedName("TopRuleChain")
  private List<String> topRuleChain = null;

  public PlusKillChainForGetAlarmBySmithKeyOutput docker(String docker) {
    this.docker = docker;
    return this;
  }

   /**
   * Get docker
   * @return docker
  **/
  @Schema(description = "")
  public String getDocker() {
    return docker;
  }

  public void setDocker(String docker) {
    this.docker = docker;
  }

  public PlusKillChainForGetAlarmBySmithKeyOutput externalConns(String externalConns) {
    this.externalConns = externalConns;
    return this;
  }

   /**
   * Get externalConns
   * @return externalConns
  **/
  @Schema(description = "")
  public String getExternalConns() {
    return externalConns;
  }

  public void setExternalConns(String externalConns) {
    this.externalConns = externalConns;
  }

  public PlusKillChainForGetAlarmBySmithKeyOutput pidSet(String pidSet) {
    this.pidSet = pidSet;
    return this;
  }

   /**
   * Get pidSet
   * @return pidSet
  **/
  @Schema(description = "")
  public String getPidSet() {
    return pidSet;
  }

  public void setPidSet(String pidSet) {
    this.pidSet = pidSet;
  }

  public PlusKillChainForGetAlarmBySmithKeyOutput ssh(String ssh) {
    this.ssh = ssh;
    return this;
  }

   /**
   * Get ssh
   * @return ssh
  **/
  @Schema(description = "")
  public String getSsh() {
    return ssh;
  }

  public void setSsh(String ssh) {
    this.ssh = ssh;
  }

  public PlusKillChainForGetAlarmBySmithKeyOutput timestamp(String timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @Schema(description = "")
  public String getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }

  public PlusKillChainForGetAlarmBySmithKeyOutput topChain(String topChain) {
    this.topChain = topChain;
    return this;
  }

   /**
   * Get topChain
   * @return topChain
  **/
  @Schema(description = "")
  public String getTopChain() {
    return topChain;
  }

  public void setTopChain(String topChain) {
    this.topChain = topChain;
  }

  public PlusKillChainForGetAlarmBySmithKeyOutput topRuleChain(List<String> topRuleChain) {
    this.topRuleChain = topRuleChain;
    return this;
  }

  public PlusKillChainForGetAlarmBySmithKeyOutput addTopRuleChainItem(String topRuleChainItem) {
    if (this.topRuleChain == null) {
      this.topRuleChain = new ArrayList<String>();
    }
    this.topRuleChain.add(topRuleChainItem);
    return this;
  }

   /**
   * Get topRuleChain
   * @return topRuleChain
  **/
  @Schema(description = "")
  public List<String> getTopRuleChain() {
    return topRuleChain;
  }

  public void setTopRuleChain(List<String> topRuleChain) {
    this.topRuleChain = topRuleChain;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlusKillChainForGetAlarmBySmithKeyOutput plusKillChainForGetAlarmBySmithKeyOutput = (PlusKillChainForGetAlarmBySmithKeyOutput) o;
    return Objects.equals(this.docker, plusKillChainForGetAlarmBySmithKeyOutput.docker) &&
        Objects.equals(this.externalConns, plusKillChainForGetAlarmBySmithKeyOutput.externalConns) &&
        Objects.equals(this.pidSet, plusKillChainForGetAlarmBySmithKeyOutput.pidSet) &&
        Objects.equals(this.ssh, plusKillChainForGetAlarmBySmithKeyOutput.ssh) &&
        Objects.equals(this.timestamp, plusKillChainForGetAlarmBySmithKeyOutput.timestamp) &&
        Objects.equals(this.topChain, plusKillChainForGetAlarmBySmithKeyOutput.topChain) &&
        Objects.equals(this.topRuleChain, plusKillChainForGetAlarmBySmithKeyOutput.topRuleChain);
  }

  @Override
  public int hashCode() {
    return Objects.hash(docker, externalConns, pidSet, ssh, timestamp, topChain, topRuleChain);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlusKillChainForGetAlarmBySmithKeyOutput {\n");
    
    sb.append("    docker: ").append(toIndentedString(docker)).append("\n");
    sb.append("    externalConns: ").append(toIndentedString(externalConns)).append("\n");
    sb.append("    pidSet: ").append(toIndentedString(pidSet)).append("\n");
    sb.append("    ssh: ").append(toIndentedString(ssh)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    topChain: ").append(toIndentedString(topChain)).append("\n");
    sb.append("    topRuleChain: ").append(toIndentedString(topRuleChain)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
