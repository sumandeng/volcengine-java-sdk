/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DataForListAssetClustersOutput
 */



public class DataForListAssetClustersOutput {
  @SerializedName("ClusterDesc")
  private String clusterDesc = null;

  @SerializedName("CreateTime")
  private Integer createTime = null;

  @SerializedName("ExternalClusterId")
  private String externalClusterId = null;

  @SerializedName("HasAuditRisk")
  private Boolean hasAuditRisk = null;

  @SerializedName("HasCveRisk")
  private Boolean hasCveRisk = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("KubernetesVersion")
  private String kubernetesVersion = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("NodeCount")
  private Integer nodeCount = null;

  @SerializedName("Region")
  private String region = null;

  @SerializedName("RegionName")
  private String regionName = null;

  @SerializedName("RunningNodeCount")
  private Integer runningNodeCount = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("SyncTime")
  private Integer syncTime = null;

  @SerializedName("Type")
  private String type = null;

  public DataForListAssetClustersOutput clusterDesc(String clusterDesc) {
    this.clusterDesc = clusterDesc;
    return this;
  }

   /**
   * Get clusterDesc
   * @return clusterDesc
  **/
  @Schema(description = "")
  public String getClusterDesc() {
    return clusterDesc;
  }

  public void setClusterDesc(String clusterDesc) {
    this.clusterDesc = clusterDesc;
  }

  public DataForListAssetClustersOutput createTime(Integer createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public Integer getCreateTime() {
    return createTime;
  }

  public void setCreateTime(Integer createTime) {
    this.createTime = createTime;
  }

  public DataForListAssetClustersOutput externalClusterId(String externalClusterId) {
    this.externalClusterId = externalClusterId;
    return this;
  }

   /**
   * Get externalClusterId
   * @return externalClusterId
  **/
  @Schema(description = "")
  public String getExternalClusterId() {
    return externalClusterId;
  }

  public void setExternalClusterId(String externalClusterId) {
    this.externalClusterId = externalClusterId;
  }

  public DataForListAssetClustersOutput hasAuditRisk(Boolean hasAuditRisk) {
    this.hasAuditRisk = hasAuditRisk;
    return this;
  }

   /**
   * Get hasAuditRisk
   * @return hasAuditRisk
  **/
  @Schema(description = "")
  public Boolean isHasAuditRisk() {
    return hasAuditRisk;
  }

  public void setHasAuditRisk(Boolean hasAuditRisk) {
    this.hasAuditRisk = hasAuditRisk;
  }

  public DataForListAssetClustersOutput hasCveRisk(Boolean hasCveRisk) {
    this.hasCveRisk = hasCveRisk;
    return this;
  }

   /**
   * Get hasCveRisk
   * @return hasCveRisk
  **/
  @Schema(description = "")
  public Boolean isHasCveRisk() {
    return hasCveRisk;
  }

  public void setHasCveRisk(Boolean hasCveRisk) {
    this.hasCveRisk = hasCveRisk;
  }

  public DataForListAssetClustersOutput id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public DataForListAssetClustersOutput kubernetesVersion(String kubernetesVersion) {
    this.kubernetesVersion = kubernetesVersion;
    return this;
  }

   /**
   * Get kubernetesVersion
   * @return kubernetesVersion
  **/
  @Schema(description = "")
  public String getKubernetesVersion() {
    return kubernetesVersion;
  }

  public void setKubernetesVersion(String kubernetesVersion) {
    this.kubernetesVersion = kubernetesVersion;
  }

  public DataForListAssetClustersOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DataForListAssetClustersOutput nodeCount(Integer nodeCount) {
    this.nodeCount = nodeCount;
    return this;
  }

   /**
   * Get nodeCount
   * @return nodeCount
  **/
  @Schema(description = "")
  public Integer getNodeCount() {
    return nodeCount;
  }

  public void setNodeCount(Integer nodeCount) {
    this.nodeCount = nodeCount;
  }

  public DataForListAssetClustersOutput region(String region) {
    this.region = region;
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @Schema(description = "")
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }

  public DataForListAssetClustersOutput regionName(String regionName) {
    this.regionName = regionName;
    return this;
  }

   /**
   * Get regionName
   * @return regionName
  **/
  @Schema(description = "")
  public String getRegionName() {
    return regionName;
  }

  public void setRegionName(String regionName) {
    this.regionName = regionName;
  }

  public DataForListAssetClustersOutput runningNodeCount(Integer runningNodeCount) {
    this.runningNodeCount = runningNodeCount;
    return this;
  }

   /**
   * Get runningNodeCount
   * @return runningNodeCount
  **/
  @Schema(description = "")
  public Integer getRunningNodeCount() {
    return runningNodeCount;
  }

  public void setRunningNodeCount(Integer runningNodeCount) {
    this.runningNodeCount = runningNodeCount;
  }

  public DataForListAssetClustersOutput status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public DataForListAssetClustersOutput syncTime(Integer syncTime) {
    this.syncTime = syncTime;
    return this;
  }

   /**
   * Get syncTime
   * @return syncTime
  **/
  @Schema(description = "")
  public Integer getSyncTime() {
    return syncTime;
  }

  public void setSyncTime(Integer syncTime) {
    this.syncTime = syncTime;
  }

  public DataForListAssetClustersOutput type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataForListAssetClustersOutput dataForListAssetClustersOutput = (DataForListAssetClustersOutput) o;
    return Objects.equals(this.clusterDesc, dataForListAssetClustersOutput.clusterDesc) &&
        Objects.equals(this.createTime, dataForListAssetClustersOutput.createTime) &&
        Objects.equals(this.externalClusterId, dataForListAssetClustersOutput.externalClusterId) &&
        Objects.equals(this.hasAuditRisk, dataForListAssetClustersOutput.hasAuditRisk) &&
        Objects.equals(this.hasCveRisk, dataForListAssetClustersOutput.hasCveRisk) &&
        Objects.equals(this.id, dataForListAssetClustersOutput.id) &&
        Objects.equals(this.kubernetesVersion, dataForListAssetClustersOutput.kubernetesVersion) &&
        Objects.equals(this.name, dataForListAssetClustersOutput.name) &&
        Objects.equals(this.nodeCount, dataForListAssetClustersOutput.nodeCount) &&
        Objects.equals(this.region, dataForListAssetClustersOutput.region) &&
        Objects.equals(this.regionName, dataForListAssetClustersOutput.regionName) &&
        Objects.equals(this.runningNodeCount, dataForListAssetClustersOutput.runningNodeCount) &&
        Objects.equals(this.status, dataForListAssetClustersOutput.status) &&
        Objects.equals(this.syncTime, dataForListAssetClustersOutput.syncTime) &&
        Objects.equals(this.type, dataForListAssetClustersOutput.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clusterDesc, createTime, externalClusterId, hasAuditRisk, hasCveRisk, id, kubernetesVersion, name, nodeCount, region, regionName, runningNodeCount, status, syncTime, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataForListAssetClustersOutput {\n");
    
    sb.append("    clusterDesc: ").append(toIndentedString(clusterDesc)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    externalClusterId: ").append(toIndentedString(externalClusterId)).append("\n");
    sb.append("    hasAuditRisk: ").append(toIndentedString(hasAuditRisk)).append("\n");
    sb.append("    hasCveRisk: ").append(toIndentedString(hasCveRisk)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    kubernetesVersion: ").append(toIndentedString(kubernetesVersion)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nodeCount: ").append(toIndentedString(nodeCount)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    regionName: ").append(toIndentedString(regionName)).append("\n");
    sb.append("    runningNodeCount: ").append(toIndentedString(runningNodeCount)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    syncTime: ").append(toIndentedString(syncTime)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
