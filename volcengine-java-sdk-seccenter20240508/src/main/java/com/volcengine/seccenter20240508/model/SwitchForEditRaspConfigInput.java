/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * SwitchForEditRaspConfigInput
 */



public class SwitchForEditRaspConfigInput {
  @SerializedName("classupload")
  private Boolean classupload = null;

  @SerializedName("file")
  private Boolean file = null;

  @SerializedName("load")
  private Boolean load = null;

  @SerializedName("memshell")
  private Boolean memshell = null;

  @SerializedName("net")
  private Boolean net = null;

  @SerializedName("process")
  private Boolean process = null;

  @SerializedName("reflect")
  private Boolean reflect = null;

  public SwitchForEditRaspConfigInput classupload(Boolean classupload) {
    this.classupload = classupload;
    return this;
  }

   /**
   * Get classupload
   * @return classupload
  **/
  @Schema(description = "")
  public Boolean isClassupload() {
    return classupload;
  }

  public void setClassupload(Boolean classupload) {
    this.classupload = classupload;
  }

  public SwitchForEditRaspConfigInput file(Boolean file) {
    this.file = file;
    return this;
  }

   /**
   * Get file
   * @return file
  **/
  @Schema(description = "")
  public Boolean isFile() {
    return file;
  }

  public void setFile(Boolean file) {
    this.file = file;
  }

  public SwitchForEditRaspConfigInput load(Boolean load) {
    this.load = load;
    return this;
  }

   /**
   * Get load
   * @return load
  **/
  @Schema(description = "")
  public Boolean isLoad() {
    return load;
  }

  public void setLoad(Boolean load) {
    this.load = load;
  }

  public SwitchForEditRaspConfigInput memshell(Boolean memshell) {
    this.memshell = memshell;
    return this;
  }

   /**
   * Get memshell
   * @return memshell
  **/
  @Schema(description = "")
  public Boolean isMemshell() {
    return memshell;
  }

  public void setMemshell(Boolean memshell) {
    this.memshell = memshell;
  }

  public SwitchForEditRaspConfigInput net(Boolean net) {
    this.net = net;
    return this;
  }

   /**
   * Get net
   * @return net
  **/
  @Schema(description = "")
  public Boolean isNet() {
    return net;
  }

  public void setNet(Boolean net) {
    this.net = net;
  }

  public SwitchForEditRaspConfigInput process(Boolean process) {
    this.process = process;
    return this;
  }

   /**
   * Get process
   * @return process
  **/
  @Schema(description = "")
  public Boolean isProcess() {
    return process;
  }

  public void setProcess(Boolean process) {
    this.process = process;
  }

  public SwitchForEditRaspConfigInput reflect(Boolean reflect) {
    this.reflect = reflect;
    return this;
  }

   /**
   * Get reflect
   * @return reflect
  **/
  @Schema(description = "")
  public Boolean isReflect() {
    return reflect;
  }

  public void setReflect(Boolean reflect) {
    this.reflect = reflect;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SwitchForEditRaspConfigInput switchForEditRaspConfigInput = (SwitchForEditRaspConfigInput) o;
    return Objects.equals(this.classupload, switchForEditRaspConfigInput.classupload) &&
        Objects.equals(this.file, switchForEditRaspConfigInput.file) &&
        Objects.equals(this.load, switchForEditRaspConfigInput.load) &&
        Objects.equals(this.memshell, switchForEditRaspConfigInput.memshell) &&
        Objects.equals(this.net, switchForEditRaspConfigInput.net) &&
        Objects.equals(this.process, switchForEditRaspConfigInput.process) &&
        Objects.equals(this.reflect, switchForEditRaspConfigInput.reflect);
  }

  @Override
  public int hashCode() {
    return Objects.hash(classupload, file, load, memshell, net, process, reflect);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SwitchForEditRaspConfigInput {\n");
    
    sb.append("    classupload: ").append(toIndentedString(classupload)).append("\n");
    sb.append("    file: ").append(toIndentedString(file)).append("\n");
    sb.append("    load: ").append(toIndentedString(load)).append("\n");
    sb.append("    memshell: ").append(toIndentedString(memshell)).append("\n");
    sb.append("    net: ").append(toIndentedString(net)).append("\n");
    sb.append("    process: ").append(toIndentedString(process)).append("\n");
    sb.append("    reflect: ").append(toIndentedString(reflect)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
