/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * BasicQuotaForGetTenantQuotaOutput
 */



public class BasicQuotaForGetTenantQuotaOutput {
  @SerializedName("ExpireTime")
  private Integer expireTime = null;

  @SerializedName("PaidType")
  private String paidType = null;

  @SerializedName("TotalCount")
  private Integer totalCount = null;

  @SerializedName("UsedCount")
  private Integer usedCount = null;

  @SerializedName("Version")
  private Integer version = null;

  public BasicQuotaForGetTenantQuotaOutput expireTime(Integer expireTime) {
    this.expireTime = expireTime;
    return this;
  }

   /**
   * Get expireTime
   * @return expireTime
  **/
  @Schema(description = "")
  public Integer getExpireTime() {
    return expireTime;
  }

  public void setExpireTime(Integer expireTime) {
    this.expireTime = expireTime;
  }

  public BasicQuotaForGetTenantQuotaOutput paidType(String paidType) {
    this.paidType = paidType;
    return this;
  }

   /**
   * Get paidType
   * @return paidType
  **/
  @Schema(description = "")
  public String getPaidType() {
    return paidType;
  }

  public void setPaidType(String paidType) {
    this.paidType = paidType;
  }

  public BasicQuotaForGetTenantQuotaOutput totalCount(Integer totalCount) {
    this.totalCount = totalCount;
    return this;
  }

   /**
   * Get totalCount
   * @return totalCount
  **/
  @Schema(description = "")
  public Integer getTotalCount() {
    return totalCount;
  }

  public void setTotalCount(Integer totalCount) {
    this.totalCount = totalCount;
  }

  public BasicQuotaForGetTenantQuotaOutput usedCount(Integer usedCount) {
    this.usedCount = usedCount;
    return this;
  }

   /**
   * Get usedCount
   * @return usedCount
  **/
  @Schema(description = "")
  public Integer getUsedCount() {
    return usedCount;
  }

  public void setUsedCount(Integer usedCount) {
    this.usedCount = usedCount;
  }

  public BasicQuotaForGetTenantQuotaOutput version(Integer version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public Integer getVersion() {
    return version;
  }

  public void setVersion(Integer version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BasicQuotaForGetTenantQuotaOutput basicQuotaForGetTenantQuotaOutput = (BasicQuotaForGetTenantQuotaOutput) o;
    return Objects.equals(this.expireTime, basicQuotaForGetTenantQuotaOutput.expireTime) &&
        Objects.equals(this.paidType, basicQuotaForGetTenantQuotaOutput.paidType) &&
        Objects.equals(this.totalCount, basicQuotaForGetTenantQuotaOutput.totalCount) &&
        Objects.equals(this.usedCount, basicQuotaForGetTenantQuotaOutput.usedCount) &&
        Objects.equals(this.version, basicQuotaForGetTenantQuotaOutput.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(expireTime, paidType, totalCount, usedCount, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BasicQuotaForGetTenantQuotaOutput {\n");
    
    sb.append("    expireTime: ").append(toIndentedString(expireTime)).append("\n");
    sb.append("    paidType: ").append(toIndentedString(paidType)).append("\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("    usedCount: ").append(toIndentedString(usedCount)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
