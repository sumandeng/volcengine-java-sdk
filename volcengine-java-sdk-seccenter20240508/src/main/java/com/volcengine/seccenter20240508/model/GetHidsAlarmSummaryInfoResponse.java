/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.seccenter20240508.model.AlarmContentForGetHidsAlarmSummaryInfoOutput;
import com.volcengine.seccenter20240508.model.AlarmDescForGetHidsAlarmSummaryInfoOutput;
import com.volcengine.seccenter20240508.model.AssetInfoForGetHidsAlarmSummaryInfoOutput;
import com.volcengine.seccenter20240508.model.ContainerInfoForGetHidsAlarmSummaryInfoOutput;
import com.volcengine.seccenter20240508.model.EndpointTraceForGetHidsAlarmSummaryInfoOutput;
import com.volcengine.seccenter20240508.model.HandlingRecordForGetHidsAlarmSummaryInfoOutput;
import com.volcengine.seccenter20240508.model.RawDataForGetHidsAlarmSummaryInfoOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * GetHidsAlarmSummaryInfoResponse
 */



public class GetHidsAlarmSummaryInfoResponse extends com.volcengine.model.AbstractResponse {
  @SerializedName("AlarmContent")
  private AlarmContentForGetHidsAlarmSummaryInfoOutput alarmContent = null;

  @SerializedName("AlarmDesc")
  private AlarmDescForGetHidsAlarmSummaryInfoOutput alarmDesc = null;

  @SerializedName("AssetInfo")
  private AssetInfoForGetHidsAlarmSummaryInfoOutput assetInfo = null;

  @SerializedName("ContainerInfo")
  private ContainerInfoForGetHidsAlarmSummaryInfoOutput containerInfo = null;

  @SerializedName("EndpointTrace")
  private EndpointTraceForGetHidsAlarmSummaryInfoOutput endpointTrace = null;

  @SerializedName("HandlingRecords")
  private List<HandlingRecordForGetHidsAlarmSummaryInfoOutput> handlingRecords = null;

  @SerializedName("RawData")
  private RawDataForGetHidsAlarmSummaryInfoOutput rawData = null;

  public GetHidsAlarmSummaryInfoResponse alarmContent(AlarmContentForGetHidsAlarmSummaryInfoOutput alarmContent) {
    this.alarmContent = alarmContent;
    return this;
  }

   /**
   * Get alarmContent
   * @return alarmContent
  **/
  @Valid
  @Schema(description = "")
  public AlarmContentForGetHidsAlarmSummaryInfoOutput getAlarmContent() {
    return alarmContent;
  }

  public void setAlarmContent(AlarmContentForGetHidsAlarmSummaryInfoOutput alarmContent) {
    this.alarmContent = alarmContent;
  }

  public GetHidsAlarmSummaryInfoResponse alarmDesc(AlarmDescForGetHidsAlarmSummaryInfoOutput alarmDesc) {
    this.alarmDesc = alarmDesc;
    return this;
  }

   /**
   * Get alarmDesc
   * @return alarmDesc
  **/
  @Valid
  @Schema(description = "")
  public AlarmDescForGetHidsAlarmSummaryInfoOutput getAlarmDesc() {
    return alarmDesc;
  }

  public void setAlarmDesc(AlarmDescForGetHidsAlarmSummaryInfoOutput alarmDesc) {
    this.alarmDesc = alarmDesc;
  }

  public GetHidsAlarmSummaryInfoResponse assetInfo(AssetInfoForGetHidsAlarmSummaryInfoOutput assetInfo) {
    this.assetInfo = assetInfo;
    return this;
  }

   /**
   * Get assetInfo
   * @return assetInfo
  **/
  @Valid
  @Schema(description = "")
  public AssetInfoForGetHidsAlarmSummaryInfoOutput getAssetInfo() {
    return assetInfo;
  }

  public void setAssetInfo(AssetInfoForGetHidsAlarmSummaryInfoOutput assetInfo) {
    this.assetInfo = assetInfo;
  }

  public GetHidsAlarmSummaryInfoResponse containerInfo(ContainerInfoForGetHidsAlarmSummaryInfoOutput containerInfo) {
    this.containerInfo = containerInfo;
    return this;
  }

   /**
   * Get containerInfo
   * @return containerInfo
  **/
  @Valid
  @Schema(description = "")
  public ContainerInfoForGetHidsAlarmSummaryInfoOutput getContainerInfo() {
    return containerInfo;
  }

  public void setContainerInfo(ContainerInfoForGetHidsAlarmSummaryInfoOutput containerInfo) {
    this.containerInfo = containerInfo;
  }

  public GetHidsAlarmSummaryInfoResponse endpointTrace(EndpointTraceForGetHidsAlarmSummaryInfoOutput endpointTrace) {
    this.endpointTrace = endpointTrace;
    return this;
  }

   /**
   * Get endpointTrace
   * @return endpointTrace
  **/
  @Valid
  @Schema(description = "")
  public EndpointTraceForGetHidsAlarmSummaryInfoOutput getEndpointTrace() {
    return endpointTrace;
  }

  public void setEndpointTrace(EndpointTraceForGetHidsAlarmSummaryInfoOutput endpointTrace) {
    this.endpointTrace = endpointTrace;
  }

  public GetHidsAlarmSummaryInfoResponse handlingRecords(List<HandlingRecordForGetHidsAlarmSummaryInfoOutput> handlingRecords) {
    this.handlingRecords = handlingRecords;
    return this;
  }

  public GetHidsAlarmSummaryInfoResponse addHandlingRecordsItem(HandlingRecordForGetHidsAlarmSummaryInfoOutput handlingRecordsItem) {
    if (this.handlingRecords == null) {
      this.handlingRecords = new ArrayList<HandlingRecordForGetHidsAlarmSummaryInfoOutput>();
    }
    this.handlingRecords.add(handlingRecordsItem);
    return this;
  }

   /**
   * Get handlingRecords
   * @return handlingRecords
  **/
  @Valid
  @Schema(description = "")
  public List<HandlingRecordForGetHidsAlarmSummaryInfoOutput> getHandlingRecords() {
    return handlingRecords;
  }

  public void setHandlingRecords(List<HandlingRecordForGetHidsAlarmSummaryInfoOutput> handlingRecords) {
    this.handlingRecords = handlingRecords;
  }

  public GetHidsAlarmSummaryInfoResponse rawData(RawDataForGetHidsAlarmSummaryInfoOutput rawData) {
    this.rawData = rawData;
    return this;
  }

   /**
   * Get rawData
   * @return rawData
  **/
  @Valid
  @Schema(description = "")
  public RawDataForGetHidsAlarmSummaryInfoOutput getRawData() {
    return rawData;
  }

  public void setRawData(RawDataForGetHidsAlarmSummaryInfoOutput rawData) {
    this.rawData = rawData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetHidsAlarmSummaryInfoResponse getHidsAlarmSummaryInfoResponse = (GetHidsAlarmSummaryInfoResponse) o;
    return Objects.equals(this.alarmContent, getHidsAlarmSummaryInfoResponse.alarmContent) &&
        Objects.equals(this.alarmDesc, getHidsAlarmSummaryInfoResponse.alarmDesc) &&
        Objects.equals(this.assetInfo, getHidsAlarmSummaryInfoResponse.assetInfo) &&
        Objects.equals(this.containerInfo, getHidsAlarmSummaryInfoResponse.containerInfo) &&
        Objects.equals(this.endpointTrace, getHidsAlarmSummaryInfoResponse.endpointTrace) &&
        Objects.equals(this.handlingRecords, getHidsAlarmSummaryInfoResponse.handlingRecords) &&
        Objects.equals(this.rawData, getHidsAlarmSummaryInfoResponse.rawData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alarmContent, alarmDesc, assetInfo, containerInfo, endpointTrace, handlingRecords, rawData);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetHidsAlarmSummaryInfoResponse {\n");
    
    sb.append("    alarmContent: ").append(toIndentedString(alarmContent)).append("\n");
    sb.append("    alarmDesc: ").append(toIndentedString(alarmDesc)).append("\n");
    sb.append("    assetInfo: ").append(toIndentedString(assetInfo)).append("\n");
    sb.append("    containerInfo: ").append(toIndentedString(containerInfo)).append("\n");
    sb.append("    endpointTrace: ").append(toIndentedString(endpointTrace)).append("\n");
    sb.append("    handlingRecords: ").append(toIndentedString(handlingRecords)).append("\n");
    sb.append("    rawData: ").append(toIndentedString(rawData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
