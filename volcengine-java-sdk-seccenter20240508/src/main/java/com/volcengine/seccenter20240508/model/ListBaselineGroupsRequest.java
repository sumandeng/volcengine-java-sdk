/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListBaselineGroupsRequest
 */



public class ListBaselineGroupsRequest {
  /**
   * Gets or Sets assetType
   */
  @JsonAdapter(AssetTypeEnum.Adapter.class)
  public enum AssetTypeEnum {
    @SerializedName("Host")
    HOST("Host"),
    @SerializedName("Dev")
    DEV("Dev");

    private String value;

    AssetTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static AssetTypeEnum fromValue(String input) {
      for (AssetTypeEnum b : AssetTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<AssetTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AssetTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public AssetTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return AssetTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("AssetType")
  private AssetTypeEnum assetType = null;

  @SerializedName("IfContainer")
  private Boolean ifContainer = null;

  public ListBaselineGroupsRequest assetType(AssetTypeEnum assetType) {
    this.assetType = assetType;
    return this;
  }

   /**
   * Get assetType
   * @return assetType
  **/
  @Schema(description = "")
  public AssetTypeEnum getAssetType() {
    return assetType;
  }

  public void setAssetType(AssetTypeEnum assetType) {
    this.assetType = assetType;
  }

  public ListBaselineGroupsRequest ifContainer(Boolean ifContainer) {
    this.ifContainer = ifContainer;
    return this;
  }

   /**
   * Get ifContainer
   * @return ifContainer
  **/
  @Schema(description = "")
  public Boolean isIfContainer() {
    return ifContainer;
  }

  public void setIfContainer(Boolean ifContainer) {
    this.ifContainer = ifContainer;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListBaselineGroupsRequest listBaselineGroupsRequest = (ListBaselineGroupsRequest) o;
    return Objects.equals(this.assetType, listBaselineGroupsRequest.assetType) &&
        Objects.equals(this.ifContainer, listBaselineGroupsRequest.ifContainer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assetType, ifContainer);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListBaselineGroupsRequest {\n");
    
    sb.append("    assetType: ").append(toIndentedString(assetType)).append("\n");
    sb.append("    ifContainer: ").append(toIndentedString(ifContainer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
