/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.seccenter20240508.model.FileForHandleAlarmByAgentInput;
import com.volcengine.seccenter20240508.model.ProcessForHandleAlarmByAgentInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * HandleAlarmByAgentRequest
 */



public class HandleAlarmByAgentRequest {
  @SerializedName("AlarmID")
  private String alarmID = null;

  /**
   * Gets or Sets alarmType
   */
  @JsonAdapter(AlarmTypeEnum.Adapter.class)
  public enum AlarmTypeEnum {
    @SerializedName("hids")
    HIDS("hids"),
    @SerializedName("virus")
    VIRUS("virus");

    private String value;

    AlarmTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static AlarmTypeEnum fromValue(String input) {
      for (AlarmTypeEnum b : AlarmTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<AlarmTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AlarmTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public AlarmTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return AlarmTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("AlarmType")
  private AlarmTypeEnum alarmType = null;

  @SerializedName("Files")
  private List<FileForHandleAlarmByAgentInput> files = null;

  @SerializedName("Processes")
  private List<ProcessForHandleAlarmByAgentInput> processes = null;

  public HandleAlarmByAgentRequest alarmID(String alarmID) {
    this.alarmID = alarmID;
    return this;
  }

   /**
   * Get alarmID
   * @return alarmID
  **/
  @Schema(description = "")
  public String getAlarmID() {
    return alarmID;
  }

  public void setAlarmID(String alarmID) {
    this.alarmID = alarmID;
  }

  public HandleAlarmByAgentRequest alarmType(AlarmTypeEnum alarmType) {
    this.alarmType = alarmType;
    return this;
  }

   /**
   * Get alarmType
   * @return alarmType
  **/
  @NotNull
  @Schema(required = true, description = "")
  public AlarmTypeEnum getAlarmType() {
    return alarmType;
  }

  public void setAlarmType(AlarmTypeEnum alarmType) {
    this.alarmType = alarmType;
  }

  public HandleAlarmByAgentRequest files(List<FileForHandleAlarmByAgentInput> files) {
    this.files = files;
    return this;
  }

  public HandleAlarmByAgentRequest addFilesItem(FileForHandleAlarmByAgentInput filesItem) {
    if (this.files == null) {
      this.files = new ArrayList<FileForHandleAlarmByAgentInput>();
    }
    this.files.add(filesItem);
    return this;
  }

   /**
   * Get files
   * @return files
  **/
  @Valid
  @Schema(description = "")
  public List<FileForHandleAlarmByAgentInput> getFiles() {
    return files;
  }

  public void setFiles(List<FileForHandleAlarmByAgentInput> files) {
    this.files = files;
  }

  public HandleAlarmByAgentRequest processes(List<ProcessForHandleAlarmByAgentInput> processes) {
    this.processes = processes;
    return this;
  }

  public HandleAlarmByAgentRequest addProcessesItem(ProcessForHandleAlarmByAgentInput processesItem) {
    if (this.processes == null) {
      this.processes = new ArrayList<ProcessForHandleAlarmByAgentInput>();
    }
    this.processes.add(processesItem);
    return this;
  }

   /**
   * Get processes
   * @return processes
  **/
  @Valid
  @Schema(description = "")
  public List<ProcessForHandleAlarmByAgentInput> getProcesses() {
    return processes;
  }

  public void setProcesses(List<ProcessForHandleAlarmByAgentInput> processes) {
    this.processes = processes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HandleAlarmByAgentRequest handleAlarmByAgentRequest = (HandleAlarmByAgentRequest) o;
    return Objects.equals(this.alarmID, handleAlarmByAgentRequest.alarmID) &&
        Objects.equals(this.alarmType, handleAlarmByAgentRequest.alarmType) &&
        Objects.equals(this.files, handleAlarmByAgentRequest.files) &&
        Objects.equals(this.processes, handleAlarmByAgentRequest.processes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alarmID, alarmType, files, processes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HandleAlarmByAgentRequest {\n");
    
    sb.append("    alarmID: ").append(toIndentedString(alarmID)).append("\n");
    sb.append("    alarmType: ").append(toIndentedString(alarmType)).append("\n");
    sb.append("    files: ").append(toIndentedString(files)).append("\n");
    sb.append("    processes: ").append(toIndentedString(processes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
