/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DataForGetCisDetailOutput
 */



public class DataForGetCisDetailOutput {
  @SerializedName("Audit")
  private String audit = null;

  @SerializedName("BenchmarkType")
  private String benchmarkType = null;

  @SerializedName("CheckType")
  private String checkType = null;

  @SerializedName("Remediation")
  private String remediation = null;

  @SerializedName("RuleID")
  private String ruleID = null;

  @SerializedName("SectionDesc")
  private String sectionDesc = null;

  @SerializedName("SectionID")
  private String sectionID = null;

  @SerializedName("Severity")
  private String severity = null;

  public DataForGetCisDetailOutput audit(String audit) {
    this.audit = audit;
    return this;
  }

   /**
   * Get audit
   * @return audit
  **/
  @Schema(description = "")
  public String getAudit() {
    return audit;
  }

  public void setAudit(String audit) {
    this.audit = audit;
  }

  public DataForGetCisDetailOutput benchmarkType(String benchmarkType) {
    this.benchmarkType = benchmarkType;
    return this;
  }

   /**
   * Get benchmarkType
   * @return benchmarkType
  **/
  @Schema(description = "")
  public String getBenchmarkType() {
    return benchmarkType;
  }

  public void setBenchmarkType(String benchmarkType) {
    this.benchmarkType = benchmarkType;
  }

  public DataForGetCisDetailOutput checkType(String checkType) {
    this.checkType = checkType;
    return this;
  }

   /**
   * Get checkType
   * @return checkType
  **/
  @Schema(description = "")
  public String getCheckType() {
    return checkType;
  }

  public void setCheckType(String checkType) {
    this.checkType = checkType;
  }

  public DataForGetCisDetailOutput remediation(String remediation) {
    this.remediation = remediation;
    return this;
  }

   /**
   * Get remediation
   * @return remediation
  **/
  @Schema(description = "")
  public String getRemediation() {
    return remediation;
  }

  public void setRemediation(String remediation) {
    this.remediation = remediation;
  }

  public DataForGetCisDetailOutput ruleID(String ruleID) {
    this.ruleID = ruleID;
    return this;
  }

   /**
   * Get ruleID
   * @return ruleID
  **/
  @Schema(description = "")
  public String getRuleID() {
    return ruleID;
  }

  public void setRuleID(String ruleID) {
    this.ruleID = ruleID;
  }

  public DataForGetCisDetailOutput sectionDesc(String sectionDesc) {
    this.sectionDesc = sectionDesc;
    return this;
  }

   /**
   * Get sectionDesc
   * @return sectionDesc
  **/
  @Schema(description = "")
  public String getSectionDesc() {
    return sectionDesc;
  }

  public void setSectionDesc(String sectionDesc) {
    this.sectionDesc = sectionDesc;
  }

  public DataForGetCisDetailOutput sectionID(String sectionID) {
    this.sectionID = sectionID;
    return this;
  }

   /**
   * Get sectionID
   * @return sectionID
  **/
  @Schema(description = "")
  public String getSectionID() {
    return sectionID;
  }

  public void setSectionID(String sectionID) {
    this.sectionID = sectionID;
  }

  public DataForGetCisDetailOutput severity(String severity) {
    this.severity = severity;
    return this;
  }

   /**
   * Get severity
   * @return severity
  **/
  @Schema(description = "")
  public String getSeverity() {
    return severity;
  }

  public void setSeverity(String severity) {
    this.severity = severity;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataForGetCisDetailOutput dataForGetCisDetailOutput = (DataForGetCisDetailOutput) o;
    return Objects.equals(this.audit, dataForGetCisDetailOutput.audit) &&
        Objects.equals(this.benchmarkType, dataForGetCisDetailOutput.benchmarkType) &&
        Objects.equals(this.checkType, dataForGetCisDetailOutput.checkType) &&
        Objects.equals(this.remediation, dataForGetCisDetailOutput.remediation) &&
        Objects.equals(this.ruleID, dataForGetCisDetailOutput.ruleID) &&
        Objects.equals(this.sectionDesc, dataForGetCisDetailOutput.sectionDesc) &&
        Objects.equals(this.sectionID, dataForGetCisDetailOutput.sectionID) &&
        Objects.equals(this.severity, dataForGetCisDetailOutput.severity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(audit, benchmarkType, checkType, remediation, ruleID, sectionDesc, sectionID, severity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataForGetCisDetailOutput {\n");
    
    sb.append("    audit: ").append(toIndentedString(audit)).append("\n");
    sb.append("    benchmarkType: ").append(toIndentedString(benchmarkType)).append("\n");
    sb.append("    checkType: ").append(toIndentedString(checkType)).append("\n");
    sb.append("    remediation: ").append(toIndentedString(remediation)).append("\n");
    sb.append("    ruleID: ").append(toIndentedString(ruleID)).append("\n");
    sb.append("    sectionDesc: ").append(toIndentedString(sectionDesc)).append("\n");
    sb.append("    sectionID: ").append(toIndentedString(sectionID)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
