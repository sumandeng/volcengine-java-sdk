/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListBaselineCheckDetailResponse
 */



public class ListBaselineCheckDetailResponse extends com.volcengine.model.AbstractResponse {
  @SerializedName("Description")
  private String description = null;

  @SerializedName("DescriptionCn")
  private String descriptionCn = null;

  @SerializedName("Level")
  private String level = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("NameCn")
  private String nameCn = null;

  @SerializedName("Resolve")
  private String resolve = null;

  @SerializedName("ResolveCn")
  private String resolveCn = null;

  @SerializedName("Type")
  private String type = null;

  public ListBaselineCheckDetailResponse description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ListBaselineCheckDetailResponse descriptionCn(String descriptionCn) {
    this.descriptionCn = descriptionCn;
    return this;
  }

   /**
   * Get descriptionCn
   * @return descriptionCn
  **/
  @Schema(description = "")
  public String getDescriptionCn() {
    return descriptionCn;
  }

  public void setDescriptionCn(String descriptionCn) {
    this.descriptionCn = descriptionCn;
  }

  public ListBaselineCheckDetailResponse level(String level) {
    this.level = level;
    return this;
  }

   /**
   * Get level
   * @return level
  **/
  @Schema(description = "")
  public String getLevel() {
    return level;
  }

  public void setLevel(String level) {
    this.level = level;
  }

  public ListBaselineCheckDetailResponse name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ListBaselineCheckDetailResponse nameCn(String nameCn) {
    this.nameCn = nameCn;
    return this;
  }

   /**
   * Get nameCn
   * @return nameCn
  **/
  @Schema(description = "")
  public String getNameCn() {
    return nameCn;
  }

  public void setNameCn(String nameCn) {
    this.nameCn = nameCn;
  }

  public ListBaselineCheckDetailResponse resolve(String resolve) {
    this.resolve = resolve;
    return this;
  }

   /**
   * Get resolve
   * @return resolve
  **/
  @Schema(description = "")
  public String getResolve() {
    return resolve;
  }

  public void setResolve(String resolve) {
    this.resolve = resolve;
  }

  public ListBaselineCheckDetailResponse resolveCn(String resolveCn) {
    this.resolveCn = resolveCn;
    return this;
  }

   /**
   * Get resolveCn
   * @return resolveCn
  **/
  @Schema(description = "")
  public String getResolveCn() {
    return resolveCn;
  }

  public void setResolveCn(String resolveCn) {
    this.resolveCn = resolveCn;
  }

  public ListBaselineCheckDetailResponse type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListBaselineCheckDetailResponse listBaselineCheckDetailResponse = (ListBaselineCheckDetailResponse) o;
    return Objects.equals(this.description, listBaselineCheckDetailResponse.description) &&
        Objects.equals(this.descriptionCn, listBaselineCheckDetailResponse.descriptionCn) &&
        Objects.equals(this.level, listBaselineCheckDetailResponse.level) &&
        Objects.equals(this.name, listBaselineCheckDetailResponse.name) &&
        Objects.equals(this.nameCn, listBaselineCheckDetailResponse.nameCn) &&
        Objects.equals(this.resolve, listBaselineCheckDetailResponse.resolve) &&
        Objects.equals(this.resolveCn, listBaselineCheckDetailResponse.resolveCn) &&
        Objects.equals(this.type, listBaselineCheckDetailResponse.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, descriptionCn, level, name, nameCn, resolve, resolveCn, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListBaselineCheckDetailResponse {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    descriptionCn: ").append(toIndentedString(descriptionCn)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nameCn: ").append(toIndentedString(nameCn)).append("\n");
    sb.append("    resolve: ").append(toIndentedString(resolve)).append("\n");
    sb.append("    resolveCn: ").append(toIndentedString(resolveCn)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
