/*
 * seccenter20240508
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.seccenter20240508.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * HandleVulnRequest
 */



public class HandleVulnRequest {
  @SerializedName("AfterStatus")
  private String afterStatus = null;

  @SerializedName("AgentIDList")
  private List<String> agentIDList = null;

  @SerializedName("AssetIDs")
  private List<String> assetIDs = null;

  /**
   * Gets or Sets assetType
   */
  @JsonAdapter(AssetTypeEnum.Adapter.class)
  public enum AssetTypeEnum {
    @SerializedName("Host")
    HOST("Host"),
    @SerializedName("Dev")
    DEV("Dev");

    private String value;

    AssetTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static AssetTypeEnum fromValue(String input) {
      for (AssetTypeEnum b : AssetTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<AssetTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AssetTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public AssetTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return AssetTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("AssetType")
  private AssetTypeEnum assetType = null;

  @SerializedName("BeforeStatus")
  private String beforeStatus = null;

  @SerializedName("CwppIDList")
  private List<String> cwppIDList = null;

  @SerializedName("Reason")
  private String reason = null;

  @SerializedName("TopGroupID")
  private String topGroupID = null;

  public HandleVulnRequest afterStatus(String afterStatus) {
    this.afterStatus = afterStatus;
    return this;
  }

   /**
   * Get afterStatus
   * @return afterStatus
  **/
  @Schema(description = "")
  public String getAfterStatus() {
    return afterStatus;
  }

  public void setAfterStatus(String afterStatus) {
    this.afterStatus = afterStatus;
  }

  public HandleVulnRequest agentIDList(List<String> agentIDList) {
    this.agentIDList = agentIDList;
    return this;
  }

  public HandleVulnRequest addAgentIDListItem(String agentIDListItem) {
    if (this.agentIDList == null) {
      this.agentIDList = new ArrayList<String>();
    }
    this.agentIDList.add(agentIDListItem);
    return this;
  }

   /**
   * Get agentIDList
   * @return agentIDList
  **/
  @Schema(description = "")
  public List<String> getAgentIDList() {
    return agentIDList;
  }

  public void setAgentIDList(List<String> agentIDList) {
    this.agentIDList = agentIDList;
  }

  public HandleVulnRequest assetIDs(List<String> assetIDs) {
    this.assetIDs = assetIDs;
    return this;
  }

  public HandleVulnRequest addAssetIDsItem(String assetIDsItem) {
    if (this.assetIDs == null) {
      this.assetIDs = new ArrayList<String>();
    }
    this.assetIDs.add(assetIDsItem);
    return this;
  }

   /**
   * Get assetIDs
   * @return assetIDs
  **/
  @Schema(description = "")
  public List<String> getAssetIDs() {
    return assetIDs;
  }

  public void setAssetIDs(List<String> assetIDs) {
    this.assetIDs = assetIDs;
  }

  public HandleVulnRequest assetType(AssetTypeEnum assetType) {
    this.assetType = assetType;
    return this;
  }

   /**
   * Get assetType
   * @return assetType
  **/
  @Schema(description = "")
  public AssetTypeEnum getAssetType() {
    return assetType;
  }

  public void setAssetType(AssetTypeEnum assetType) {
    this.assetType = assetType;
  }

  public HandleVulnRequest beforeStatus(String beforeStatus) {
    this.beforeStatus = beforeStatus;
    return this;
  }

   /**
   * Get beforeStatus
   * @return beforeStatus
  **/
  @Schema(description = "")
  public String getBeforeStatus() {
    return beforeStatus;
  }

  public void setBeforeStatus(String beforeStatus) {
    this.beforeStatus = beforeStatus;
  }

  public HandleVulnRequest cwppIDList(List<String> cwppIDList) {
    this.cwppIDList = cwppIDList;
    return this;
  }

  public HandleVulnRequest addCwppIDListItem(String cwppIDListItem) {
    if (this.cwppIDList == null) {
      this.cwppIDList = new ArrayList<String>();
    }
    this.cwppIDList.add(cwppIDListItem);
    return this;
  }

   /**
   * Get cwppIDList
   * @return cwppIDList
  **/
  @Schema(description = "")
  public List<String> getCwppIDList() {
    return cwppIDList;
  }

  public void setCwppIDList(List<String> cwppIDList) {
    this.cwppIDList = cwppIDList;
  }

  public HandleVulnRequest reason(String reason) {
    this.reason = reason;
    return this;
  }

   /**
   * Get reason
   * @return reason
  **/
  @Schema(description = "")
  public String getReason() {
    return reason;
  }

  public void setReason(String reason) {
    this.reason = reason;
  }

  public HandleVulnRequest topGroupID(String topGroupID) {
    this.topGroupID = topGroupID;
    return this;
  }

   /**
   * Get topGroupID
   * @return topGroupID
  **/
  @Schema(description = "")
  public String getTopGroupID() {
    return topGroupID;
  }

  public void setTopGroupID(String topGroupID) {
    this.topGroupID = topGroupID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HandleVulnRequest handleVulnRequest = (HandleVulnRequest) o;
    return Objects.equals(this.afterStatus, handleVulnRequest.afterStatus) &&
        Objects.equals(this.agentIDList, handleVulnRequest.agentIDList) &&
        Objects.equals(this.assetIDs, handleVulnRequest.assetIDs) &&
        Objects.equals(this.assetType, handleVulnRequest.assetType) &&
        Objects.equals(this.beforeStatus, handleVulnRequest.beforeStatus) &&
        Objects.equals(this.cwppIDList, handleVulnRequest.cwppIDList) &&
        Objects.equals(this.reason, handleVulnRequest.reason) &&
        Objects.equals(this.topGroupID, handleVulnRequest.topGroupID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(afterStatus, agentIDList, assetIDs, assetType, beforeStatus, cwppIDList, reason, topGroupID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HandleVulnRequest {\n");
    
    sb.append("    afterStatus: ").append(toIndentedString(afterStatus)).append("\n");
    sb.append("    agentIDList: ").append(toIndentedString(agentIDList)).append("\n");
    sb.append("    assetIDs: ").append(toIndentedString(assetIDs)).append("\n");
    sb.append("    assetType: ").append(toIndentedString(assetType)).append("\n");
    sb.append("    beforeStatus: ").append(toIndentedString(beforeStatus)).append("\n");
    sb.append("    cwppIDList: ").append(toIndentedString(cwppIDList)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    topGroupID: ").append(toIndentedString(topGroupID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
