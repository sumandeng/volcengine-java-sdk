/*
 * vei_api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.veiapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.veiapi.model.TagForUpdateNodeGroupInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * UpdateNodeGroupRequest
 */



public class UpdateNodeGroupRequest {
  @SerializedName("description")
  private String description = null;

  @SerializedName("nodeGroupID")
  private String nodeGroupID = null;

  @SerializedName("nodeGroupName")
  private String nodeGroupName = null;

  @SerializedName("nodeNames")
  private List<String> nodeNames = null;

  @SerializedName("patchNode")
  private Boolean patchNode = null;

  @SerializedName("projectID")
  private String projectID = null;

  @SerializedName("tags")
  private List<TagForUpdateNodeGroupInput> tags = null;

  public UpdateNodeGroupRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public UpdateNodeGroupRequest nodeGroupID(String nodeGroupID) {
    this.nodeGroupID = nodeGroupID;
    return this;
  }

   /**
   * Get nodeGroupID
   * @return nodeGroupID
  **/
  @Schema(description = "")
  public String getNodeGroupID() {
    return nodeGroupID;
  }

  public void setNodeGroupID(String nodeGroupID) {
    this.nodeGroupID = nodeGroupID;
  }

  public UpdateNodeGroupRequest nodeGroupName(String nodeGroupName) {
    this.nodeGroupName = nodeGroupName;
    return this;
  }

   /**
   * Get nodeGroupName
   * @return nodeGroupName
  **/
  @Schema(description = "")
  public String getNodeGroupName() {
    return nodeGroupName;
  }

  public void setNodeGroupName(String nodeGroupName) {
    this.nodeGroupName = nodeGroupName;
  }

  public UpdateNodeGroupRequest nodeNames(List<String> nodeNames) {
    this.nodeNames = nodeNames;
    return this;
  }

  public UpdateNodeGroupRequest addNodeNamesItem(String nodeNamesItem) {
    if (this.nodeNames == null) {
      this.nodeNames = new ArrayList<String>();
    }
    this.nodeNames.add(nodeNamesItem);
    return this;
  }

   /**
   * Get nodeNames
   * @return nodeNames
  **/
  @Schema(description = "")
  public List<String> getNodeNames() {
    return nodeNames;
  }

  public void setNodeNames(List<String> nodeNames) {
    this.nodeNames = nodeNames;
  }

  public UpdateNodeGroupRequest patchNode(Boolean patchNode) {
    this.patchNode = patchNode;
    return this;
  }

   /**
   * Get patchNode
   * @return patchNode
  **/
  @Schema(description = "")
  public Boolean isPatchNode() {
    return patchNode;
  }

  public void setPatchNode(Boolean patchNode) {
    this.patchNode = patchNode;
  }

  public UpdateNodeGroupRequest projectID(String projectID) {
    this.projectID = projectID;
    return this;
  }

   /**
   * Get projectID
   * @return projectID
  **/
  @Schema(description = "")
  public String getProjectID() {
    return projectID;
  }

  public void setProjectID(String projectID) {
    this.projectID = projectID;
  }

  public UpdateNodeGroupRequest tags(List<TagForUpdateNodeGroupInput> tags) {
    this.tags = tags;
    return this;
  }

  public UpdateNodeGroupRequest addTagsItem(TagForUpdateNodeGroupInput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForUpdateNodeGroupInput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForUpdateNodeGroupInput> getTags() {
    return tags;
  }

  public void setTags(List<TagForUpdateNodeGroupInput> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateNodeGroupRequest updateNodeGroupRequest = (UpdateNodeGroupRequest) o;
    return Objects.equals(this.description, updateNodeGroupRequest.description) &&
        Objects.equals(this.nodeGroupID, updateNodeGroupRequest.nodeGroupID) &&
        Objects.equals(this.nodeGroupName, updateNodeGroupRequest.nodeGroupName) &&
        Objects.equals(this.nodeNames, updateNodeGroupRequest.nodeNames) &&
        Objects.equals(this.patchNode, updateNodeGroupRequest.patchNode) &&
        Objects.equals(this.projectID, updateNodeGroupRequest.projectID) &&
        Objects.equals(this.tags, updateNodeGroupRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, nodeGroupID, nodeGroupName, nodeNames, patchNode, projectID, tags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateNodeGroupRequest {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    nodeGroupID: ").append(toIndentedString(nodeGroupID)).append("\n");
    sb.append("    nodeGroupName: ").append(toIndentedString(nodeGroupName)).append("\n");
    sb.append("    nodeNames: ").append(toIndentedString(nodeNames)).append("\n");
    sb.append("    patchNode: ").append(toIndentedString(patchNode)).append("\n");
    sb.append("    projectID: ").append(toIndentedString(projectID)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
