/*
 * vei_api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.veiapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DeviceContinuousMoveRequest
 */



public class DeviceContinuousMoveRequest {
  @SerializedName("device_id")
  private String deviceId = null;

  @SerializedName("pan_tilt_x")
  private Double panTiltX = null;

  @SerializedName("pan_tilt_y")
  private Double panTiltY = null;

  @SerializedName("time_out")
  private Integer timeOut = null;

  @SerializedName("zoom_x")
  private Double zoomX = null;

  public DeviceContinuousMoveRequest deviceId(String deviceId) {
    this.deviceId = deviceId;
    return this;
  }

   /**
   * Get deviceId
   * @return deviceId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getDeviceId() {
    return deviceId;
  }

  public void setDeviceId(String deviceId) {
    this.deviceId = deviceId;
  }

  public DeviceContinuousMoveRequest panTiltX(Double panTiltX) {
    this.panTiltX = panTiltX;
    return this;
  }

   /**
   * Get panTiltX
   * @return panTiltX
  **/
  @Schema(description = "")
  public Double getPanTiltX() {
    return panTiltX;
  }

  public void setPanTiltX(Double panTiltX) {
    this.panTiltX = panTiltX;
  }

  public DeviceContinuousMoveRequest panTiltY(Double panTiltY) {
    this.panTiltY = panTiltY;
    return this;
  }

   /**
   * Get panTiltY
   * @return panTiltY
  **/
  @Schema(description = "")
  public Double getPanTiltY() {
    return panTiltY;
  }

  public void setPanTiltY(Double panTiltY) {
    this.panTiltY = panTiltY;
  }

  public DeviceContinuousMoveRequest timeOut(Integer timeOut) {
    this.timeOut = timeOut;
    return this;
  }

   /**
   * Get timeOut
   * @return timeOut
  **/
  @Schema(description = "")
  public Integer getTimeOut() {
    return timeOut;
  }

  public void setTimeOut(Integer timeOut) {
    this.timeOut = timeOut;
  }

  public DeviceContinuousMoveRequest zoomX(Double zoomX) {
    this.zoomX = zoomX;
    return this;
  }

   /**
   * Get zoomX
   * @return zoomX
  **/
  @Schema(description = "")
  public Double getZoomX() {
    return zoomX;
  }

  public void setZoomX(Double zoomX) {
    this.zoomX = zoomX;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceContinuousMoveRequest deviceContinuousMoveRequest = (DeviceContinuousMoveRequest) o;
    return Objects.equals(this.deviceId, deviceContinuousMoveRequest.deviceId) &&
        Objects.equals(this.panTiltX, deviceContinuousMoveRequest.panTiltX) &&
        Objects.equals(this.panTiltY, deviceContinuousMoveRequest.panTiltY) &&
        Objects.equals(this.timeOut, deviceContinuousMoveRequest.timeOut) &&
        Objects.equals(this.zoomX, deviceContinuousMoveRequest.zoomX);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deviceId, panTiltX, panTiltY, timeOut, zoomX);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceContinuousMoveRequest {\n");
    
    sb.append("    deviceId: ").append(toIndentedString(deviceId)).append("\n");
    sb.append("    panTiltX: ").append(toIndentedString(panTiltX)).append("\n");
    sb.append("    panTiltY: ").append(toIndentedString(panTiltY)).append("\n");
    sb.append("    timeOut: ").append(toIndentedString(timeOut)).append("\n");
    sb.append("    zoomX: ").append(toIndentedString(zoomX)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
