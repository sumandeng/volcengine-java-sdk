/*
 * vei_api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.veiapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.veiapi.model.OtaStatusForListHCINewOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ItemForListHCINewOutput
 */



public class ItemForListHCINewOutput {
  @SerializedName("activated_at")
  private String activatedAt = null;

  @SerializedName("alias")
  private String alias = null;

  @SerializedName("cpu_usage")
  private Double cpuUsage = null;

  @SerializedName("hci_model_ref")
  private String hciModelRef = null;

  @SerializedName("last_active_at")
  private String lastActiveAt = null;

  @SerializedName("memory_usage")
  private Double memoryUsage = null;

  @SerializedName("monitor_status")
  private Integer monitorStatus = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("node_available_cpu")
  private Double nodeAvailableCpu = null;

  @SerializedName("node_available_mem")
  private Integer nodeAvailableMem = null;

  @SerializedName("node_workload_count")
  private Integer nodeWorkloadCount = null;

  @SerializedName("ota_status")
  private OtaStatusForListHCINewOutput otaStatus = null;

  @SerializedName("project_workload_count")
  private Integer projectWorkloadCount = null;

  @SerializedName("status")
  private Integer status = null;

  public ItemForListHCINewOutput activatedAt(String activatedAt) {
    this.activatedAt = activatedAt;
    return this;
  }

   /**
   * Get activatedAt
   * @return activatedAt
  **/
  @Schema(description = "")
  public String getActivatedAt() {
    return activatedAt;
  }

  public void setActivatedAt(String activatedAt) {
    this.activatedAt = activatedAt;
  }

  public ItemForListHCINewOutput alias(String alias) {
    this.alias = alias;
    return this;
  }

   /**
   * Get alias
   * @return alias
  **/
  @Schema(description = "")
  public String getAlias() {
    return alias;
  }

  public void setAlias(String alias) {
    this.alias = alias;
  }

  public ItemForListHCINewOutput cpuUsage(Double cpuUsage) {
    this.cpuUsage = cpuUsage;
    return this;
  }

   /**
   * Get cpuUsage
   * @return cpuUsage
  **/
  @Schema(description = "")
  public Double getCpuUsage() {
    return cpuUsage;
  }

  public void setCpuUsage(Double cpuUsage) {
    this.cpuUsage = cpuUsage;
  }

  public ItemForListHCINewOutput hciModelRef(String hciModelRef) {
    this.hciModelRef = hciModelRef;
    return this;
  }

   /**
   * Get hciModelRef
   * @return hciModelRef
  **/
  @Schema(description = "")
  public String getHciModelRef() {
    return hciModelRef;
  }

  public void setHciModelRef(String hciModelRef) {
    this.hciModelRef = hciModelRef;
  }

  public ItemForListHCINewOutput lastActiveAt(String lastActiveAt) {
    this.lastActiveAt = lastActiveAt;
    return this;
  }

   /**
   * Get lastActiveAt
   * @return lastActiveAt
  **/
  @Schema(description = "")
  public String getLastActiveAt() {
    return lastActiveAt;
  }

  public void setLastActiveAt(String lastActiveAt) {
    this.lastActiveAt = lastActiveAt;
  }

  public ItemForListHCINewOutput memoryUsage(Double memoryUsage) {
    this.memoryUsage = memoryUsage;
    return this;
  }

   /**
   * Get memoryUsage
   * @return memoryUsage
  **/
  @Schema(description = "")
  public Double getMemoryUsage() {
    return memoryUsage;
  }

  public void setMemoryUsage(Double memoryUsage) {
    this.memoryUsage = memoryUsage;
  }

  public ItemForListHCINewOutput monitorStatus(Integer monitorStatus) {
    this.monitorStatus = monitorStatus;
    return this;
  }

   /**
   * Get monitorStatus
   * @return monitorStatus
  **/
  @Schema(description = "")
  public Integer getMonitorStatus() {
    return monitorStatus;
  }

  public void setMonitorStatus(Integer monitorStatus) {
    this.monitorStatus = monitorStatus;
  }

  public ItemForListHCINewOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ItemForListHCINewOutput nodeAvailableCpu(Double nodeAvailableCpu) {
    this.nodeAvailableCpu = nodeAvailableCpu;
    return this;
  }

   /**
   * Get nodeAvailableCpu
   * @return nodeAvailableCpu
  **/
  @Schema(description = "")
  public Double getNodeAvailableCpu() {
    return nodeAvailableCpu;
  }

  public void setNodeAvailableCpu(Double nodeAvailableCpu) {
    this.nodeAvailableCpu = nodeAvailableCpu;
  }

  public ItemForListHCINewOutput nodeAvailableMem(Integer nodeAvailableMem) {
    this.nodeAvailableMem = nodeAvailableMem;
    return this;
  }

   /**
   * Get nodeAvailableMem
   * @return nodeAvailableMem
  **/
  @Schema(description = "")
  public Integer getNodeAvailableMem() {
    return nodeAvailableMem;
  }

  public void setNodeAvailableMem(Integer nodeAvailableMem) {
    this.nodeAvailableMem = nodeAvailableMem;
  }

  public ItemForListHCINewOutput nodeWorkloadCount(Integer nodeWorkloadCount) {
    this.nodeWorkloadCount = nodeWorkloadCount;
    return this;
  }

   /**
   * Get nodeWorkloadCount
   * @return nodeWorkloadCount
  **/
  @Schema(description = "")
  public Integer getNodeWorkloadCount() {
    return nodeWorkloadCount;
  }

  public void setNodeWorkloadCount(Integer nodeWorkloadCount) {
    this.nodeWorkloadCount = nodeWorkloadCount;
  }

  public ItemForListHCINewOutput otaStatus(OtaStatusForListHCINewOutput otaStatus) {
    this.otaStatus = otaStatus;
    return this;
  }

   /**
   * Get otaStatus
   * @return otaStatus
  **/
  @Valid
  @Schema(description = "")
  public OtaStatusForListHCINewOutput getOtaStatus() {
    return otaStatus;
  }

  public void setOtaStatus(OtaStatusForListHCINewOutput otaStatus) {
    this.otaStatus = otaStatus;
  }

  public ItemForListHCINewOutput projectWorkloadCount(Integer projectWorkloadCount) {
    this.projectWorkloadCount = projectWorkloadCount;
    return this;
  }

   /**
   * Get projectWorkloadCount
   * @return projectWorkloadCount
  **/
  @Schema(description = "")
  public Integer getProjectWorkloadCount() {
    return projectWorkloadCount;
  }

  public void setProjectWorkloadCount(Integer projectWorkloadCount) {
    this.projectWorkloadCount = projectWorkloadCount;
  }

  public ItemForListHCINewOutput status(Integer status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public Integer getStatus() {
    return status;
  }

  public void setStatus(Integer status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemForListHCINewOutput itemForListHCINewOutput = (ItemForListHCINewOutput) o;
    return Objects.equals(this.activatedAt, itemForListHCINewOutput.activatedAt) &&
        Objects.equals(this.alias, itemForListHCINewOutput.alias) &&
        Objects.equals(this.cpuUsage, itemForListHCINewOutput.cpuUsage) &&
        Objects.equals(this.hciModelRef, itemForListHCINewOutput.hciModelRef) &&
        Objects.equals(this.lastActiveAt, itemForListHCINewOutput.lastActiveAt) &&
        Objects.equals(this.memoryUsage, itemForListHCINewOutput.memoryUsage) &&
        Objects.equals(this.monitorStatus, itemForListHCINewOutput.monitorStatus) &&
        Objects.equals(this.name, itemForListHCINewOutput.name) &&
        Objects.equals(this.nodeAvailableCpu, itemForListHCINewOutput.nodeAvailableCpu) &&
        Objects.equals(this.nodeAvailableMem, itemForListHCINewOutput.nodeAvailableMem) &&
        Objects.equals(this.nodeWorkloadCount, itemForListHCINewOutput.nodeWorkloadCount) &&
        Objects.equals(this.otaStatus, itemForListHCINewOutput.otaStatus) &&
        Objects.equals(this.projectWorkloadCount, itemForListHCINewOutput.projectWorkloadCount) &&
        Objects.equals(this.status, itemForListHCINewOutput.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activatedAt, alias, cpuUsage, hciModelRef, lastActiveAt, memoryUsage, monitorStatus, name, nodeAvailableCpu, nodeAvailableMem, nodeWorkloadCount, otaStatus, projectWorkloadCount, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemForListHCINewOutput {\n");
    
    sb.append("    activatedAt: ").append(toIndentedString(activatedAt)).append("\n");
    sb.append("    alias: ").append(toIndentedString(alias)).append("\n");
    sb.append("    cpuUsage: ").append(toIndentedString(cpuUsage)).append("\n");
    sb.append("    hciModelRef: ").append(toIndentedString(hciModelRef)).append("\n");
    sb.append("    lastActiveAt: ").append(toIndentedString(lastActiveAt)).append("\n");
    sb.append("    memoryUsage: ").append(toIndentedString(memoryUsage)).append("\n");
    sb.append("    monitorStatus: ").append(toIndentedString(monitorStatus)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nodeAvailableCpu: ").append(toIndentedString(nodeAvailableCpu)).append("\n");
    sb.append("    nodeAvailableMem: ").append(toIndentedString(nodeAvailableMem)).append("\n");
    sb.append("    nodeWorkloadCount: ").append(toIndentedString(nodeWorkloadCount)).append("\n");
    sb.append("    otaStatus: ").append(toIndentedString(otaStatus)).append("\n");
    sb.append("    projectWorkloadCount: ").append(toIndentedString(projectWorkloadCount)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
