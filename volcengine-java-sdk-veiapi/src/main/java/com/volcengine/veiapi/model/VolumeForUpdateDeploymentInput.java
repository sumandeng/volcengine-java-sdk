/*
 * vei_api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.veiapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.veiapi.model.ConfigmapForUpdateDeploymentInput;
import com.volcengine.veiapi.model.EmptyDirForUpdateDeploymentInput;
import com.volcengine.veiapi.model.HostPathForUpdateDeploymentInput;
import com.volcengine.veiapi.model.PvcForUpdateDeploymentInput;
import com.volcengine.veiapi.model.SecretForUpdateDeploymentInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * VolumeForUpdateDeploymentInput
 */



public class VolumeForUpdateDeploymentInput {
  @SerializedName("configmap")
  private ConfigmapForUpdateDeploymentInput configmap = null;

  @SerializedName("empty_dir")
  private EmptyDirForUpdateDeploymentInput emptyDir = null;

  @SerializedName("host_path")
  private HostPathForUpdateDeploymentInput hostPath = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("pvc")
  private PvcForUpdateDeploymentInput pvc = null;

  @SerializedName("secret")
  private SecretForUpdateDeploymentInput secret = null;

  @SerializedName("source_type")
  private Integer sourceType = null;

  public VolumeForUpdateDeploymentInput configmap(ConfigmapForUpdateDeploymentInput configmap) {
    this.configmap = configmap;
    return this;
  }

   /**
   * Get configmap
   * @return configmap
  **/
  @Valid
  @Schema(description = "")
  public ConfigmapForUpdateDeploymentInput getConfigmap() {
    return configmap;
  }

  public void setConfigmap(ConfigmapForUpdateDeploymentInput configmap) {
    this.configmap = configmap;
  }

  public VolumeForUpdateDeploymentInput emptyDir(EmptyDirForUpdateDeploymentInput emptyDir) {
    this.emptyDir = emptyDir;
    return this;
  }

   /**
   * Get emptyDir
   * @return emptyDir
  **/
  @Valid
  @Schema(description = "")
  public EmptyDirForUpdateDeploymentInput getEmptyDir() {
    return emptyDir;
  }

  public void setEmptyDir(EmptyDirForUpdateDeploymentInput emptyDir) {
    this.emptyDir = emptyDir;
  }

  public VolumeForUpdateDeploymentInput hostPath(HostPathForUpdateDeploymentInput hostPath) {
    this.hostPath = hostPath;
    return this;
  }

   /**
   * Get hostPath
   * @return hostPath
  **/
  @Valid
  @Schema(description = "")
  public HostPathForUpdateDeploymentInput getHostPath() {
    return hostPath;
  }

  public void setHostPath(HostPathForUpdateDeploymentInput hostPath) {
    this.hostPath = hostPath;
  }

  public VolumeForUpdateDeploymentInput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public VolumeForUpdateDeploymentInput pvc(PvcForUpdateDeploymentInput pvc) {
    this.pvc = pvc;
    return this;
  }

   /**
   * Get pvc
   * @return pvc
  **/
  @Valid
  @Schema(description = "")
  public PvcForUpdateDeploymentInput getPvc() {
    return pvc;
  }

  public void setPvc(PvcForUpdateDeploymentInput pvc) {
    this.pvc = pvc;
  }

  public VolumeForUpdateDeploymentInput secret(SecretForUpdateDeploymentInput secret) {
    this.secret = secret;
    return this;
  }

   /**
   * Get secret
   * @return secret
  **/
  @Valid
  @Schema(description = "")
  public SecretForUpdateDeploymentInput getSecret() {
    return secret;
  }

  public void setSecret(SecretForUpdateDeploymentInput secret) {
    this.secret = secret;
  }

  public VolumeForUpdateDeploymentInput sourceType(Integer sourceType) {
    this.sourceType = sourceType;
    return this;
  }

   /**
   * Get sourceType
   * @return sourceType
  **/
  @Schema(description = "")
  public Integer getSourceType() {
    return sourceType;
  }

  public void setSourceType(Integer sourceType) {
    this.sourceType = sourceType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VolumeForUpdateDeploymentInput volumeForUpdateDeploymentInput = (VolumeForUpdateDeploymentInput) o;
    return Objects.equals(this.configmap, volumeForUpdateDeploymentInput.configmap) &&
        Objects.equals(this.emptyDir, volumeForUpdateDeploymentInput.emptyDir) &&
        Objects.equals(this.hostPath, volumeForUpdateDeploymentInput.hostPath) &&
        Objects.equals(this.name, volumeForUpdateDeploymentInput.name) &&
        Objects.equals(this.pvc, volumeForUpdateDeploymentInput.pvc) &&
        Objects.equals(this.secret, volumeForUpdateDeploymentInput.secret) &&
        Objects.equals(this.sourceType, volumeForUpdateDeploymentInput.sourceType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(configmap, emptyDir, hostPath, name, pvc, secret, sourceType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VolumeForUpdateDeploymentInput {\n");
    
    sb.append("    configmap: ").append(toIndentedString(configmap)).append("\n");
    sb.append("    emptyDir: ").append(toIndentedString(emptyDir)).append("\n");
    sb.append("    hostPath: ").append(toIndentedString(hostPath)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    pvc: ").append(toIndentedString(pvc)).append("\n");
    sb.append("    secret: ").append(toIndentedString(secret)).append("\n");
    sb.append("    sourceType: ").append(toIndentedString(sourceType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
