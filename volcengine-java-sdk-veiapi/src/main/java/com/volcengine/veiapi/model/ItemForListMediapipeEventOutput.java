/*
 * vei_api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.veiapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.veiapi.model.ClassifierForListMediapipeEventOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ItemForListMediapipeEventOutput
 */



public class ItemForListMediapipeEventOutput {
  @SerializedName("classifier")
  private List<ClassifierForListMediapipeEventOutput> classifier = null;

  @SerializedName("height")
  private String height = null;

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("label")
  private String label = null;

  @SerializedName("left")
  private Double left = null;

  @SerializedName("prob")
  private Double prob = null;

  @SerializedName("top")
  private String top = null;

  @SerializedName("width")
  private Double width = null;

  public ItemForListMediapipeEventOutput classifier(List<ClassifierForListMediapipeEventOutput> classifier) {
    this.classifier = classifier;
    return this;
  }

  public ItemForListMediapipeEventOutput addClassifierItem(ClassifierForListMediapipeEventOutput classifierItem) {
    if (this.classifier == null) {
      this.classifier = new ArrayList<ClassifierForListMediapipeEventOutput>();
    }
    this.classifier.add(classifierItem);
    return this;
  }

   /**
   * Get classifier
   * @return classifier
  **/
  @Valid
  @Schema(description = "")
  public List<ClassifierForListMediapipeEventOutput> getClassifier() {
    return classifier;
  }

  public void setClassifier(List<ClassifierForListMediapipeEventOutput> classifier) {
    this.classifier = classifier;
  }

  public ItemForListMediapipeEventOutput height(String height) {
    this.height = height;
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @Schema(description = "")
  public String getHeight() {
    return height;
  }

  public void setHeight(String height) {
    this.height = height;
  }

  public ItemForListMediapipeEventOutput id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public ItemForListMediapipeEventOutput label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @Schema(description = "")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public ItemForListMediapipeEventOutput left(Double left) {
    this.left = left;
    return this;
  }

   /**
   * Get left
   * @return left
  **/
  @Schema(description = "")
  public Double getLeft() {
    return left;
  }

  public void setLeft(Double left) {
    this.left = left;
  }

  public ItemForListMediapipeEventOutput prob(Double prob) {
    this.prob = prob;
    return this;
  }

   /**
   * Get prob
   * @return prob
  **/
  @Schema(description = "")
  public Double getProb() {
    return prob;
  }

  public void setProb(Double prob) {
    this.prob = prob;
  }

  public ItemForListMediapipeEventOutput top(String top) {
    this.top = top;
    return this;
  }

   /**
   * Get top
   * @return top
  **/
  @Schema(description = "")
  public String getTop() {
    return top;
  }

  public void setTop(String top) {
    this.top = top;
  }

  public ItemForListMediapipeEventOutput width(Double width) {
    this.width = width;
    return this;
  }

   /**
   * Get width
   * @return width
  **/
  @Schema(description = "")
  public Double getWidth() {
    return width;
  }

  public void setWidth(Double width) {
    this.width = width;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemForListMediapipeEventOutput itemForListMediapipeEventOutput = (ItemForListMediapipeEventOutput) o;
    return Objects.equals(this.classifier, itemForListMediapipeEventOutput.classifier) &&
        Objects.equals(this.height, itemForListMediapipeEventOutput.height) &&
        Objects.equals(this.id, itemForListMediapipeEventOutput.id) &&
        Objects.equals(this.label, itemForListMediapipeEventOutput.label) &&
        Objects.equals(this.left, itemForListMediapipeEventOutput.left) &&
        Objects.equals(this.prob, itemForListMediapipeEventOutput.prob) &&
        Objects.equals(this.top, itemForListMediapipeEventOutput.top) &&
        Objects.equals(this.width, itemForListMediapipeEventOutput.width);
  }

  @Override
  public int hashCode() {
    return Objects.hash(classifier, height, id, label, left, prob, top, width);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemForListMediapipeEventOutput {\n");
    
    sb.append("    classifier: ").append(toIndentedString(classifier)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    left: ").append(toIndentedString(left)).append("\n");
    sb.append("    prob: ").append(toIndentedString(prob)).append("\n");
    sb.append("    top: ").append(toIndentedString(top)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
