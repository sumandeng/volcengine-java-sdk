/*
 * vei_api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.veiapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.veiapi.model.DeployConfigForCreateModelServiceInput;
import com.volcengine.veiapi.model.OpenAiApiForCreateModelServiceInput;
import com.volcengine.veiapi.model.ServiceConfigForCreateModelServiceInput;
import com.volcengine.veiapi.model.SharedMemoryForCreateModelServiceInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateModelServiceRequest
 */



public class CreateModelServiceRequest {
  @SerializedName("compression")
  private Boolean compression = null;

  @SerializedName("cpu_count")
  private Integer cpuCount = null;

  @SerializedName("cpu_limit")
  private Double cpuLimit = null;

  @SerializedName("cpu_request")
  private Double cpuRequest = null;

  @SerializedName("deploy_config")
  private DeployConfigForCreateModelServiceInput deployConfig = null;

  @SerializedName("dynamic_batching")
  private Boolean dynamicBatching = null;

  @SerializedName("gpu_count")
  private Integer gpuCount = null;

  @SerializedName("grpc_port")
  private Integer grpcPort = null;

  @SerializedName("http_mem_limit_unit")
  private String httpMemLimitUnit = null;

  @SerializedName("http_mem_req_unit")
  private String httpMemReqUnit = null;

  @SerializedName("json_parameter")
  private String jsonParameter = null;

  @SerializedName("max_batch_size")
  private Long maxBatchSize = null;

  @SerializedName("max_queue_delay_microseconds")
  private Long maxQueueDelayMicroseconds = null;

  @SerializedName("mem_limit")
  private Integer memLimit = null;

  @SerializedName("model_id")
  private String modelId = null;

  @SerializedName("model_name")
  private String modelName = null;

  @SerializedName("model_service_name")
  private String modelServiceName = null;

  @SerializedName("open_ai_api")
  private OpenAiApiForCreateModelServiceInput openAiApi = null;

  @SerializedName("port")
  private Integer port = null;

  @SerializedName("process_id")
  private String processId = null;

  @SerializedName("process_name")
  private String processName = null;

  @SerializedName("project_id")
  private String projectId = null;

  @SerializedName("project_name")
  private String projectName = null;

  @SerializedName("replicas")
  private Integer replicas = null;

  @SerializedName("service_config")
  private List<ServiceConfigForCreateModelServiceInput> serviceConfig = null;

  @SerializedName("shared_memory")
  private SharedMemoryForCreateModelServiceInput sharedMemory = null;

  @SerializedName("state_type")
  private Integer stateType = null;

  @SerializedName("version_id")
  private String versionId = null;

  @SerializedName("version_name")
  private String versionName = null;

  public CreateModelServiceRequest compression(Boolean compression) {
    this.compression = compression;
    return this;
  }

   /**
   * Get compression
   * @return compression
  **/
  @Schema(description = "")
  public Boolean isCompression() {
    return compression;
  }

  public void setCompression(Boolean compression) {
    this.compression = compression;
  }

  public CreateModelServiceRequest cpuCount(Integer cpuCount) {
    this.cpuCount = cpuCount;
    return this;
  }

   /**
   * Get cpuCount
   * @return cpuCount
  **/
  @Schema(description = "")
  public Integer getCpuCount() {
    return cpuCount;
  }

  public void setCpuCount(Integer cpuCount) {
    this.cpuCount = cpuCount;
  }

  public CreateModelServiceRequest cpuLimit(Double cpuLimit) {
    this.cpuLimit = cpuLimit;
    return this;
  }

   /**
   * Get cpuLimit
   * @return cpuLimit
  **/
  @Schema(description = "")
  public Double getCpuLimit() {
    return cpuLimit;
  }

  public void setCpuLimit(Double cpuLimit) {
    this.cpuLimit = cpuLimit;
  }

  public CreateModelServiceRequest cpuRequest(Double cpuRequest) {
    this.cpuRequest = cpuRequest;
    return this;
  }

   /**
   * Get cpuRequest
   * @return cpuRequest
  **/
  @Schema(description = "")
  public Double getCpuRequest() {
    return cpuRequest;
  }

  public void setCpuRequest(Double cpuRequest) {
    this.cpuRequest = cpuRequest;
  }

  public CreateModelServiceRequest deployConfig(DeployConfigForCreateModelServiceInput deployConfig) {
    this.deployConfig = deployConfig;
    return this;
  }

   /**
   * Get deployConfig
   * @return deployConfig
  **/
  @Valid
  @Schema(description = "")
  public DeployConfigForCreateModelServiceInput getDeployConfig() {
    return deployConfig;
  }

  public void setDeployConfig(DeployConfigForCreateModelServiceInput deployConfig) {
    this.deployConfig = deployConfig;
  }

  public CreateModelServiceRequest dynamicBatching(Boolean dynamicBatching) {
    this.dynamicBatching = dynamicBatching;
    return this;
  }

   /**
   * Get dynamicBatching
   * @return dynamicBatching
  **/
  @Schema(description = "")
  public Boolean isDynamicBatching() {
    return dynamicBatching;
  }

  public void setDynamicBatching(Boolean dynamicBatching) {
    this.dynamicBatching = dynamicBatching;
  }

  public CreateModelServiceRequest gpuCount(Integer gpuCount) {
    this.gpuCount = gpuCount;
    return this;
  }

   /**
   * Get gpuCount
   * @return gpuCount
  **/
  @Schema(description = "")
  public Integer getGpuCount() {
    return gpuCount;
  }

  public void setGpuCount(Integer gpuCount) {
    this.gpuCount = gpuCount;
  }

  public CreateModelServiceRequest grpcPort(Integer grpcPort) {
    this.grpcPort = grpcPort;
    return this;
  }

   /**
   * Get grpcPort
   * @return grpcPort
  **/
  @Schema(description = "")
  public Integer getGrpcPort() {
    return grpcPort;
  }

  public void setGrpcPort(Integer grpcPort) {
    this.grpcPort = grpcPort;
  }

  public CreateModelServiceRequest httpMemLimitUnit(String httpMemLimitUnit) {
    this.httpMemLimitUnit = httpMemLimitUnit;
    return this;
  }

   /**
   * Get httpMemLimitUnit
   * @return httpMemLimitUnit
  **/
  @Schema(description = "")
  public String getHttpMemLimitUnit() {
    return httpMemLimitUnit;
  }

  public void setHttpMemLimitUnit(String httpMemLimitUnit) {
    this.httpMemLimitUnit = httpMemLimitUnit;
  }

  public CreateModelServiceRequest httpMemReqUnit(String httpMemReqUnit) {
    this.httpMemReqUnit = httpMemReqUnit;
    return this;
  }

   /**
   * Get httpMemReqUnit
   * @return httpMemReqUnit
  **/
  @Schema(description = "")
  public String getHttpMemReqUnit() {
    return httpMemReqUnit;
  }

  public void setHttpMemReqUnit(String httpMemReqUnit) {
    this.httpMemReqUnit = httpMemReqUnit;
  }

  public CreateModelServiceRequest jsonParameter(String jsonParameter) {
    this.jsonParameter = jsonParameter;
    return this;
  }

   /**
   * Get jsonParameter
   * @return jsonParameter
  **/
  @Schema(description = "")
  public String getJsonParameter() {
    return jsonParameter;
  }

  public void setJsonParameter(String jsonParameter) {
    this.jsonParameter = jsonParameter;
  }

  public CreateModelServiceRequest maxBatchSize(Long maxBatchSize) {
    this.maxBatchSize = maxBatchSize;
    return this;
  }

   /**
   * Get maxBatchSize
   * @return maxBatchSize
  **/
  @Schema(description = "")
  public Long getMaxBatchSize() {
    return maxBatchSize;
  }

  public void setMaxBatchSize(Long maxBatchSize) {
    this.maxBatchSize = maxBatchSize;
  }

  public CreateModelServiceRequest maxQueueDelayMicroseconds(Long maxQueueDelayMicroseconds) {
    this.maxQueueDelayMicroseconds = maxQueueDelayMicroseconds;
    return this;
  }

   /**
   * Get maxQueueDelayMicroseconds
   * @return maxQueueDelayMicroseconds
  **/
  @Schema(description = "")
  public Long getMaxQueueDelayMicroseconds() {
    return maxQueueDelayMicroseconds;
  }

  public void setMaxQueueDelayMicroseconds(Long maxQueueDelayMicroseconds) {
    this.maxQueueDelayMicroseconds = maxQueueDelayMicroseconds;
  }

  public CreateModelServiceRequest memLimit(Integer memLimit) {
    this.memLimit = memLimit;
    return this;
  }

   /**
   * Get memLimit
   * @return memLimit
  **/
  @Schema(description = "")
  public Integer getMemLimit() {
    return memLimit;
  }

  public void setMemLimit(Integer memLimit) {
    this.memLimit = memLimit;
  }

  public CreateModelServiceRequest modelId(String modelId) {
    this.modelId = modelId;
    return this;
  }

   /**
   * Get modelId
   * @return modelId
  **/
  @Schema(description = "")
  public String getModelId() {
    return modelId;
  }

  public void setModelId(String modelId) {
    this.modelId = modelId;
  }

  public CreateModelServiceRequest modelName(String modelName) {
    this.modelName = modelName;
    return this;
  }

   /**
   * Get modelName
   * @return modelName
  **/
  @Schema(description = "")
  public String getModelName() {
    return modelName;
  }

  public void setModelName(String modelName) {
    this.modelName = modelName;
  }

  public CreateModelServiceRequest modelServiceName(String modelServiceName) {
    this.modelServiceName = modelServiceName;
    return this;
  }

   /**
   * Get modelServiceName
   * @return modelServiceName
  **/
  @Schema(description = "")
  public String getModelServiceName() {
    return modelServiceName;
  }

  public void setModelServiceName(String modelServiceName) {
    this.modelServiceName = modelServiceName;
  }

  public CreateModelServiceRequest openAiApi(OpenAiApiForCreateModelServiceInput openAiApi) {
    this.openAiApi = openAiApi;
    return this;
  }

   /**
   * Get openAiApi
   * @return openAiApi
  **/
  @Valid
  @Schema(description = "")
  public OpenAiApiForCreateModelServiceInput getOpenAiApi() {
    return openAiApi;
  }

  public void setOpenAiApi(OpenAiApiForCreateModelServiceInput openAiApi) {
    this.openAiApi = openAiApi;
  }

  public CreateModelServiceRequest port(Integer port) {
    this.port = port;
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @Schema(description = "")
  public Integer getPort() {
    return port;
  }

  public void setPort(Integer port) {
    this.port = port;
  }

  public CreateModelServiceRequest processId(String processId) {
    this.processId = processId;
    return this;
  }

   /**
   * Get processId
   * @return processId
  **/
  @Schema(description = "")
  public String getProcessId() {
    return processId;
  }

  public void setProcessId(String processId) {
    this.processId = processId;
  }

  public CreateModelServiceRequest processName(String processName) {
    this.processName = processName;
    return this;
  }

   /**
   * Get processName
   * @return processName
  **/
  @Schema(description = "")
  public String getProcessName() {
    return processName;
  }

  public void setProcessName(String processName) {
    this.processName = processName;
  }

  public CreateModelServiceRequest projectId(String projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getProjectId() {
    return projectId;
  }

  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }

  public CreateModelServiceRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public CreateModelServiceRequest replicas(Integer replicas) {
    this.replicas = replicas;
    return this;
  }

   /**
   * Get replicas
   * @return replicas
  **/
  @Schema(description = "")
  public Integer getReplicas() {
    return replicas;
  }

  public void setReplicas(Integer replicas) {
    this.replicas = replicas;
  }

  public CreateModelServiceRequest serviceConfig(List<ServiceConfigForCreateModelServiceInput> serviceConfig) {
    this.serviceConfig = serviceConfig;
    return this;
  }

  public CreateModelServiceRequest addServiceConfigItem(ServiceConfigForCreateModelServiceInput serviceConfigItem) {
    if (this.serviceConfig == null) {
      this.serviceConfig = new ArrayList<ServiceConfigForCreateModelServiceInput>();
    }
    this.serviceConfig.add(serviceConfigItem);
    return this;
  }

   /**
   * Get serviceConfig
   * @return serviceConfig
  **/
  @Valid
  @Schema(description = "")
  public List<ServiceConfigForCreateModelServiceInput> getServiceConfig() {
    return serviceConfig;
  }

  public void setServiceConfig(List<ServiceConfigForCreateModelServiceInput> serviceConfig) {
    this.serviceConfig = serviceConfig;
  }

  public CreateModelServiceRequest sharedMemory(SharedMemoryForCreateModelServiceInput sharedMemory) {
    this.sharedMemory = sharedMemory;
    return this;
  }

   /**
   * Get sharedMemory
   * @return sharedMemory
  **/
  @Valid
  @Schema(description = "")
  public SharedMemoryForCreateModelServiceInput getSharedMemory() {
    return sharedMemory;
  }

  public void setSharedMemory(SharedMemoryForCreateModelServiceInput sharedMemory) {
    this.sharedMemory = sharedMemory;
  }

  public CreateModelServiceRequest stateType(Integer stateType) {
    this.stateType = stateType;
    return this;
  }

   /**
   * Get stateType
   * @return stateType
  **/
  @Schema(description = "")
  public Integer getStateType() {
    return stateType;
  }

  public void setStateType(Integer stateType) {
    this.stateType = stateType;
  }

  public CreateModelServiceRequest versionId(String versionId) {
    this.versionId = versionId;
    return this;
  }

   /**
   * Get versionId
   * @return versionId
  **/
  @Schema(description = "")
  public String getVersionId() {
    return versionId;
  }

  public void setVersionId(String versionId) {
    this.versionId = versionId;
  }

  public CreateModelServiceRequest versionName(String versionName) {
    this.versionName = versionName;
    return this;
  }

   /**
   * Get versionName
   * @return versionName
  **/
  @Schema(description = "")
  public String getVersionName() {
    return versionName;
  }

  public void setVersionName(String versionName) {
    this.versionName = versionName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateModelServiceRequest createModelServiceRequest = (CreateModelServiceRequest) o;
    return Objects.equals(this.compression, createModelServiceRequest.compression) &&
        Objects.equals(this.cpuCount, createModelServiceRequest.cpuCount) &&
        Objects.equals(this.cpuLimit, createModelServiceRequest.cpuLimit) &&
        Objects.equals(this.cpuRequest, createModelServiceRequest.cpuRequest) &&
        Objects.equals(this.deployConfig, createModelServiceRequest.deployConfig) &&
        Objects.equals(this.dynamicBatching, createModelServiceRequest.dynamicBatching) &&
        Objects.equals(this.gpuCount, createModelServiceRequest.gpuCount) &&
        Objects.equals(this.grpcPort, createModelServiceRequest.grpcPort) &&
        Objects.equals(this.httpMemLimitUnit, createModelServiceRequest.httpMemLimitUnit) &&
        Objects.equals(this.httpMemReqUnit, createModelServiceRequest.httpMemReqUnit) &&
        Objects.equals(this.jsonParameter, createModelServiceRequest.jsonParameter) &&
        Objects.equals(this.maxBatchSize, createModelServiceRequest.maxBatchSize) &&
        Objects.equals(this.maxQueueDelayMicroseconds, createModelServiceRequest.maxQueueDelayMicroseconds) &&
        Objects.equals(this.memLimit, createModelServiceRequest.memLimit) &&
        Objects.equals(this.modelId, createModelServiceRequest.modelId) &&
        Objects.equals(this.modelName, createModelServiceRequest.modelName) &&
        Objects.equals(this.modelServiceName, createModelServiceRequest.modelServiceName) &&
        Objects.equals(this.openAiApi, createModelServiceRequest.openAiApi) &&
        Objects.equals(this.port, createModelServiceRequest.port) &&
        Objects.equals(this.processId, createModelServiceRequest.processId) &&
        Objects.equals(this.processName, createModelServiceRequest.processName) &&
        Objects.equals(this.projectId, createModelServiceRequest.projectId) &&
        Objects.equals(this.projectName, createModelServiceRequest.projectName) &&
        Objects.equals(this.replicas, createModelServiceRequest.replicas) &&
        Objects.equals(this.serviceConfig, createModelServiceRequest.serviceConfig) &&
        Objects.equals(this.sharedMemory, createModelServiceRequest.sharedMemory) &&
        Objects.equals(this.stateType, createModelServiceRequest.stateType) &&
        Objects.equals(this.versionId, createModelServiceRequest.versionId) &&
        Objects.equals(this.versionName, createModelServiceRequest.versionName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(compression, cpuCount, cpuLimit, cpuRequest, deployConfig, dynamicBatching, gpuCount, grpcPort, httpMemLimitUnit, httpMemReqUnit, jsonParameter, maxBatchSize, maxQueueDelayMicroseconds, memLimit, modelId, modelName, modelServiceName, openAiApi, port, processId, processName, projectId, projectName, replicas, serviceConfig, sharedMemory, stateType, versionId, versionName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateModelServiceRequest {\n");
    
    sb.append("    compression: ").append(toIndentedString(compression)).append("\n");
    sb.append("    cpuCount: ").append(toIndentedString(cpuCount)).append("\n");
    sb.append("    cpuLimit: ").append(toIndentedString(cpuLimit)).append("\n");
    sb.append("    cpuRequest: ").append(toIndentedString(cpuRequest)).append("\n");
    sb.append("    deployConfig: ").append(toIndentedString(deployConfig)).append("\n");
    sb.append("    dynamicBatching: ").append(toIndentedString(dynamicBatching)).append("\n");
    sb.append("    gpuCount: ").append(toIndentedString(gpuCount)).append("\n");
    sb.append("    grpcPort: ").append(toIndentedString(grpcPort)).append("\n");
    sb.append("    httpMemLimitUnit: ").append(toIndentedString(httpMemLimitUnit)).append("\n");
    sb.append("    httpMemReqUnit: ").append(toIndentedString(httpMemReqUnit)).append("\n");
    sb.append("    jsonParameter: ").append(toIndentedString(jsonParameter)).append("\n");
    sb.append("    maxBatchSize: ").append(toIndentedString(maxBatchSize)).append("\n");
    sb.append("    maxQueueDelayMicroseconds: ").append(toIndentedString(maxQueueDelayMicroseconds)).append("\n");
    sb.append("    memLimit: ").append(toIndentedString(memLimit)).append("\n");
    sb.append("    modelId: ").append(toIndentedString(modelId)).append("\n");
    sb.append("    modelName: ").append(toIndentedString(modelName)).append("\n");
    sb.append("    modelServiceName: ").append(toIndentedString(modelServiceName)).append("\n");
    sb.append("    openAiApi: ").append(toIndentedString(openAiApi)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    processId: ").append(toIndentedString(processId)).append("\n");
    sb.append("    processName: ").append(toIndentedString(processName)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    replicas: ").append(toIndentedString(replicas)).append("\n");
    sb.append("    serviceConfig: ").append(toIndentedString(serviceConfig)).append("\n");
    sb.append("    sharedMemory: ").append(toIndentedString(sharedMemory)).append("\n");
    sb.append("    stateType: ").append(toIndentedString(stateType)).append("\n");
    sb.append("    versionId: ").append(toIndentedString(versionId)).append("\n");
    sb.append("    versionName: ").append(toIndentedString(versionName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
