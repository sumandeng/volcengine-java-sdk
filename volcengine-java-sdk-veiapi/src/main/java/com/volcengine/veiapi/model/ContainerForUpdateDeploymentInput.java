/*
 * vei_api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.veiapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.veiapi.model.ConfigForUpdateDeploymentInput;
import com.volcengine.veiapi.model.EnvForUpdateDeploymentInput;
import com.volcengine.veiapi.model.PortForUpdateDeploymentInput;
import com.volcengine.veiapi.model.ResourcesForUpdateDeploymentInput;
import com.volcengine.veiapi.model.VolumeDeviceForUpdateDeploymentInput;
import com.volcengine.veiapi.model.VolumeMountForUpdateDeploymentInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ContainerForUpdateDeploymentInput
 */



public class ContainerForUpdateDeploymentInput {
  @SerializedName("args")
  private List<String> args = null;

  @SerializedName("command")
  private List<String> command = null;

  @SerializedName("configs")
  private List<ConfigForUpdateDeploymentInput> configs = null;

  @SerializedName("device_mounted")
  private Boolean deviceMounted = null;

  @SerializedName("env")
  private List<EnvForUpdateDeploymentInput> env = null;

  @SerializedName("image")
  private String image = null;

  @SerializedName("inited")
  private Boolean inited = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("ports")
  private List<PortForUpdateDeploymentInput> ports = null;

  @SerializedName("post_start")
  private List<String> postStart = null;

  @SerializedName("pre_stop")
  private List<String> preStop = null;

  @SerializedName("privileged")
  private Boolean privileged = null;

  @SerializedName("resources")
  private ResourcesForUpdateDeploymentInput resources = null;

  @SerializedName("volume_devices")
  private List<VolumeDeviceForUpdateDeploymentInput> volumeDevices = null;

  @SerializedName("volume_mounts")
  private List<VolumeMountForUpdateDeploymentInput> volumeMounts = null;

  public ContainerForUpdateDeploymentInput args(List<String> args) {
    this.args = args;
    return this;
  }

  public ContainerForUpdateDeploymentInput addArgsItem(String argsItem) {
    if (this.args == null) {
      this.args = new ArrayList<String>();
    }
    this.args.add(argsItem);
    return this;
  }

   /**
   * Get args
   * @return args
  **/
  @Schema(description = "")
  public List<String> getArgs() {
    return args;
  }

  public void setArgs(List<String> args) {
    this.args = args;
  }

  public ContainerForUpdateDeploymentInput command(List<String> command) {
    this.command = command;
    return this;
  }

  public ContainerForUpdateDeploymentInput addCommandItem(String commandItem) {
    if (this.command == null) {
      this.command = new ArrayList<String>();
    }
    this.command.add(commandItem);
    return this;
  }

   /**
   * Get command
   * @return command
  **/
  @Schema(description = "")
  public List<String> getCommand() {
    return command;
  }

  public void setCommand(List<String> command) {
    this.command = command;
  }

  public ContainerForUpdateDeploymentInput configs(List<ConfigForUpdateDeploymentInput> configs) {
    this.configs = configs;
    return this;
  }

  public ContainerForUpdateDeploymentInput addConfigsItem(ConfigForUpdateDeploymentInput configsItem) {
    if (this.configs == null) {
      this.configs = new ArrayList<ConfigForUpdateDeploymentInput>();
    }
    this.configs.add(configsItem);
    return this;
  }

   /**
   * Get configs
   * @return configs
  **/
  @Valid
  @Schema(description = "")
  public List<ConfigForUpdateDeploymentInput> getConfigs() {
    return configs;
  }

  public void setConfigs(List<ConfigForUpdateDeploymentInput> configs) {
    this.configs = configs;
  }

  public ContainerForUpdateDeploymentInput deviceMounted(Boolean deviceMounted) {
    this.deviceMounted = deviceMounted;
    return this;
  }

   /**
   * Get deviceMounted
   * @return deviceMounted
  **/
  @Schema(description = "")
  public Boolean isDeviceMounted() {
    return deviceMounted;
  }

  public void setDeviceMounted(Boolean deviceMounted) {
    this.deviceMounted = deviceMounted;
  }

  public ContainerForUpdateDeploymentInput env(List<EnvForUpdateDeploymentInput> env) {
    this.env = env;
    return this;
  }

  public ContainerForUpdateDeploymentInput addEnvItem(EnvForUpdateDeploymentInput envItem) {
    if (this.env == null) {
      this.env = new ArrayList<EnvForUpdateDeploymentInput>();
    }
    this.env.add(envItem);
    return this;
  }

   /**
   * Get env
   * @return env
  **/
  @Valid
  @Schema(description = "")
  public List<EnvForUpdateDeploymentInput> getEnv() {
    return env;
  }

  public void setEnv(List<EnvForUpdateDeploymentInput> env) {
    this.env = env;
  }

  public ContainerForUpdateDeploymentInput image(String image) {
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @Schema(description = "")
  public String getImage() {
    return image;
  }

  public void setImage(String image) {
    this.image = image;
  }

  public ContainerForUpdateDeploymentInput inited(Boolean inited) {
    this.inited = inited;
    return this;
  }

   /**
   * Get inited
   * @return inited
  **/
  @Schema(description = "")
  public Boolean isInited() {
    return inited;
  }

  public void setInited(Boolean inited) {
    this.inited = inited;
  }

  public ContainerForUpdateDeploymentInput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ContainerForUpdateDeploymentInput ports(List<PortForUpdateDeploymentInput> ports) {
    this.ports = ports;
    return this;
  }

  public ContainerForUpdateDeploymentInput addPortsItem(PortForUpdateDeploymentInput portsItem) {
    if (this.ports == null) {
      this.ports = new ArrayList<PortForUpdateDeploymentInput>();
    }
    this.ports.add(portsItem);
    return this;
  }

   /**
   * Get ports
   * @return ports
  **/
  @Valid
  @Schema(description = "")
  public List<PortForUpdateDeploymentInput> getPorts() {
    return ports;
  }

  public void setPorts(List<PortForUpdateDeploymentInput> ports) {
    this.ports = ports;
  }

  public ContainerForUpdateDeploymentInput postStart(List<String> postStart) {
    this.postStart = postStart;
    return this;
  }

  public ContainerForUpdateDeploymentInput addPostStartItem(String postStartItem) {
    if (this.postStart == null) {
      this.postStart = new ArrayList<String>();
    }
    this.postStart.add(postStartItem);
    return this;
  }

   /**
   * Get postStart
   * @return postStart
  **/
  @Schema(description = "")
  public List<String> getPostStart() {
    return postStart;
  }

  public void setPostStart(List<String> postStart) {
    this.postStart = postStart;
  }

  public ContainerForUpdateDeploymentInput preStop(List<String> preStop) {
    this.preStop = preStop;
    return this;
  }

  public ContainerForUpdateDeploymentInput addPreStopItem(String preStopItem) {
    if (this.preStop == null) {
      this.preStop = new ArrayList<String>();
    }
    this.preStop.add(preStopItem);
    return this;
  }

   /**
   * Get preStop
   * @return preStop
  **/
  @Schema(description = "")
  public List<String> getPreStop() {
    return preStop;
  }

  public void setPreStop(List<String> preStop) {
    this.preStop = preStop;
  }

  public ContainerForUpdateDeploymentInput privileged(Boolean privileged) {
    this.privileged = privileged;
    return this;
  }

   /**
   * Get privileged
   * @return privileged
  **/
  @Schema(description = "")
  public Boolean isPrivileged() {
    return privileged;
  }

  public void setPrivileged(Boolean privileged) {
    this.privileged = privileged;
  }

  public ContainerForUpdateDeploymentInput resources(ResourcesForUpdateDeploymentInput resources) {
    this.resources = resources;
    return this;
  }

   /**
   * Get resources
   * @return resources
  **/
  @Valid
  @Schema(description = "")
  public ResourcesForUpdateDeploymentInput getResources() {
    return resources;
  }

  public void setResources(ResourcesForUpdateDeploymentInput resources) {
    this.resources = resources;
  }

  public ContainerForUpdateDeploymentInput volumeDevices(List<VolumeDeviceForUpdateDeploymentInput> volumeDevices) {
    this.volumeDevices = volumeDevices;
    return this;
  }

  public ContainerForUpdateDeploymentInput addVolumeDevicesItem(VolumeDeviceForUpdateDeploymentInput volumeDevicesItem) {
    if (this.volumeDevices == null) {
      this.volumeDevices = new ArrayList<VolumeDeviceForUpdateDeploymentInput>();
    }
    this.volumeDevices.add(volumeDevicesItem);
    return this;
  }

   /**
   * Get volumeDevices
   * @return volumeDevices
  **/
  @Valid
  @Schema(description = "")
  public List<VolumeDeviceForUpdateDeploymentInput> getVolumeDevices() {
    return volumeDevices;
  }

  public void setVolumeDevices(List<VolumeDeviceForUpdateDeploymentInput> volumeDevices) {
    this.volumeDevices = volumeDevices;
  }

  public ContainerForUpdateDeploymentInput volumeMounts(List<VolumeMountForUpdateDeploymentInput> volumeMounts) {
    this.volumeMounts = volumeMounts;
    return this;
  }

  public ContainerForUpdateDeploymentInput addVolumeMountsItem(VolumeMountForUpdateDeploymentInput volumeMountsItem) {
    if (this.volumeMounts == null) {
      this.volumeMounts = new ArrayList<VolumeMountForUpdateDeploymentInput>();
    }
    this.volumeMounts.add(volumeMountsItem);
    return this;
  }

   /**
   * Get volumeMounts
   * @return volumeMounts
  **/
  @Valid
  @Schema(description = "")
  public List<VolumeMountForUpdateDeploymentInput> getVolumeMounts() {
    return volumeMounts;
  }

  public void setVolumeMounts(List<VolumeMountForUpdateDeploymentInput> volumeMounts) {
    this.volumeMounts = volumeMounts;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContainerForUpdateDeploymentInput containerForUpdateDeploymentInput = (ContainerForUpdateDeploymentInput) o;
    return Objects.equals(this.args, containerForUpdateDeploymentInput.args) &&
        Objects.equals(this.command, containerForUpdateDeploymentInput.command) &&
        Objects.equals(this.configs, containerForUpdateDeploymentInput.configs) &&
        Objects.equals(this.deviceMounted, containerForUpdateDeploymentInput.deviceMounted) &&
        Objects.equals(this.env, containerForUpdateDeploymentInput.env) &&
        Objects.equals(this.image, containerForUpdateDeploymentInput.image) &&
        Objects.equals(this.inited, containerForUpdateDeploymentInput.inited) &&
        Objects.equals(this.name, containerForUpdateDeploymentInput.name) &&
        Objects.equals(this.ports, containerForUpdateDeploymentInput.ports) &&
        Objects.equals(this.postStart, containerForUpdateDeploymentInput.postStart) &&
        Objects.equals(this.preStop, containerForUpdateDeploymentInput.preStop) &&
        Objects.equals(this.privileged, containerForUpdateDeploymentInput.privileged) &&
        Objects.equals(this.resources, containerForUpdateDeploymentInput.resources) &&
        Objects.equals(this.volumeDevices, containerForUpdateDeploymentInput.volumeDevices) &&
        Objects.equals(this.volumeMounts, containerForUpdateDeploymentInput.volumeMounts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(args, command, configs, deviceMounted, env, image, inited, name, ports, postStart, preStop, privileged, resources, volumeDevices, volumeMounts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContainerForUpdateDeploymentInput {\n");
    
    sb.append("    args: ").append(toIndentedString(args)).append("\n");
    sb.append("    command: ").append(toIndentedString(command)).append("\n");
    sb.append("    configs: ").append(toIndentedString(configs)).append("\n");
    sb.append("    deviceMounted: ").append(toIndentedString(deviceMounted)).append("\n");
    sb.append("    env: ").append(toIndentedString(env)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    inited: ").append(toIndentedString(inited)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ports: ").append(toIndentedString(ports)).append("\n");
    sb.append("    postStart: ").append(toIndentedString(postStart)).append("\n");
    sb.append("    preStop: ").append(toIndentedString(preStop)).append("\n");
    sb.append("    privileged: ").append(toIndentedString(privileged)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    volumeDevices: ").append(toIndentedString(volumeDevices)).append("\n");
    sb.append("    volumeMounts: ").append(toIndentedString(volumeMounts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
