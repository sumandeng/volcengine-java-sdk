/*
 * vei_api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.veiapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListMediapipeInstanceRequest
 */



public class ListMediapipeInstanceRequest {
  @SerializedName("engine_types")
  private List<Integer> engineTypes = null;

  @SerializedName("hci_alias")
  private List<String> hciAlias = null;

  @SerializedName("hci_names")
  private List<String> hciNames = null;

  @SerializedName("instance_name")
  private String instanceName = null;

  @SerializedName("page_index")
  private Integer pageIndex = null;

  @SerializedName("page_size")
  private Integer pageSize = null;

  @SerializedName("project_ids")
  private List<String> projectIds = null;

  @SerializedName("statuses")
  private List<Integer> statuses = null;

  public ListMediapipeInstanceRequest engineTypes(List<Integer> engineTypes) {
    this.engineTypes = engineTypes;
    return this;
  }

  public ListMediapipeInstanceRequest addEngineTypesItem(Integer engineTypesItem) {
    if (this.engineTypes == null) {
      this.engineTypes = new ArrayList<Integer>();
    }
    this.engineTypes.add(engineTypesItem);
    return this;
  }

   /**
   * Get engineTypes
   * @return engineTypes
  **/
  @Schema(description = "")
  public List<Integer> getEngineTypes() {
    return engineTypes;
  }

  public void setEngineTypes(List<Integer> engineTypes) {
    this.engineTypes = engineTypes;
  }

  public ListMediapipeInstanceRequest hciAlias(List<String> hciAlias) {
    this.hciAlias = hciAlias;
    return this;
  }

  public ListMediapipeInstanceRequest addHciAliasItem(String hciAliasItem) {
    if (this.hciAlias == null) {
      this.hciAlias = new ArrayList<String>();
    }
    this.hciAlias.add(hciAliasItem);
    return this;
  }

   /**
   * Get hciAlias
   * @return hciAlias
  **/
  @Schema(description = "")
  public List<String> getHciAlias() {
    return hciAlias;
  }

  public void setHciAlias(List<String> hciAlias) {
    this.hciAlias = hciAlias;
  }

  public ListMediapipeInstanceRequest hciNames(List<String> hciNames) {
    this.hciNames = hciNames;
    return this;
  }

  public ListMediapipeInstanceRequest addHciNamesItem(String hciNamesItem) {
    if (this.hciNames == null) {
      this.hciNames = new ArrayList<String>();
    }
    this.hciNames.add(hciNamesItem);
    return this;
  }

   /**
   * Get hciNames
   * @return hciNames
  **/
  @Schema(description = "")
  public List<String> getHciNames() {
    return hciNames;
  }

  public void setHciNames(List<String> hciNames) {
    this.hciNames = hciNames;
  }

  public ListMediapipeInstanceRequest instanceName(String instanceName) {
    this.instanceName = instanceName;
    return this;
  }

   /**
   * Get instanceName
   * @return instanceName
  **/
  @Schema(description = "")
  public String getInstanceName() {
    return instanceName;
  }

  public void setInstanceName(String instanceName) {
    this.instanceName = instanceName;
  }

  public ListMediapipeInstanceRequest pageIndex(Integer pageIndex) {
    this.pageIndex = pageIndex;
    return this;
  }

   /**
   * Get pageIndex
   * minimum: 1
   * @return pageIndex
  **/
  @NotNull
 @Min(1)  @Schema(required = true, description = "")
  public Integer getPageIndex() {
    return pageIndex;
  }

  public void setPageIndex(Integer pageIndex) {
    this.pageIndex = pageIndex;
  }

  public ListMediapipeInstanceRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * minimum: 1
   * @return pageSize
  **/
  @NotNull
 @Min(1)  @Schema(required = true, description = "")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public ListMediapipeInstanceRequest projectIds(List<String> projectIds) {
    this.projectIds = projectIds;
    return this;
  }

  public ListMediapipeInstanceRequest addProjectIdsItem(String projectIdsItem) {
    if (this.projectIds == null) {
      this.projectIds = new ArrayList<String>();
    }
    this.projectIds.add(projectIdsItem);
    return this;
  }

   /**
   * Get projectIds
   * @return projectIds
  **/
  @Schema(description = "")
  public List<String> getProjectIds() {
    return projectIds;
  }

  public void setProjectIds(List<String> projectIds) {
    this.projectIds = projectIds;
  }

  public ListMediapipeInstanceRequest statuses(List<Integer> statuses) {
    this.statuses = statuses;
    return this;
  }

  public ListMediapipeInstanceRequest addStatusesItem(Integer statusesItem) {
    if (this.statuses == null) {
      this.statuses = new ArrayList<Integer>();
    }
    this.statuses.add(statusesItem);
    return this;
  }

   /**
   * Get statuses
   * @return statuses
  **/
  @Schema(description = "")
  public List<Integer> getStatuses() {
    return statuses;
  }

  public void setStatuses(List<Integer> statuses) {
    this.statuses = statuses;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListMediapipeInstanceRequest listMediapipeInstanceRequest = (ListMediapipeInstanceRequest) o;
    return Objects.equals(this.engineTypes, listMediapipeInstanceRequest.engineTypes) &&
        Objects.equals(this.hciAlias, listMediapipeInstanceRequest.hciAlias) &&
        Objects.equals(this.hciNames, listMediapipeInstanceRequest.hciNames) &&
        Objects.equals(this.instanceName, listMediapipeInstanceRequest.instanceName) &&
        Objects.equals(this.pageIndex, listMediapipeInstanceRequest.pageIndex) &&
        Objects.equals(this.pageSize, listMediapipeInstanceRequest.pageSize) &&
        Objects.equals(this.projectIds, listMediapipeInstanceRequest.projectIds) &&
        Objects.equals(this.statuses, listMediapipeInstanceRequest.statuses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(engineTypes, hciAlias, hciNames, instanceName, pageIndex, pageSize, projectIds, statuses);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListMediapipeInstanceRequest {\n");
    
    sb.append("    engineTypes: ").append(toIndentedString(engineTypes)).append("\n");
    sb.append("    hciAlias: ").append(toIndentedString(hciAlias)).append("\n");
    sb.append("    hciNames: ").append(toIndentedString(hciNames)).append("\n");
    sb.append("    instanceName: ").append(toIndentedString(instanceName)).append("\n");
    sb.append("    pageIndex: ").append(toIndentedString(pageIndex)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    projectIds: ").append(toIndentedString(projectIds)).append("\n");
    sb.append("    statuses: ").append(toIndentedString(statuses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
