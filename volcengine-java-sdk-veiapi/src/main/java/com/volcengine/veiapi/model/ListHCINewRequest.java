/*
 * vei_api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.veiapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.veiapi.model.TagForListHCINewInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListHCINewRequest
 */



public class ListHCINewRequest {
  @SerializedName("account")
  private String account = null;

  @SerializedName("alias")
  private String alias = null;

  @SerializedName("arch")
  private Integer arch = null;

  @SerializedName("bind_from")
  private String bindFrom = null;

  @SerializedName("bind_orderby")
  private Integer bindOrderby = null;

  @SerializedName("bind_to")
  private String bindTo = null;

  @SerializedName("coprocessor")
  private Integer coprocessor = null;

  @SerializedName("hci_model_ref")
  private String hciModelRef = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("nodeGroupIDs")
  private String nodeGroupIDs = null;

  @SerializedName("page_index")
  private Integer pageIndex = null;

  @SerializedName("page_size")
  private String pageSize = null;

  @SerializedName("projectId")
  private String projectId = null;

  @SerializedName("sn")
  private String sn = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("tags")
  private List<TagForListHCINewInput> tags = null;

  public ListHCINewRequest account(String account) {
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @Schema(description = "")
  public String getAccount() {
    return account;
  }

  public void setAccount(String account) {
    this.account = account;
  }

  public ListHCINewRequest alias(String alias) {
    this.alias = alias;
    return this;
  }

   /**
   * Get alias
   * @return alias
  **/
  @Schema(description = "")
  public String getAlias() {
    return alias;
  }

  public void setAlias(String alias) {
    this.alias = alias;
  }

  public ListHCINewRequest arch(Integer arch) {
    this.arch = arch;
    return this;
  }

   /**
   * Get arch
   * @return arch
  **/
  @Schema(description = "")
  public Integer getArch() {
    return arch;
  }

  public void setArch(Integer arch) {
    this.arch = arch;
  }

  public ListHCINewRequest bindFrom(String bindFrom) {
    this.bindFrom = bindFrom;
    return this;
  }

   /**
   * Get bindFrom
   * @return bindFrom
  **/
  @Schema(description = "")
  public String getBindFrom() {
    return bindFrom;
  }

  public void setBindFrom(String bindFrom) {
    this.bindFrom = bindFrom;
  }

  public ListHCINewRequest bindOrderby(Integer bindOrderby) {
    this.bindOrderby = bindOrderby;
    return this;
  }

   /**
   * Get bindOrderby
   * @return bindOrderby
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Integer getBindOrderby() {
    return bindOrderby;
  }

  public void setBindOrderby(Integer bindOrderby) {
    this.bindOrderby = bindOrderby;
  }

  public ListHCINewRequest bindTo(String bindTo) {
    this.bindTo = bindTo;
    return this;
  }

   /**
   * Get bindTo
   * @return bindTo
  **/
  @Schema(description = "")
  public String getBindTo() {
    return bindTo;
  }

  public void setBindTo(String bindTo) {
    this.bindTo = bindTo;
  }

  public ListHCINewRequest coprocessor(Integer coprocessor) {
    this.coprocessor = coprocessor;
    return this;
  }

   /**
   * Get coprocessor
   * @return coprocessor
  **/
  @Schema(description = "")
  public Integer getCoprocessor() {
    return coprocessor;
  }

  public void setCoprocessor(Integer coprocessor) {
    this.coprocessor = coprocessor;
  }

  public ListHCINewRequest hciModelRef(String hciModelRef) {
    this.hciModelRef = hciModelRef;
    return this;
  }

   /**
   * Get hciModelRef
   * @return hciModelRef
  **/
  @Schema(description = "")
  public String getHciModelRef() {
    return hciModelRef;
  }

  public void setHciModelRef(String hciModelRef) {
    this.hciModelRef = hciModelRef;
  }

  public ListHCINewRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ListHCINewRequest nodeGroupIDs(String nodeGroupIDs) {
    this.nodeGroupIDs = nodeGroupIDs;
    return this;
  }

   /**
   * Get nodeGroupIDs
   * @return nodeGroupIDs
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getNodeGroupIDs() {
    return nodeGroupIDs;
  }

  public void setNodeGroupIDs(String nodeGroupIDs) {
    this.nodeGroupIDs = nodeGroupIDs;
  }

  public ListHCINewRequest pageIndex(Integer pageIndex) {
    this.pageIndex = pageIndex;
    return this;
  }

   /**
   * Get pageIndex
   * @return pageIndex
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Integer getPageIndex() {
    return pageIndex;
  }

  public void setPageIndex(Integer pageIndex) {
    this.pageIndex = pageIndex;
  }

  public ListHCINewRequest pageSize(String pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getPageSize() {
    return pageSize;
  }

  public void setPageSize(String pageSize) {
    this.pageSize = pageSize;
  }

  public ListHCINewRequest projectId(String projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getProjectId() {
    return projectId;
  }

  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }

  public ListHCINewRequest sn(String sn) {
    this.sn = sn;
    return this;
  }

   /**
   * Get sn
   * @return sn
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getSn() {
    return sn;
  }

  public void setSn(String sn) {
    this.sn = sn;
  }

  public ListHCINewRequest status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public ListHCINewRequest tags(List<TagForListHCINewInput> tags) {
    this.tags = tags;
    return this;
  }

  public ListHCINewRequest addTagsItem(TagForListHCINewInput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForListHCINewInput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForListHCINewInput> getTags() {
    return tags;
  }

  public void setTags(List<TagForListHCINewInput> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListHCINewRequest listHCINewRequest = (ListHCINewRequest) o;
    return Objects.equals(this.account, listHCINewRequest.account) &&
        Objects.equals(this.alias, listHCINewRequest.alias) &&
        Objects.equals(this.arch, listHCINewRequest.arch) &&
        Objects.equals(this.bindFrom, listHCINewRequest.bindFrom) &&
        Objects.equals(this.bindOrderby, listHCINewRequest.bindOrderby) &&
        Objects.equals(this.bindTo, listHCINewRequest.bindTo) &&
        Objects.equals(this.coprocessor, listHCINewRequest.coprocessor) &&
        Objects.equals(this.hciModelRef, listHCINewRequest.hciModelRef) &&
        Objects.equals(this.name, listHCINewRequest.name) &&
        Objects.equals(this.nodeGroupIDs, listHCINewRequest.nodeGroupIDs) &&
        Objects.equals(this.pageIndex, listHCINewRequest.pageIndex) &&
        Objects.equals(this.pageSize, listHCINewRequest.pageSize) &&
        Objects.equals(this.projectId, listHCINewRequest.projectId) &&
        Objects.equals(this.sn, listHCINewRequest.sn) &&
        Objects.equals(this.status, listHCINewRequest.status) &&
        Objects.equals(this.tags, listHCINewRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(account, alias, arch, bindFrom, bindOrderby, bindTo, coprocessor, hciModelRef, name, nodeGroupIDs, pageIndex, pageSize, projectId, sn, status, tags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListHCINewRequest {\n");
    
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    alias: ").append(toIndentedString(alias)).append("\n");
    sb.append("    arch: ").append(toIndentedString(arch)).append("\n");
    sb.append("    bindFrom: ").append(toIndentedString(bindFrom)).append("\n");
    sb.append("    bindOrderby: ").append(toIndentedString(bindOrderby)).append("\n");
    sb.append("    bindTo: ").append(toIndentedString(bindTo)).append("\n");
    sb.append("    coprocessor: ").append(toIndentedString(coprocessor)).append("\n");
    sb.append("    hciModelRef: ").append(toIndentedString(hciModelRef)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nodeGroupIDs: ").append(toIndentedString(nodeGroupIDs)).append("\n");
    sb.append("    pageIndex: ").append(toIndentedString(pageIndex)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    sn: ").append(toIndentedString(sn)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
