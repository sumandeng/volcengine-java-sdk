/*
 * acep
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.acep.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.acep.model.PublicPortInfoListForListPodOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * PortMappingRuleListForListPodOutput
 */



public class PortMappingRuleListForListPodOutput {
  @SerializedName("PortMappingRuleId")
  private String portMappingRuleId = null;

  @SerializedName("Protocol")
  private String protocol = null;

  @SerializedName("PublicIp")
  private String publicIp = null;

  @SerializedName("PublicPort")
  private Integer publicPort = null;

  @SerializedName("PublicPortInfoList")
  private List<PublicPortInfoListForListPodOutput> publicPortInfoList = null;

  @SerializedName("SourcePort")
  private Integer sourcePort = null;

  @SerializedName("Status")
  private Integer status = null;

  public PortMappingRuleListForListPodOutput portMappingRuleId(String portMappingRuleId) {
    this.portMappingRuleId = portMappingRuleId;
    return this;
  }

   /**
   * Get portMappingRuleId
   * @return portMappingRuleId
  **/
  @Schema(description = "")
  public String getPortMappingRuleId() {
    return portMappingRuleId;
  }

  public void setPortMappingRuleId(String portMappingRuleId) {
    this.portMappingRuleId = portMappingRuleId;
  }

  public PortMappingRuleListForListPodOutput protocol(String protocol) {
    this.protocol = protocol;
    return this;
  }

   /**
   * Get protocol
   * @return protocol
  **/
  @Schema(description = "")
  public String getProtocol() {
    return protocol;
  }

  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }

  public PortMappingRuleListForListPodOutput publicIp(String publicIp) {
    this.publicIp = publicIp;
    return this;
  }

   /**
   * Get publicIp
   * @return publicIp
  **/
  @Schema(description = "")
  public String getPublicIp() {
    return publicIp;
  }

  public void setPublicIp(String publicIp) {
    this.publicIp = publicIp;
  }

  public PortMappingRuleListForListPodOutput publicPort(Integer publicPort) {
    this.publicPort = publicPort;
    return this;
  }

   /**
   * Get publicPort
   * @return publicPort
  **/
  @Schema(description = "")
  public Integer getPublicPort() {
    return publicPort;
  }

  public void setPublicPort(Integer publicPort) {
    this.publicPort = publicPort;
  }

  public PortMappingRuleListForListPodOutput publicPortInfoList(List<PublicPortInfoListForListPodOutput> publicPortInfoList) {
    this.publicPortInfoList = publicPortInfoList;
    return this;
  }

  public PortMappingRuleListForListPodOutput addPublicPortInfoListItem(PublicPortInfoListForListPodOutput publicPortInfoListItem) {
    if (this.publicPortInfoList == null) {
      this.publicPortInfoList = new ArrayList<PublicPortInfoListForListPodOutput>();
    }
    this.publicPortInfoList.add(publicPortInfoListItem);
    return this;
  }

   /**
   * Get publicPortInfoList
   * @return publicPortInfoList
  **/
  @Valid
  @Schema(description = "")
  public List<PublicPortInfoListForListPodOutput> getPublicPortInfoList() {
    return publicPortInfoList;
  }

  public void setPublicPortInfoList(List<PublicPortInfoListForListPodOutput> publicPortInfoList) {
    this.publicPortInfoList = publicPortInfoList;
  }

  public PortMappingRuleListForListPodOutput sourcePort(Integer sourcePort) {
    this.sourcePort = sourcePort;
    return this;
  }

   /**
   * Get sourcePort
   * @return sourcePort
  **/
  @Schema(description = "")
  public Integer getSourcePort() {
    return sourcePort;
  }

  public void setSourcePort(Integer sourcePort) {
    this.sourcePort = sourcePort;
  }

  public PortMappingRuleListForListPodOutput status(Integer status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public Integer getStatus() {
    return status;
  }

  public void setStatus(Integer status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PortMappingRuleListForListPodOutput portMappingRuleListForListPodOutput = (PortMappingRuleListForListPodOutput) o;
    return Objects.equals(this.portMappingRuleId, portMappingRuleListForListPodOutput.portMappingRuleId) &&
        Objects.equals(this.protocol, portMappingRuleListForListPodOutput.protocol) &&
        Objects.equals(this.publicIp, portMappingRuleListForListPodOutput.publicIp) &&
        Objects.equals(this.publicPort, portMappingRuleListForListPodOutput.publicPort) &&
        Objects.equals(this.publicPortInfoList, portMappingRuleListForListPodOutput.publicPortInfoList) &&
        Objects.equals(this.sourcePort, portMappingRuleListForListPodOutput.sourcePort) &&
        Objects.equals(this.status, portMappingRuleListForListPodOutput.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(portMappingRuleId, protocol, publicIp, publicPort, publicPortInfoList, sourcePort, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PortMappingRuleListForListPodOutput {\n");
    
    sb.append("    portMappingRuleId: ").append(toIndentedString(portMappingRuleId)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    publicIp: ").append(toIndentedString(publicIp)).append("\n");
    sb.append("    publicPort: ").append(toIndentedString(publicPort)).append("\n");
    sb.append("    publicPortInfoList: ").append(toIndentedString(publicPortInfoList)).append("\n");
    sb.append("    sourcePort: ").append(toIndentedString(sourcePort)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
