/*
 * resourcecenter
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.resourcecenter.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.resourcecenter.model.FilterForGetResourceCountsOutput;
import com.volcengine.resourcecenter.model.ResourceCountForGetResourceCountsOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * GetResourceCountsResponse
 */



public class GetResourceCountsResponse extends com.volcengine.model.AbstractResponse {
  @SerializedName("Filter")
  private List<FilterForGetResourceCountsOutput> filter = null;

  @SerializedName("GroupByKey")
  private String groupByKey = null;

  @SerializedName("ResourceCounts")
  private List<ResourceCountForGetResourceCountsOutput> resourceCounts = null;

  public GetResourceCountsResponse filter(List<FilterForGetResourceCountsOutput> filter) {
    this.filter = filter;
    return this;
  }

  public GetResourceCountsResponse addFilterItem(FilterForGetResourceCountsOutput filterItem) {
    if (this.filter == null) {
      this.filter = new ArrayList<FilterForGetResourceCountsOutput>();
    }
    this.filter.add(filterItem);
    return this;
  }

   /**
   * Get filter
   * @return filter
  **/
  @Valid
  @Schema(description = "")
  public List<FilterForGetResourceCountsOutput> getFilter() {
    return filter;
  }

  public void setFilter(List<FilterForGetResourceCountsOutput> filter) {
    this.filter = filter;
  }

  public GetResourceCountsResponse groupByKey(String groupByKey) {
    this.groupByKey = groupByKey;
    return this;
  }

   /**
   * Get groupByKey
   * @return groupByKey
  **/
  @Schema(description = "")
  public String getGroupByKey() {
    return groupByKey;
  }

  public void setGroupByKey(String groupByKey) {
    this.groupByKey = groupByKey;
  }

  public GetResourceCountsResponse resourceCounts(List<ResourceCountForGetResourceCountsOutput> resourceCounts) {
    this.resourceCounts = resourceCounts;
    return this;
  }

  public GetResourceCountsResponse addResourceCountsItem(ResourceCountForGetResourceCountsOutput resourceCountsItem) {
    if (this.resourceCounts == null) {
      this.resourceCounts = new ArrayList<ResourceCountForGetResourceCountsOutput>();
    }
    this.resourceCounts.add(resourceCountsItem);
    return this;
  }

   /**
   * Get resourceCounts
   * @return resourceCounts
  **/
  @Valid
  @Schema(description = "")
  public List<ResourceCountForGetResourceCountsOutput> getResourceCounts() {
    return resourceCounts;
  }

  public void setResourceCounts(List<ResourceCountForGetResourceCountsOutput> resourceCounts) {
    this.resourceCounts = resourceCounts;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetResourceCountsResponse getResourceCountsResponse = (GetResourceCountsResponse) o;
    return Objects.equals(this.filter, getResourceCountsResponse.filter) &&
        Objects.equals(this.groupByKey, getResourceCountsResponse.groupByKey) &&
        Objects.equals(this.resourceCounts, getResourceCountsResponse.resourceCounts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filter, groupByKey, resourceCounts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetResourceCountsResponse {\n");
    
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    groupByKey: ").append(toIndentedString(groupByKey)).append("\n");
    sb.append("    resourceCounts: ").append(toIndentedString(resourceCounts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
